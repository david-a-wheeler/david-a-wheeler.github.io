<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE proofs SYSTEM "proof3.dtd">

<?xml-stylesheet type="text/xsl" href="proof3.xsl"?>

<proofs number_of_proofs="1">

<source>lemma-stage1-cp.out</source>

<heading><![CDATA[
Prover9 (32) version Aug-2007, Aug 2007.
Process 11719 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Tue Nov 20 15:05:16 2007
The command was "prover9 -t 60 -f lemma-stage1-cp.in".
]]></heading>

<proof number="1" length="14" max_count="37">

<comments><![CDATA[
% Proof 1 at 0.00 (+ 0.00) seconds: stage1_cP_eq_results.
% Length of proof is 11.
% Level of proof is 4.
% Maximum clause weight is 30.
% Given clauses 4.
]]></comments>

  <clause id="1" type="assumption">
    <literal><![CDATA[
      deterministic(A,B) & portable(A,B) & exactly_correspond(C,A,B,D) & exactly_correspond(E,A,B,F) -> converttext(run(C,V6,V7,D),D,V8) = converttext(run(E,V6,V9,F),F,V8)
    ]]></literal>
    <attribute><![CDATA[
      label(define_determinism)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="2" type="goal">
    <literal><![CDATA[
      converttext(run(stage1,A,B,e2),e2,C) = converttext(run(cP,A,D,eA),eA,C)
    ]]></literal>
    <attribute><![CDATA[
      label(stage1_cP_eq_results)
    ]]></attribute>
    <attribute><![CDATA[
      label(lemma)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <attribute><![CDATA[
      label(goal)
    ]]></attribute>
    <justification jstring="[goal].">
      <j1 rule="goal"/>
    </justification>
  </clause>

  <clause id="3" type="assumption">
    <literal><![CDATA[
      deterministic(sP,lsP)
    ]]></literal>
    <attribute><![CDATA[
      label(sP_deterministic)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="4" type="clausify">
    <literal><![CDATA[
      -deterministic(A,B)
    ]]></literal>
    <literal><![CDATA[
      -portable(A,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,A,B,D)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(E,A,B,F)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(E,V6,V7,F),F,V8) = converttext(run(C,V6,V9,D),D,V8)
    ]]></literal>
    <attribute><![CDATA[
      label(define_determinism)
    ]]></attribute>
    <justification jstring="[clausify(1)].">
      <j1 rule="clausify" parents="1"/>
    </justification>
  </clause>

  <clause id="5" type="assumption">
    <literal><![CDATA[
      exactly_correspond(cP,sP,lsP,eA)
    ]]></literal>
    <attribute><![CDATA[
      label(cP_corresponds_to_sP)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="6" type="assumption">
    <literal><![CDATA[
      exactly_correspond(stage1,sP,lsP,e2)
    ]]></literal>
    <attribute><![CDATA[
      label(stage1_corresponds_sP)
    ]]></attribute>
    <attribute><![CDATA[
      label(previous_lemma)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="7" type="assumption">
    <literal><![CDATA[
      portable(sP,lsP)
    ]]></literal>
    <attribute><![CDATA[
      label(sP_portable)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="8" type="deny">
    <literal><![CDATA[
      converttext(run(stage1,c1,c2,e2),e2,c3) != converttext(run(cP,c1,c4,eA),eA,c3)
    ]]></literal>
    <attribute><![CDATA[
      label(stage1_cP_eq_results)
    ]]></attribute>
    <attribute><![CDATA[
      label(lemma)
    ]]></attribute>
    <attribute><![CDATA[
      answer(stage1_cP_eq_results)
    ]]></attribute>
    <justification jstring="[deny(2)].">
      <j1 rule="deny" parents="2"/>
    </justification>
  </clause>

  <clause id="9">
    <literal><![CDATA[
      -portable(sP,lsP)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,sP,lsP,D)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(C,E,F,D),D,V6) = converttext(run(A,E,V7,B),B,V6)
    ]]></literal>
    <justification jstring="[resolve(3,a,4,a)].">
      <j1 rule="resolve" parents="3 4"/>
    </justification>
  </clause>

  <clause id="10">
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,sP,lsP,D)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(C,E,F,D),D,V6) = converttext(run(A,E,V7,B),B,V6)
    ]]></literal>
    <justification jstring="[resolve(9,a,7,a)].">
      <j1 rule="resolve" parents="9 7"/>
    </justification>
  </clause>

  <clause id="11">
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(A,C,D,B),B,E) = converttext(run(stage1,C,F,e2),e2,E)
    ]]></literal>
    <justification jstring="[resolve(10,a,6,a)].">
      <j1 rule="resolve" parents="10 6"/>
    </justification>
  </clause>

  <clause id="12">
    <literal><![CDATA[
      converttext(run(cP,A,B,eA),eA,C) = converttext(run(stage1,A,D,e2),e2,C)
    ]]></literal>
    <justification jstring="[resolve(11,a,5,a)].">
      <j1 rule="resolve" parents="11 5"/>
    </justification>
  </clause>

  <clause id="13">
    <literal><![CDATA[
      converttext(run(stage1,A,B,e2),e2,C) = converttext(run(cP,A,D,eA),eA,C)
    ]]></literal>
    <justification jstring="[copy(12),flip(a)].">
      <j1 rule="copy" parents="12"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="14">
    <literal><![CDATA[
      $F
    ]]></literal>
    <attribute><![CDATA[
      answer(stage1_cP_eq_results)
    ]]></attribute>
    <justification jstring="[resolve(13,a,8,a)].">
      <j1 rule="resolve" parents="13 8"/>
    </justification>
  </clause>

</proof>

</proofs>
