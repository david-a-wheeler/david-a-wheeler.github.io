============================== Prover9 ===============================
Prover9 (32) version Aug-2007, Aug 2007.
Process 11823 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Tue Nov 20 15:20:36 2007
The command was "prover9 -t 60 -f cP-corresponds-sP.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file cP-corresponds-sP.in

set(prolog_style_variables).
set(restrict_denials).

formulas(assumptions).
cP = compile(sP,cGP,ePeffects,eP,eA) # label(definition_cP).
(all EnvEffects accurately_translates(cGP,lsP,sP,EnvEffects,eP,eA)) # label(cGP_compiles_sP).
accurately_translates(Compiler,Lang,Source,EnvEffects,ExecEnv,TargetEnv) -> exactly_correspond(compile(Source,Compiler,EnvEffects,ExecEnv,TargetEnv),Source,Lang,TargetEnv) # label(define_exactly_correspond).
end_of_list.

formulas(goals).
exactly_correspond(cP,sP,lsP,eA) # label(cP_corresponds_to_sP).
end_of_list.

============================== end of input ==========================

% From the command line: assign(max_seconds, 60).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all EnvEffects accurately_translates(cGP,lsP,sP,EnvEffects,eP,eA)) # label(cGP_compiles_sP) # label(non_clause).  [assumption].
2 accurately_translates(Compiler,Lang,Source,EnvEffects,ExecEnv,TargetEnv) -> exactly_correspond(compile(Source,Compiler,EnvEffects,ExecEnv,TargetEnv),Source,Lang,TargetEnv) # label(define_exactly_correspond) # label(non_clause).  [assumption].
3 exactly_correspond(cP,sP,lsP,eA) # label(cP_corresponds_to_sP) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
cP = compile(sP,cGP,ePeffects,eP,eA) # label(definition_cP).  [assumption].
accurately_translates(cGP,lsP,sP,A,eP,eA) # label(cGP_compiles_sP).  [clausify(1)].
-accurately_translates(A,B,C,D,E,F) | exactly_correspond(compile(C,A,D,E,F),C,B,F) # label(define_exactly_correspond).  [clausify(2)].
-exactly_correspond(cP,sP,lsP,eA) # label(cP_corresponds_to_sP).  [deny(3)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating accurately_translates/6
4 -accurately_translates(A,B,C,D,E,F) | exactly_correspond(compile(C,A,D,E,F),C,B,F) # label(define_exactly_correspond).  [clausify(2)].
5 accurately_translates(cGP,lsP,sP,A,eP,eA) # label(cGP_compiles_sP).  [clausify(1)].
Derived: exactly_correspond(compile(sP,cGP,A,eP,eA),sP,lsP,eA).  [resolve(4,a,5,a)].

============================== end predicate elimination =============

Auto_denials:
  % copying label cP_corresponds_to_sP to answer in negative clause

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, exactly_correspond ]).
Function symbol precedence:  function_order([ eA, sP, cGP, eP, cP, ePeffects, lsP, compile ]).
After inverse_order:  (no changes).
Unfolding symbols: cP/0.

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).

Auto_process settings:  (no changes).

============================== PROOF =================================

% Proof 1 at 0.00 (+ 0.00) seconds: cP_corresponds_to_sP.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 10.
% Given clauses 0.

1 (all EnvEffects accurately_translates(cGP,lsP,sP,EnvEffects,eP,eA)) # label(cGP_compiles_sP) # label(non_clause).  [assumption].
2 accurately_translates(Compiler,Lang,Source,EnvEffects,ExecEnv,TargetEnv) -> exactly_correspond(compile(Source,Compiler,EnvEffects,ExecEnv,TargetEnv),Source,Lang,TargetEnv) # label(define_exactly_correspond) # label(non_clause).  [assumption].
3 exactly_correspond(cP,sP,lsP,eA) # label(cP_corresponds_to_sP) # label(non_clause) # label(goal).  [goal].
4 -accurately_translates(A,B,C,D,E,F) | exactly_correspond(compile(C,A,D,E,F),C,B,F) # label(define_exactly_correspond).  [clausify(2)].
5 accurately_translates(cGP,lsP,sP,A,eP,eA) # label(cGP_compiles_sP).  [clausify(1)].
6 cP = compile(sP,cGP,ePeffects,eP,eA) # label(definition_cP).  [assumption].
7 -exactly_correspond(cP,sP,lsP,eA) # label(cP_corresponds_to_sP) # answer(cP_corresponds_to_sP).  [deny(3)].
8 -exactly_correspond(compile(sP,cGP,ePeffects,eP,eA),sP,lsP,eA) # answer(cP_corresponds_to_sP).  [copy(7),rewrite([6(1)])].
9 exactly_correspond(compile(sP,cGP,A,eP,eA),sP,lsP,eA).  [resolve(4,a,5,a)].
10 $F # answer(cP_corresponds_to_sP).  [resolve(9,a,8,a)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=0. Generated=3. Kept=3. proofs=1.
Usable=0. Sos=0. Demods=1. Limbo=2, Disabled=5. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=0. Back_subsumed=0.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=1 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=39. Demod_rewrites=1.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=0. Nonunit_bsub_feature_tests=0.
Megabytes=0.02.
User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

Exiting with 1 proof.

Process 11823 exit (max_proofs) Tue Nov 20 15:20:36 2007
