<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE proofs SYSTEM "proof3.dtd">

<?xml-stylesheet type="text/xsl" href="proof3.xsl"?>

<proofs number_of_proofs="1">

<source>all-repeats.out</source>

<heading><![CDATA[
Prover9 (32) version Aug-2007, Aug 2007.
Process 2747 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Mon Oct 29 11:17:57 2007
The command was "prover9 -t 60 -f all-repeats.in".
]]></heading>

<proof number="1" length="32" max_count="37">

<comments><![CDATA[
% Proof 1 at 0.00 (+ 0.00) seconds: always_equal.
% Length of proof is 26.
% Level of proof is 7.
% Maximum clause weight is 30.
% Given clauses 12.
]]></comments>

  <clause id="1" type="assumption">
    <literal><![CDATA[
      deterministic(A,B) & portable(A,B) & exactly_correspond(C,A,B,D) & exactly_correspond(E,A,B,F) -> converttext(run(C,V6,V7,D),D,V8) = converttext(run(E,V6,V9,F),F,V8)
    ]]></literal>
    <attribute><![CDATA[
      label(define_determinism)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="2" type="assumption">
    <literal><![CDATA[
      accurately_translates(A,B,C,D,E,F) -> exactly_correspond(compile(C,A,D,E,F),C,B,F)
    ]]></literal>
    <attribute><![CDATA[
      label(define_exactly_correspond)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="3" type="assumption">
    <literal><![CDATA[
      (all A accurately_translates(cT,lsP,sP,A,e1,e2))
    ]]></literal>
    <attribute><![CDATA[
      label(cT_compiles_sP)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="4" type="goal">
    <literal><![CDATA[
      cA = stage2
    ]]></literal>
    <attribute><![CDATA[
      label(always_equal)
    ]]></attribute>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <attribute><![CDATA[
      label(goal)
    ]]></attribute>
    <justification jstring="[goal].">
      <j1 rule="goal"/>
    </justification>
  </clause>

  <clause id="5" type="assumption">
    <literal><![CDATA[
      deterministic(sP,lsP)
    ]]></literal>
    <attribute><![CDATA[
      label(sP_deterministic)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="6" type="clausify">
    <literal><![CDATA[
      -deterministic(A,B)
    ]]></literal>
    <literal><![CDATA[
      -portable(A,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,A,B,D)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(E,A,B,F)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(E,V6,V7,F),F,V8) = converttext(run(C,V6,V9,D),D,V8)
    ]]></literal>
    <attribute><![CDATA[
      label(define_determinism)
    ]]></attribute>
    <justification jstring="[clausify(1)].">
      <j1 rule="clausify" parents="1"/>
    </justification>
  </clause>

  <clause id="7" type="clausify">
    <literal><![CDATA[
      accurately_translates(cT,lsP,sP,A,e1,e2)
    ]]></literal>
    <attribute><![CDATA[
      label(cT_compiles_sP)
    ]]></attribute>
    <justification jstring="[clausify(3)].">
      <j1 rule="clausify" parents="3"/>
    </justification>
  </clause>

  <clause id="8" type="clausify">
    <literal><![CDATA[
      -accurately_translates(A,B,C,D,E,F)
    ]]></literal>
    <literal><![CDATA[
      exactly_correspond(compile(C,A,D,E,F),C,B,F)
    ]]></literal>
    <attribute><![CDATA[
      label(define_exactly_correspond)
    ]]></attribute>
    <justification jstring="[clausify(2)].">
      <j1 rule="clausify" parents="2"/>
    </justification>
  </clause>

  <clause id="9" type="assumption">
    <literal><![CDATA[
      exactly_correspond(cP,sP,lsP,eA)
    ]]></literal>
    <attribute><![CDATA[
      label(cP_corresponds_to_sP)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="10" type="assumption">
    <literal><![CDATA[
      portable(sP,lsP)
    ]]></literal>
    <attribute><![CDATA[
      label(sP_portable)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="11" type="assumption">
    <literal><![CDATA[
      compile(A,B,C,D,E) = extract(converttext(run(B,retarget(A,E),C,D),D,E))
    ]]></literal>
    <attribute><![CDATA[
      label(define_compile)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="12" type="assumption">
    <literal><![CDATA[
      stage1 = compile(sP,cT,e1effects,e1,e2)
    ]]></literal>
    <attribute><![CDATA[
      label(definition_stage1)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="13">
    <literal><![CDATA[
      stage1 = extract(converttext(run(cT,retarget(sP,e2),e1effects,e1),e1,e2))
    ]]></literal>
    <justification jstring="[para(11(a,1),12(a,2))].">
      <j1 rule="para" parents="11 12"/>
    </justification>
  </clause>

  <clause id="14">
    <literal><![CDATA[
      extract(converttext(run(cT,retarget(sP,e2),e1effects,e1),e1,e2)) = stage1
    ]]></literal>
    <justification jstring="[copy(13),flip(a)].">
      <j1 rule="copy" parents="13"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="15" type="assumption">
    <literal><![CDATA[
      stage2 = compile(sA,stage1,e2effects,e2,eArun)
    ]]></literal>
    <attribute><![CDATA[
      label(definition_stage2)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="16">
    <literal><![CDATA[
      stage2 = extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun))
    ]]></literal>
    <justification jstring="[para(11(a,1),15(a,2))].">
      <j1 rule="para" parents="11 15"/>
    </justification>
  </clause>

  <clause id="17" type="assumption">
    <literal><![CDATA[
      cA = compile(sA,cP,eAeffects,eA,eArun)
    ]]></literal>
    <attribute><![CDATA[
      label(definition_cA)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="18">
    <literal><![CDATA[
      cA = extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun))
    ]]></literal>
    <justification jstring="[para(11(a,1),17(a,2))].">
      <j1 rule="para" parents="11 17"/>
    </justification>
  </clause>

  <clause id="19" type="deny">
    <literal><![CDATA[
      cA != stage2
    ]]></literal>
    <attribute><![CDATA[
      label(always_equal)
    ]]></attribute>
    <attribute><![CDATA[
      answer(always_equal)
    ]]></attribute>
    <justification jstring="[deny(4)].">
      <j1 rule="deny" parents="4"/>
    </justification>
  </clause>

  <clause id="20">
    <literal><![CDATA[
      extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)) != stage2
    ]]></literal>
    <justification jstring="[para(18(a,1),19(a,1))].">
      <j1 rule="para" parents="18 19"/>
    </justification>
  </clause>

  <clause id="21">
    <literal><![CDATA[
      extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)) != extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun))
    ]]></literal>
    <justification jstring="[para(16(a,1),20(a,2))].">
      <j1 rule="para" parents="16 20"/>
    </justification>
  </clause>

  <clause id="22">
    <literal><![CDATA[
      extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun)) != extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun))
    ]]></literal>
    <justification jstring="[copy(21),flip(a)].">
      <j1 rule="copy" parents="21"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="23">
    <literal><![CDATA[
      -portable(sP,lsP)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,sP,lsP,D)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(C,E,F,D),D,V6) = converttext(run(A,E,V7,B),B,V6)
    ]]></literal>
    <justification jstring="[resolve(5,a,6,a)].">
      <j1 rule="resolve" parents="5 6"/>
    </justification>
  </clause>

  <clause id="24">
    <literal><![CDATA[
      exactly_correspond(compile(sP,cT,A,e1,e2),sP,lsP,e2)
    ]]></literal>
    <justification jstring="[resolve(7,a,8,a)].">
      <j1 rule="resolve" parents="7 8"/>
    </justification>
  </clause>

  <clause id="25">
    <literal><![CDATA[
      exactly_correspond(extract(converttext(run(cT,retarget(sP,e2),A,e1),e1,e2)),sP,lsP,e2)
    ]]></literal>
    <justification jstring="[para(11(a,1),24(a,1))].">
      <j1 rule="para" parents="11 24"/>
    </justification>
  </clause>

  <clause id="26">
    <literal><![CDATA[
      exactly_correspond(stage1,sP,lsP,e2)
    ]]></literal>
    <justification jstring="[para(14(a,1),25(a,1))].">
      <j1 rule="para" parents="14 25"/>
    </justification>
  </clause>

  <clause id="27">
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      -exactly_correspond(C,sP,lsP,D)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(C,E,F,D),D,V6) = converttext(run(A,E,V7,B),B,V6)
    ]]></literal>
    <justification jstring="[resolve(23,a,10,a)].">
      <j1 rule="resolve" parents="23 10"/>
    </justification>
  </clause>

  <clause id="28">
    <literal><![CDATA[
      -exactly_correspond(A,sP,lsP,B)
    ]]></literal>
    <literal><![CDATA[
      converttext(run(A,C,D,B),B,E) = converttext(run(cP,C,F,eA),eA,E)
    ]]></literal>
    <justification jstring="[resolve(27,a,9,a)].">
      <j1 rule="resolve" parents="27 9"/>
    </justification>
  </clause>

  <clause id="29">
    <literal><![CDATA[
      converttext(run(stage1,A,B,e2),e2,C) = converttext(run(cP,A,D,eA),eA,C)
    ]]></literal>
    <justification jstring="[resolve(28,a,26,a)].">
      <j1 rule="resolve" parents="28 26"/>
    </justification>
  </clause>

  <clause id="30">
    <literal><![CDATA[
      compile(A,stage1,B,e2,C) = extract(converttext(run(cP,retarget(A,C),D,eA),eA,C))
    ]]></literal>
    <justification jstring="[para(29(a,1),11(a,2,1))].">
      <j1 rule="para" parents="29 11"/>
    </justification>
  </clause>

  <clause id="31">
    <literal><![CDATA[
      extract(converttext(run(stage1,retarget(A,B),C,e2),e2,B)) = extract(converttext(run(cP,retarget(A,B),D,eA),eA,B))
    ]]></literal>
    <justification jstring="[para(11(a,1),30(a,1))].">
      <j1 rule="para" parents="11 30"/>
    </justification>
  </clause>

  <clause id="32">
    <literal><![CDATA[
      $F
    ]]></literal>
    <attribute><![CDATA[
      answer(always_equal)
    ]]></attribute>
    <justification jstring="[resolve(31,a,22,a)].">
      <j1 rule="resolve" parents="31 22"/>
    </justification>
  </clause>

</proof>

</proofs>
