============================== prooftrans ============================
Prover9 (32) version Aug-2007, Aug 2007.
Process 19450 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Thu Oct 18 10:25:44 2007
The command was "prover9 -t 60 -f lemma-sp.in".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.00 (+ 0.00) seconds: stage1_corresponds_sP.
% Length of proof is 13.
% Level of proof is 4.
% Maximum clause weight is 15.
% Given clauses 0.

1 accurately_translates(A,B,C,D,E,F) -> exactly_correspond(compile(C,A,D,E,F),C,B,F) # label(define_exactly_correspond) # label(non_clause).  [assumption].
2 (all A accurately_translates(cTGP,lsP,sP,A,e1,e2)) # label(cTGP_compiles_sP) # label(non_clause).  [assumption].
3 exactly_correspond(stage1,sP,lsP,e2) # label(stage1_corresponds_sP) # label(lemma) # label(non_clause) # label(goal).  [goal].
4 accurately_translates(cTGP,lsP,sP,A,e1,e2) # label(cTGP_compiles_sP).  [clausify(2)].
5 -accurately_translates(A,B,C,D,E,F) | exactly_correspond(compile(C,A,D,E,F),C,B,F) # label(define_exactly_correspond).  [clausify(1)].
6 compile(A,B,C,D,E) = extract(run(B,retarget(A,E),C,D)) # label(define_compile).  [assumption].
7 stage1 = compile(sP,cTGP,e1effects,e1,e2) # label(definition_stage1).  [assumption].
8 stage1 = extract(run(cTGP,retarget(sP,e2),e1effects,e1)).  [para(6(a,1),7(a,2))].
9 -exactly_correspond(stage1,sP,lsP,e2) # label(stage1_corresponds_sP) # label(lemma) # answer(stage1_corresponds_sP).  [deny(3)].
10 -exactly_correspond(extract(run(cTGP,retarget(sP,e2),e1effects,e1)),sP,lsP,e2).  [para(8(a,1),9(a,1))].
11 exactly_correspond(compile(sP,cTGP,A,e1,e2),sP,lsP,e2).  [resolve(4,a,5,a)].
12 exactly_correspond(extract(run(cTGP,retarget(sP,e2),A,e1)),sP,lsP,e2).  [para(6(a,1),11(a,1))].
13 $F # answer(stage1_corresponds_sP).  [resolve(12,a,10,a)].

============================== end of proof ==========================
