============================== prooftrans ============================
Prover9 (32) version Aug-2007, Aug 2007.
Process 2754 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Mon Oct 29 11:18:05 2007
The command was "prover9 -t 60 -f repeats.in".
============================== end of head ===========================

set(prolog_style_variables).
============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.00 (+ 0.00) seconds: always_equal.
% Length of proof is 12.
% Level of proof is 3.
% Maximum clause weight is 23.
% Given clauses 2.

1 cA = stage2 # label(always_equal) # label(non_clause) # label(goal).  [goal].
2 compile(A,B,C,D,E) = extract(converttext(run(B,retarget(A,E),C,D),D,E)) # label(define_compile).  [assumption].
3 converttext(run(stage1,A,B,e2),e2,C) = converttext(run(cP,A,D,eA),eA,C) # label(stage1_cP_eq_results) # label(previous_lemma).  [assumption].
4 converttext(run(cP,A,B,eA),eA,C) = converttext(run(stage1,A,D,e2),e2,C).  [copy(3),flip(a)].
5 stage2 = compile(sA,stage1,e2effects,e2,eArun) # label(definition_stage2).  [assumption].
6 stage2 = extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun)).  [para(2(a,1),5(a,2))].
7 cA = compile(sA,cP,eAeffects,eA,eArun) # label(definition_cA).  [assumption].
8 cA = extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)).  [para(2(a,1),7(a,2))].
9 cA != stage2 # label(always_equal) # answer(always_equal).  [deny(1)].
10 extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)) != stage2.  [para(8(a,1),9(a,1))].
11 extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)) != extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun)).  [para(6(a,1),10(a,2))].
12 extract(converttext(run(stage1,retarget(sA,eArun),e2effects,e2),e2,eArun)) != extract(converttext(run(cP,retarget(sA,eArun),eAeffects,eA),eA,eArun)).  [copy(11),flip(a)].
13 compile(A,cP,B,eA,C) = extract(converttext(run(stage1,retarget(A,C),D,e2),e2,C)).  [para(4(a,1),2(a,2,1))].
14 extract(converttext(run(cP,retarget(A,B),C,eA),eA,B)) = extract(converttext(run(stage1,retarget(A,B),D,e2),e2,B)).  [para(2(a,1),13(a,1))].
15 $F # answer(always_equal).  [resolve(14,a,12,a(flip))].

============================== end of proof ==========================
