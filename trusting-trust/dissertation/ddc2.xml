<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE proofs SYSTEM "proof3.dtd">

<?xml-stylesheet type="text/xsl" href="proof3.xsl"?>

<proofs number_of_proofs="1">

<source>ddc2.out</source>

<heading><![CDATA[
Prover9 (32) version Aug-2007, Aug 2007.
Process 24356 was started by dwheeler on dwheeler2-pc.itsd.ida.org,
Wed Sep 26 14:35:42 2007
The command was "prover9 -t 60 -f ddc2.in".
]]></heading>

<proof number="1" length="29" max_count="19">

<comments><![CDATA[
% Proof 1 at 0.00 (+ 0.00) seconds.
% Length of proof is 19.
% Level of proof is 4.
% Maximum clause weight is 8.
% Given clauses 0.
]]></comments>

  <clause id="1" type="assumption">
    <literal><![CDATA[
      functionally_equal_extractions(A,B,C,D) <-> extract(run(compile(C,A),D)) = extract(run(compile(C,B),D))
    ]]></literal>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="2" type="goal">
    <literal><![CDATA[
      stage2 = cA -> cA = correctA
    ]]></literal>
    <attribute><![CDATA[
      label(non_clause)
    ]]></attribute>
    <attribute><![CDATA[
      label(goal)
    ]]></attribute>
    <justification jstring="[goal].">
      <j1 rule="goal"/>
    </justification>
  </clause>

  <clause id="3" type="clausify">
    <literal><![CDATA[
      -functionally_equal_extractions(A,B,C,D)
    ]]></literal>
    <literal><![CDATA[
      extract(run(compile(C,B),D)) = extract(run(compile(C,A),D))
    ]]></literal>
    <justification jstring="[clausify(1)].">
      <j1 rule="clausify" parents="1"/>
    </justification>
  </clause>

  <clause id="4" type="assumption">
    <literal><![CDATA[
      functionally_equal_extractions(cTGP,correctGP,sP,sA)
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="5" type="assumption">
    <literal><![CDATA[
      compile(A,B) = extract(run(B,A))
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="6" type="assumption">
    <literal><![CDATA[
      correctP = compile(sP,correctGP)
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="7">
    <literal><![CDATA[
      correctP = extract(run(correctGP,sP))
    ]]></literal>
    <justification jstring="[para(5(a,1),6(a,2))].">
      <j1 rule="para" parents="5 6"/>
    </justification>
  </clause>

  <clause id="8">
    <literal><![CDATA[
      extract(run(correctGP,sP)) = correctP
    ]]></literal>
    <justification jstring="[copy(7),flip(a)].">
      <j1 rule="copy" parents="7"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="9" type="assumption">
    <literal><![CDATA[
      correctA = compile(sA,correctP)
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="10">
    <literal><![CDATA[
      correctA = extract(run(correctP,sA))
    ]]></literal>
    <justification jstring="[para(5(a,1),9(a,2))].">
      <j1 rule="para" parents="5 9"/>
    </justification>
  </clause>

  <clause id="11">
    <literal><![CDATA[
      extract(run(correctP,sA)) = correctA
    ]]></literal>
    <justification jstring="[copy(10),flip(a)].">
      <j1 rule="copy" parents="10"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="12" type="assumption">
    <literal><![CDATA[
      stage1 = compile(sP,cTGP)
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="13">
    <literal><![CDATA[
      stage1 = extract(run(cTGP,sP))
    ]]></literal>
    <justification jstring="[para(5(a,1),12(a,2))].">
      <j1 rule="para" parents="5 12"/>
    </justification>
  </clause>

  <clause id="14">
    <literal><![CDATA[
      extract(run(cTGP,sP)) = stage1
    ]]></literal>
    <justification jstring="[copy(13),flip(a)].">
      <j1 rule="copy" parents="13"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="15" type="assumption">
    <literal><![CDATA[
      stage2 = compile(sA,stage1)
    ]]></literal>
    <justification jstring="[assumption].">
      <j1 rule="assumption"/>
    </justification>
  </clause>

  <clause id="16">
    <literal><![CDATA[
      stage2 = extract(run(stage1,sA))
    ]]></literal>
    <justification jstring="[para(5(a,1),15(a,2))].">
      <j1 rule="para" parents="5 15"/>
    </justification>
  </clause>

  <clause id="17">
    <literal><![CDATA[
      extract(run(stage1,sA)) = stage2
    ]]></literal>
    <justification jstring="[copy(16),flip(a)].">
      <j1 rule="copy" parents="16"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="18" type="deny">
    <literal><![CDATA[
      cA = stage2
    ]]></literal>
    <justification jstring="[deny(2)].">
      <j1 rule="deny" parents="2"/>
    </justification>
  </clause>

  <clause id="19" type="deny">
    <literal><![CDATA[
      cA != correctA
    ]]></literal>
    <justification jstring="[deny(2)].">
      <j1 rule="deny" parents="2"/>
    </justification>
  </clause>

  <clause id="20">
    <literal><![CDATA[
      stage2 != correctA
    ]]></literal>
    <justification jstring="[para(18(a,1),19(a,1))].">
      <j1 rule="para" parents="18 19"/>
    </justification>
  </clause>

  <clause id="21">
    <literal><![CDATA[
      correctA != stage2
    ]]></literal>
    <justification jstring="[copy(20),flip(a)].">
      <j1 rule="copy" parents="20"/>
      <j2 rule="flip"/>
    </justification>
  </clause>

  <clause id="22">
    <literal><![CDATA[
      extract(run(compile(sP,correctGP),sA)) = extract(run(compile(sP,cTGP),sA))
    ]]></literal>
    <justification jstring="[resolve(4,a,3,a)].">
      <j1 rule="resolve" parents="4 3"/>
    </justification>
  </clause>

  <clause id="23">
    <literal><![CDATA[
      extract(run(extract(run(correctGP,sP)),sA)) = extract(run(compile(sP,cTGP),sA))
    ]]></literal>
    <justification jstring="[para(5(a,1),22(a,1,1,1))].">
      <j1 rule="para" parents="5 22"/>
    </justification>
  </clause>

  <clause id="24">
    <literal><![CDATA[
      extract(run(correctP,sA)) = extract(run(compile(sP,cTGP),sA))
    ]]></literal>
    <justification jstring="[para(8(a,1),23(a,1,1,1))].">
      <j1 rule="para" parents="8 23"/>
    </justification>
  </clause>

  <clause id="25">
    <literal><![CDATA[
      correctA = extract(run(compile(sP,cTGP),sA))
    ]]></literal>
    <justification jstring="[para(11(a,1),24(a,1))].">
      <j1 rule="para" parents="11 24"/>
    </justification>
  </clause>

  <clause id="26">
    <literal><![CDATA[
      correctA = extract(run(extract(run(cTGP,sP)),sA))
    ]]></literal>
    <justification jstring="[para(5(a,1),25(a,2,1,1))].">
      <j1 rule="para" parents="5 25"/>
    </justification>
  </clause>

  <clause id="27">
    <literal><![CDATA[
      correctA = extract(run(stage1,sA))
    ]]></literal>
    <justification jstring="[para(14(a,1),26(a,2,1,1))].">
      <j1 rule="para" parents="14 26"/>
    </justification>
  </clause>

  <clause id="28">
    <literal><![CDATA[
      correctA = stage2
    ]]></literal>
    <justification jstring="[para(17(a,1),27(a,2))].">
      <j1 rule="para" parents="17 27"/>
    </justification>
  </clause>

  <clause id="29">
    <literal><![CDATA[
      $F
    ]]></literal>
    <justification jstring="[resolve(28,a,21,a)].">
      <j1 rule="resolve" parents="28 21"/>
    </justification>
  </clause>

</proof>

</proofs>
