From ken@google.com Wed Nov 04 04:46:57 2009
Return-path: <ken@google.com>
Received: from [10.9.9.161] (helo=patch.runbox.com)
	by taishi.runbox.com with esmtp  (Exim 4.69)
	id 1N5Wpl-0008Jl-8t
	for dwheeler@runbox.com; Wed, 04 Nov 2009 04:46:57 +0100
Received: from exim by patch.runbox.com with spamfilter  (Exim 4.63)
	id 1N5Wpj-0006Rx-BR
	for dwheeler@runbox.com; Wed, 04 Nov 2009 04:46:57 +0100
X-Spam-Checker-Version: SpamAssassin 3.2.5 (2008-06-10) on bars.runbox.com
X-Spam-Level: 
X-Spam-Status: No, score=-3.9 required=4.0 tests=RCVD_IN_DNSWL_MED,RDNS_NONE
	autolearn=disabled version=3.2.5
Received: from [216.239.33.17] (helo=smtp-out.google.com)
	by patch.runbox.com with esmtps  (TLS-1.0:DHE_RSA_AES_256_CBC_SHA1:32)
	(Exim 4.63)
	id 1N5Wpi-0006Qf-Ut
	for dwheeler@dwheeler.com; Wed, 04 Nov 2009 04:46:55 +0100
Received: from spaceape23.eur.corp.google.com (spaceape23.eur.corp.google.com [172.28.16.75])
	by smtp-out.google.com with ESMTP id nA43krgR010356
	for <dwheeler@dwheeler.com>; Wed, 4 Nov 2009 03:46:54 GMT
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed/relaxed; d=google.com; s=beta;
	t=1257306414; bh=SrPcb2IqS2gYzSqtJajxzDQ5bRc=;
	h=MIME-Version:In-Reply-To:References:Date:Message-ID:Subject:From:
	 To:Content-Type:Content-Transfer-Encoding;
	b=CSJN+ykGblSQ1jRIOPlewOlbI+00IJxSP2vQHqHIgdU/guqzq2TYFKqyH+IjeYp26
	 XHS7T2n+ZxyCTKh7uSkeQ==
DomainKey-Signature: a=rsa-sha1; s=beta; d=google.com; c=nofws; q=dns;
	h=mime-version:in-reply-to:references:date:message-id:subject:from:to:
	content-type:content-transfer-encoding:x-system-of-record;
	b=u+rSCTEBXF0XwmO1DC18ApTdXrvGQejldGjpbH+jgW41Yu1+DcFFVkuSo45s0tvUo
	+JiGlqstOkfsA9LIU7J5A==
Received: from pzk40 (pzk40.prod.google.com [10.243.19.168])
	by spaceape23.eur.corp.google.com with ESMTP id nA43kPbw025160
	for <dwheeler@dwheeler.com>; Tue, 3 Nov 2009 19:46:51 -0800
Received: by pzk40 with SMTP id 40so4365180pzk.7
        for <dwheeler@dwheeler.com>; Tue, 03 Nov 2009 19:46:50 -0800 (PST)
MIME-Version: 1.0
Received: by 10.142.120.1 with SMTP id s1mr95837wfc.245.1257306409769; Tue, 03 
	Nov 2009 19:46:49 -0800 (PST)
In-Reply-To: <E1N4zPZ-0004n5-VM@fenris.runbox.com>
References: <E1N4zPZ-0004n5-VM@fenris.runbox.com>
Date: Tue, 3 Nov 2009 19:46:49 -0800
Message-ID: <ad5499b80911031946i5bf3e2ddsa7c7abc2618d387a@mail.gmail.com>
Subject: Re: Fully Countering Trusting Trust through Diverse Double-Compiling 
	(DDC) (xyzzy)
From: Ken Thompson <ken@google.com>
To: dwheeler@dwheeler.com
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
X-System-Of-Record: true

david,

good to hear from you. i have, of coarse, read your DDC paper.
from a theoretical point of view, i think it is very nice,
but from a practical point, i think the cure is at least as
bad as the disease. here are some of my arguments.

1. there are very few people in a position to widely install
and distribute a 'trust' bug. i think the threat is close to
zero. certainly the threat is much smaller than the distribution
of binary-only code that is so prevalent on the net today. how
do you know that one of the norton updates, microsoft patches,
flash or adobe downloads doesnt contain malicious code?
routinely you get megabytes of code off the net and then
type your system password to install it. if i were a bad guy,
i would take the path of least resistance and buy off someone
at adobe.

2. there are a lot more targets than just the C compiler and
there are a lot more disease vectors than the C compiler.
there is SH, C++, CPP, LD, LIBC, AS, AR, LINUX, JAVA, PYTHON,
etc, etc, etc. each of these would have to be generated from
scratch with a separate trusted vector. each one would be more
difficult than your TCC example, while all of them would
be close to impossible. i dont know how to even find all the
potential targets.

3. operationally, it will be hard to keep the trusted vectors
all up to date. a lot of the targets are moving targets
that are distributed from one source. getting and maintaining
a trusted version will be hard. keeping everything working
will be super-human.

again, i really enjoyed your paper. thanks for thinking of me.
ken

On Monday, November 2, 2009, David A. Wheeler <dwheeler@dwheeler.com> wrote=
:
> If you can, I would LOVE to hear any comments you have on my PhD disserta=
tion, "Fully Countering Trusting Trust through Diverse Double-Compiling (DD=
C)". =C2=A0It is available at:
> =C2=A0http://www.dwheeler.com/trusting-trust
>
> In my dissertation I describe a technique to counter the "trusting trust"=
 attack that you so eloquently explained many years ago.
>
> And since I have this excuse to email you, please let me thank you for al=
l the work you've done on Unix. I'm typing this on a Linux box, an intellec=
tual descendent of your work. Every day I build on legacies that you create=
d. =C2=A0Thank you.
>
> --- David A. Wheeler
>


