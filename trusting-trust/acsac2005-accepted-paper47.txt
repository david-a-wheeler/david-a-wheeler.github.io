Subject: ACSAC 2005 - Your paper #47 has been accepted!
Date: 13 Aug 2005 01:00:40 -0000
From: program_chair@acsac.org
Reply-To: program_chair@acsac.org
To: dwheeler@ida.org

Dear David A. Wheeler.

Congratulations!

On behalf of the Program Committee of the 2005 Annual Computer
Security Applications Conference (ACSAC), I am pleased to inform
you that your paper no. 47, titled

   Countering Trusting Trust through Diverse Double-Compiling

has been accepted for publication in the conference proceedings and
presentation at the conference.

At the end of this email you will find a set of comments from the
anonymous paper reviewers. Please address the comments to the greatest
degree possible before submitting the final copy for publication.
We will forward your contact information to the IEEE editor who will
send you the IEEE author kit and submission deadlines.

We are also organizing a "Works in Progress" session and a "Technology
Blitz" session this year. You may want to consider reading those
calls for participation at

   http://www.acsac.org/sub/papers/wip.html
   http://www.acsac.org/sub/tb.html

We all look forward to meeting you in December in Tucson, AZ!

Congratulations,
-Christoph, Charlie, and Pierangela
------------------------------
2005 ACSAC program chairs
program_chair@acsac.org



***************************************************************

A mostly clear presentation of an important concept. I felt the explanation of 
the method was a little hard to understand. I suggest re-working the notation 
and the figure representing the process.

Your writing style is excellent--though I have a couple of suggestions in this 
area. (1) In a technical paper, I would avoid contractions. (2) I would avoid 
the word "evil", replacing it with "malicious" or "compromised" (which you also 
use). (3) In the abstract and elsewhere you are misusing the word 
"purported"--just leave it out. (4) Use "different from", not "different than".

***************************************************************

This is an interesting paper that reports a prototype for solving a
significant and difficult problem. A solution to the Trojan horse
compiler problem was published in a peer-reviewed paper in 1988:

J. McDermott, A technique for removing an important class of Trojan
horses from higher-order languages. In Proc. 11th National Computer
Security Conference, pages 114-117. Baltimore, MD, October 1988.

The submitted paper does not reference this earlier solution, at a
minimum it should. This paper would be better if it discussed the
differences between diverse double-compiling and the already published
solution.

The paper contains a first-person singular reference: "a technique I
call "diverse double-compiling."." The first-person singular should be
removed; it should not be used in peer-reviewed scientific research
publications.

The references are not in ACM format. The date of last retrieval
should be given for each web reference that does not have a
corresponding hard copy publication, e.g. [Buck2004] in the submitted
version's notation.


***************************************************************

I found this paper highly interesting and very well-written.

***************************************************************

Paper suggests an interesting, practical, yet unprovable test to determine if a 
compiler contains malicious code in its binary form.  The paper's fundamental 
insight that a different (diverse) compiler is free of the malicious code and 
therefore a good testbed to verify another compiler's trustworthiness is flawed, 
since only a rigorous analysis of the other compiler can unequivocally prove or 
refute this assumption.

Interesting read on the topic, but only a technique for the least critical of 
users.  Technique is also limited to compiler source, not a general solution.

Figure 1 did not work for me.  I understood the concept from the paper, but not 
from the figure.  More work is needed.

In addition, paper has minor editing errors, here are some that I noted:

language - "This paper begins with a background..." -- drop "a"

what's the point of include the SHA-1 hash values in the paper text?

***************************************************************

The paper describes a technique ("diverse double compiling") for dealing with 
the threat of Trojan horses in compilers, as described in Ken Thompson's famous 
paper. The basic idea is to use a trusted compiler to compile the source code 
from which the potentially malicious binary compiler was derived, and then 
compare the output of the trusted compiler with the potentially malicious 
version and see if they match bit for bit. The argument is that if they match, 
then the original version is OK.  The paper is of interest because it actually 
attempts to carry out this experiment using two different C compilers. The 
author includes considerable background discussion, but the references are 
either relatively old or to recent unrefereed work in web publications, so a 
good deal of current programming language security work is ignored.  So is a 
somewhat obscure, but directly relevant work by John McDermott published in the 
National Computer Security Conference in 1988; see:
http://chacs.nrl.navy.mil/publications/CHACS/Before1990/1988mcdermott-NCSC88Preprint.pdf
Nevertheless, I think the work holds some interest for the ACSAC audience and 
could be an interesting presentation.






