	.INCLUDE	"interp6502.s"
;    1: CONST SHOWGR    = $C050
					; SHOWGR = 49232
;    2: CONST SHOWFULL  = $C052
					; SHOWFULL = 49234
;    3: CONST SHOWPG1   = $C054
					; SHOWPG1 = 49236
;    4: CONST SHOWPG2   = $C055
					; SHOWPG2 = 49237
;    5: CONST SHOWLORES = $C056
					; SHOWLORES = 49238
;    6: 
;    7: DEF TEXTMODE
C0008:					; TEXTMODE()
;    8:   ^SHOWPG1
	JSR	INTERP
	DB	$2C,$54,$C0		; CW	49236
	DB	$60			; LB
	DB	$30			; DROP
;    9:   RETURN ROMCALL(0, 0, 0, 0, $FB39)
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$2C,$39,$FB		; CW	64313
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$5C			; RET
;   10: END
;   11: 
;   12: DEF CPYBUF
C0010:					; CPYBUF()
;   13:   MEMCPY($0400, $0800, 1016)
	JSR	INTERP
	DB	$2C,$00,$04		; CW	1024
	DB	$2C,$00,$08		; CW	2048
	DB	$2C,$F8,$03		; CW	1016
	DB	$54,<C0003,>C0003	; CALL	C0003
	DB	$30			; DROP
;   14: END
	DB	$00			; ZERO
	DB	$5C			; RET
;   15: 
;   16: DEF GRMODE
C0012:					; GRMODE()
;   17:   ROMCALL(0, 0, 0, 0, $F832)
	JSR	INTERP
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$2C,$32,$F8		; CW	63538
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$30			; DROP
;   18:   ^SHOWGR
	DB	$2C,$50,$C0		; CW	49232
	DB	$60			; LB
	DB	$30			; DROP
;   19:   ^SHOWFULL
	DB	$2C,$52,$C0		; CW	49234
	DB	$60			; LB
	DB	$30			; DROP
;   20:   CPYBUF
	DB	$54,<C0010,>C0010	; CALL	C0010
	DB	$30			; DROP
;   21:   ^SHOWPG2
	DB	$2C,$55,$C0		; CW	49237
	DB	$60			; LB
	DB	$30			; DROP
;   22:   RETURN ^SHOWLORES
	DB	$2C,$56,$C0		; CW	49238
	DB	$60			; LB
	DB	$5C			; RET
;   23: END
;   24: 
;   25: DEF COLOR(CLR)
C0014:					; COLOR()
					; CLR = 2
;   26:   RETURN ROMCALL(CLR, 0, 0, 0, $F864)
	JSR	INTERP
	DB	$58,$04,$01		; ENTER	4,1
	DB	$66,$02			; LLW	2
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$00			; ZERO
	DB	$2C,$64,$F8		; CW	63588
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$5A			; LEAVE
;   27: END
;   28: 
;   29: DEF PLOT(X, Y)
C0016:					; PLOT()
					; X = 2
					; Y = 4
;   30:   RETURN ROMCALL(Y, 0, X, 0, $F800)
	JSR	INTERP
	DB	$58,$06,$02		; ENTER	6,2
	DB	$66,$04			; LLW	4
	DB	$00			; ZERO
	DB	$66,$02			; LLW	2
	DB	$00			; ZERO
	DB	$2C,$00,$F8		; CW	63488
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$5A			; LEAVE
;   31: END
;   32: 
;   33: DEF HLIN(LEFT, RIGHT, VERT)
C0018:					; HLIN()
					; LEFT = 2
					; RIGHT = 4
					; VERT = 6
;   34:   ^($2C) = RIGHT
	JSR	INTERP
	DB	$58,$08,$03		; ENTER	8,3
	DB	$2A,$2C			; CB	44
	DB	$66,$04			; LLW	4
	DB	$70			; SB
;   35:   RETURN ROMCALL(VERT, 0, LEFT, 0, $F819)
	DB	$66,$06			; LLW	6
	DB	$00			; ZERO
	DB	$66,$02			; LLW	2
	DB	$00			; ZERO
	DB	$2C,$19,$F8		; CW	63513
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$5A			; LEAVE
;   36: END
;   37: 
;   38: DEF VLIN(TOP, BOTTOM, HORZ)
C0020:					; VLIN()
					; TOP = 2
					; BOTTOM = 4
					; HORZ = 6
;   39:   ^($2D) = BOTTOM
	JSR	INTERP
	DB	$58,$08,$03		; ENTER	8,3
	DB	$2A,$2D			; CB	45
	DB	$66,$04			; LLW	4
	DB	$70			; SB
;   40:   RETURN ROMCALL(TOP, 0, HORZ, 0, $F828)
	DB	$66,$02			; LLW	2
	DB	$00			; ZERO
	DB	$66,$06			; LLW	6
	DB	$00			; ZERO
	DB	$2C,$28,$F8		; CW	63528
	DB	$54,<C0000,>C0000	; CALL	C0000
	DB	$5A			; LEAVE
;   41: END
;   42: 
;   43: DEFN LINE(X1, Y1, X2, Y2)
C0022:					; LINE()
					; X1 = 2
					; Y1 = 4
					; X2 = 6
					; Y2 = 8
;   44:   BYTE DX, DY, DX2, DY2, PP, S
					; DX = 10
					; DY = 11
					; DX2 = 12
					; DY2 = 13
					; PP = 14
					; S = 15
;   45:   WORD SX, SY, ERR, DXDY2
					; SX = 16
					; SY = 18
					; ERR = 20
					; DXDY2 = 22
;   46: 
;   47:   IF X1 < X2
	LDA	#24
	STA	FRMSZ
	LDA	#4
	STA	NPARMS
	JSR	_ENTER
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$00
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0024
:
;   48:     SX = 1
	LDA	#$01
	LDY	#$00
	STA	ESTKL-2,X
	TYA
	LDY	#$11
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   49:     DX = X2 - X1
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	EOR	#$FF
	SEC
	ADC	ESTKL-2,X
	STA	ESTKL-2,X
	TYA
	EOR	#$FF
	ADC	ESTKH-2,X
	TAY
	LDA	ESTKL-2,X
	LDY	#$0A
	STA	(FP),Y
;   50:   ELSE
	JMP	C0025
C0024:
;   51:     SX = -1
	LDA	#$FF
	TAY
	STA	ESTKL-2,X
	TYA
	LDY	#$11
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   52:     DX = X1 - X2
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	EOR	#$FF
	SEC
	ADC	ESTKL-2,X
	STA	ESTKL-2,X
	TYA
	EOR	#$FF
	ADC	ESTKH-2,X
	TAY
	LDA	ESTKL-2,X
	LDY	#$0A
	STA	(FP),Y
;   53:   FIN
C0025:
;   54:   IF Y1 < Y2
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$00
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0026
:
;   55:     SY = 1
	LDA	#$01
	LDY	#$00
	STA	ESTKL-2,X
	TYA
	LDY	#$13
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   56:     DY = Y2 - Y1
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	EOR	#$FF
	SEC
	ADC	ESTKL-2,X
	STA	ESTKL-2,X
	TYA
	EOR	#$FF
	ADC	ESTKH-2,X
	TAY
	LDA	ESTKL-2,X
	LDY	#$0B
	STA	(FP),Y
;   57:   ELSE
	JMP	C0027
C0026:
;   58:     SY = -1
	LDA	#$FF
	TAY
	STA	ESTKL-2,X
	TYA
	LDY	#$13
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   59:     DY = Y1 - Y2
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	EOR	#$FF
	SEC
	ADC	ESTKL-2,X
	STA	ESTKL-2,X
	TYA
	EOR	#$FF
	ADC	ESTKH-2,X
	TAY
	LDA	ESTKL-2,X
	LDY	#$0B
	STA	(FP),Y
;   60:   FIN
C0027:
;   61:   IF DX == 0 AND DY == 0
	LDY	#$0A
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDA	#$00
	TAY
	CMP	ESTKL-2,X
	BNE	:+
	TYA
	LDY	#$FF
	CMP	ESTKH-2,X
	BEQ	:++
:	LDY	#$00
:	TYA
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$0B
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDA	#$00
	TAY
	CMP	ESTKL-4,X
	BNE	:+
	TYA
	LDY	#$FF
	CMP	ESTKH-4,X
	BEQ	:++
:	LDY	#$00
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BEQ	:+++
:	LDY	#$FF
	LDA	ESTKL-2,X
	BNE	:+
	LDA	ESTKH-2,X
	BNE	:+
	INY
:	TYA
:
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0028
:
;   62:     RETURN ROMCALL(Y1, 0, X1, 0, $F800)
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	STA	ESTKL-6,X
	LDA	#$00
	TAY
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$00
	LDY	#$F8
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	TXA
	PHA
	SEC
	SBC	#10
	TAX
	JSR	C0000
	PLA
	TAX
	DEX
	DEX
	JMP	_LEAVE
;   63:   FIN
C0028:
C0029:
;   64:   DX2   = DX << 1
	LDY	#$0A
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDA	#$01
	LDY	#$00
	TAY
	BEQ	:++
:	ASL	ESTKL-2,X
	ROL	ESTKH-2,X
	DEY
	BNE	:-
:
	LDA	ESTKL-2,X
	LDY	#$0C
	STA	(FP),Y
;   65:   DY2   = DY << 1
	LDY	#$0B
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDA	#$01
	LDY	#$00
	TAY
	BEQ	:++
:	ASL	ESTKL-2,X
	ROL	ESTKH-2,X
	DEY
	BNE	:-
:
	LDA	ESTKL-2,X
	LDY	#$0D
	STA	(FP),Y
;   66:   DXDY2 = DX2 - DY2
	LDY	#$0C
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$0D
	LDA	(FP),Y
	LDY	#$00
	EOR	#$FF
	SEC
	ADC	ESTKL-2,X
	STA	ESTKL-2,X
	TYA
	EOR	#$FF
	ADC	ESTKH-2,X
	TAY
	TYA
	LDY	#$17
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   67:   ERR   = DXDY2
	LDY	#$17
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDY	ESTKH-2,X
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-2,X
	STA	(FP),Y
;   68:   IF DX > DY
	LDY	#$0A
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$0B
	LDA	(FP),Y
	LDY	#$00
	CMP	ESTKL-2,X
	TYA
	LDY	#$00
	SBC	ESTKH-2,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0030
:
;   69:     PP = X1
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	LDY	#$0E
	STA	(FP),Y
;   70:     IF SX < 0
	LDY	#$11
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$00
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0032
:
;   71:       FOR S = PP DOWNTO X2
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
C0035:
	LDA	ESTKL-2,X
	LDY	#$0F
	STA	(FP),Y
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	JMP	C0034
:
	LDA	ESTKL-2,X
	CMP	#$00
	BNE	:+
	DEC	ESTKH-2,X
:	DEC	ESTKL-2,X
;   72:         IF ERR < DX
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0A
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$00
	LDA	ESTKL-4,X
	CMP	ESTKL-6,X
	LDA	ESTKH-4,X
	SBC	ESTKH-6,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0036
:
;   73:           ^($2C) = PP
	LDA	#$2C
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-4,X)
;   74:           ROMCALL(Y1, 0, S, 0, $F819)
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDA	#$00
	TAY
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$00
	TAY
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	LDA	#$19
	LDY	#$F8
	STA	ESTKL-12,X
	STY	ESTKH-12,X
	TXA
	PHA
	SEC
	SBC	#12
	TAX
	JSR	C0000
	PLA
	TAX
;   75:           PP  = S
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	LDY	#$0E
	STA	(FP),Y
;   76:           ERR = ERR + DXDY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$17
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   77:           Y1  = Y1 + SY
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$13
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$05
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   78:         ELSE
	JMP	C0037
C0036:
;   79:           ERR = ERR - DY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0D
	LDA	(FP),Y
	LDY	#$00
	EOR	#$FF
	SEC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	EOR	#$FF
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   80:         FIN
C0037:
;   81:       NEXT
	JMP	C0035
C0034:
;   82:       ^($2C) = PP
	LDA	#$2C
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-2,X)
;   83:       ROMCALL(Y2, 0, X2, 0, $F819)
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	STA	ESTKL-6,X
	LDA	#$00
	TAY
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$19
	LDY	#$F8
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	TXA
	PHA
	SEC
	SBC	#10
	TAX
	JSR	C0000
	PLA
	TAX
;   84:     ELSE
	JMP	C0033
C0032:
;   85:       FOR S = PP TO X2
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
C0039:
	LDA	ESTKL-2,X
	LDY	#$0F
	STA	(FP),Y
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	CMP	ESTKL-2,X
	TYA
	SBC	ESTKH-2,X
	BPL	:+
	JMP	C0038
:
	INC	ESTKL-2,X
	BNE	:+
	INC	ESTKH-2,X
:
;   86:         IF ERR < DX
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0A
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$00
	LDA	ESTKL-4,X
	CMP	ESTKL-6,X
	LDA	ESTKH-4,X
	SBC	ESTKH-6,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0040
:
;   87:           ^($2C) = S
	LDA	#$2C
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-4,X)
;   88:           ROMCALL(Y1, 0, PP, 0, $F819)
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDA	#$00
	TAY
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$00
	TAY
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	LDA	#$19
	LDY	#$F8
	STA	ESTKL-12,X
	STY	ESTKH-12,X
	TXA
	PHA
	SEC
	SBC	#12
	TAX
	JSR	C0000
	PLA
	TAX
;   89:           PP  = S
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	LDY	#$0E
	STA	(FP),Y
;   90:           ERR = ERR + DXDY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$17
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   91:           Y1  = Y1 + SY
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$13
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$05
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   92:         ELSE
	JMP	C0041
C0040:
;   93:           ERR = ERR - DY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0D
	LDA	(FP),Y
	LDY	#$00
	EOR	#$FF
	SEC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	EOR	#$FF
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;   94:         FIN
C0041:
;   95:       NEXT
	JMP	C0039
C0038:
;   96:       ^($2C) = X2
	LDA	#$2C
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	(ESTK-2,X)
;   97:       ROMCALL(Y2, 0, PP, 0, $F819)
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDA	#$00
	TAY
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$19
	LDY	#$F8
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	TXA
	PHA
	SEC
	SBC	#10
	TAX
	JSR	C0000
	PLA
	TAX
;   98:     FIN
C0033:
;   99:   ELSE
	JMP	C0031
C0030:
;  100:     PP = Y1
	LDY	#$05
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	LDY	#$0E
	STA	(FP),Y
;  101:     IF SY < 0
	LDY	#$13
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$00
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0042
:
;  102:       FOR S = PP DOWNTO Y2
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
C0045:
	LDA	ESTKL-2,X
	LDY	#$0F
	STA	(FP),Y
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDA	ESTKL-2,X
	CMP	ESTKL-4,X
	LDA	ESTKH-2,X
	SBC	ESTKH-4,X
	BPL	:+
	JMP	C0044
:
	LDA	ESTKL-2,X
	CMP	#$00
	BNE	:+
	DEC	ESTKH-2,X
:	DEC	ESTKL-2,X
;  103:         IF ERR > -DY
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0B
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDA	#$00
	SEC
	SBC	ESTKL-6,X
	STA	ESTKL-6,X
	LDA	#$00
	SBC	ESTKH-6,X
	TAY
	LDA	ESTKL-6,X
	CMP	ESTKL-4,X
	TYA
	LDY	#$00
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0046
:
;  104:           ^($2D) = PP
	LDA	#$2D
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-4,X)
;  105:           ROMCALL(S, 0, X1, 0, $F828)
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDA	#$00
	TAY
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-8,X
	LDA	(FP),Y
	STA	ESTKL-8,X
	LDA	#$00
	TAY
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	LDA	#$28
	LDY	#$F8
	STA	ESTKL-12,X
	STY	ESTKH-12,X
	TXA
	PHA
	SEC
	SBC	#12
	TAX
	JSR	C0000
	PLA
	TAX
;  106:           PP  = S
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	LDY	#$0E
	STA	(FP),Y
;  107:           ERR = ERR + DXDY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$17
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  108:           X1  = X1 + SX
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$11
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$03
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  109:         ELSE
	JMP	C0047
C0046:
;  110:           ERR = ERR + DX2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0C
	LDA	(FP),Y
	LDY	#$00
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  111:        FIN
C0047:
;  112:       NEXT
	JMP	C0045
C0044:
;  113:       ^($2D) = PP
	LDA	#$2D
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-2,X)
;  114:       ROMCALL(Y2, 0, X2, 0, $F828)
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-2,X
	LDA	(FP),Y
	STA	ESTKL-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	STA	ESTKL-6,X
	LDA	#$00
	TAY
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$28
	LDY	#$F8
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	TXA
	PHA
	SEC
	SBC	#10
	TAX
	JSR	C0000
	PLA
	TAX
;  115:     ELSE
	JMP	C0043
C0042:
;  116:       FOR S = PP TO Y2
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
C0049:
	LDA	ESTKL-2,X
	LDY	#$0F
	STA	(FP),Y
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	LDY	ESTKH-4,X
	CMP	ESTKL-2,X
	TYA
	SBC	ESTKH-2,X
	BPL	:+
	JMP	C0048
:
	INC	ESTKL-2,X
	BNE	:+
	INC	ESTKH-2,X
:
;  117:         IF ERR > -DY
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0B
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDA	#$00
	SEC
	SBC	ESTKL-6,X
	STA	ESTKL-6,X
	LDA	#$00
	SBC	ESTKH-6,X
	TAY
	LDA	ESTKL-6,X
	CMP	ESTKL-4,X
	TYA
	LDY	#$00
	SBC	ESTKH-4,X
	BPL	:+
	DEY
:	TYA
	CMP	#$00
	BNE	:+
	CPY	#$00
	BNE	:+
	JMP	C0050
:
;  118:           ^($2D) = S
	LDA	#$2D
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	STA	(ESTK-4,X)
;  119:           ROMCALL(PP, 0, X1, 0, $F828)
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDA	#$00
	TAY
	STA	ESTKL-6,X
	STY	ESTKH-6,X
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-8,X
	LDA	(FP),Y
	STA	ESTKL-8,X
	LDA	#$00
	TAY
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	LDA	#$28
	LDY	#$F8
	STA	ESTKL-12,X
	STY	ESTKH-12,X
	TXA
	PHA
	SEC
	SBC	#12
	TAX
	JSR	C0000
	PLA
	TAX
;  120:           PP  = S
	LDY	#$0F
	LDA	(FP),Y
	LDY	#$00
	LDY	#$0E
	STA	(FP),Y
;  121:           ERR = ERR + DXDY2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$17
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  122:           X1  = X1 + SX
	LDY	#$03
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$11
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	LDY	ESTKH-6,X
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$03
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  123:         ELSE
	JMP	C0051
C0050:
;  124:           ERR = ERR + DX2
	LDY	#$15
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	ESTKL-4,X
	LDY	#$0C
	LDA	(FP),Y
	LDY	#$00
	CLC
	ADC	ESTKL-4,X
	STA	ESTKL-4,X
	TYA
	ADC	ESTKH-4,X
	TAY
	TYA
	LDY	#$15
	STA	(FP),Y
	DEY
	LDA	ESTKL-4,X
	STA	(FP),Y
;  125:         FIN
C0051:
;  126:       NEXT
	JMP	C0049
C0048:
;  127:       ^($2D) = Y2
	LDA	#$2D
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDY	#$09
	LDA	(FP),Y
	DEY
	STA	ESTKH-4,X
	LDA	(FP),Y
	STA	(ESTK-2,X)
;  128:       ROMCALL(PP, 0, X2, 0, $F828)
	LDY	#$0E
	LDA	(FP),Y
	LDY	#$00
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	LDA	#$00
	TAY
	STA	ESTKL-4,X
	STY	ESTKH-4,X
	LDY	#$07
	LDA	(FP),Y
	DEY
	STA	ESTKH-6,X
	LDA	(FP),Y
	STA	ESTKL-6,X
	LDA	#$00
	TAY
	STA	ESTKL-8,X
	STY	ESTKH-8,X
	LDA	#$28
	LDY	#$F8
	STA	ESTKL-10,X
	STY	ESTKH-10,X
	TXA
	PHA
	SEC
	SBC	#10
	TAX
	JSR	C0000
	PLA
	TAX
;  129:     FIN
C0043:
;  130:   FIN
C0031:
;  131: END
	LDA	#$00
	TAY
	STA	ESTKL-2,X
	STY	ESTKH-2,X
	DEX
	DEX
	JMP	_LEAVE
;  132: 
;  133: DEF RADAR(C)
C0052:					; RADAR()
					; C = 2
;  134:   BYTE I
					; I = 4
;  135: 
;  136:   FOR I = 0 TO 38
	JSR	INTERP
	DB	$58,$05,$01		; ENTER	5,1
	DB	$00			; ZERO
C0055:
	DB	$6C,$04			; DLB	4
	DB	$2A,$26			; CB	38
	DB	$3A,<C0054,>C0054	; BRGT	C0054
	DB	$0C			; INCR
;  137:     COLOR(C)
	DB	$66,$02			; LLW	2
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  138:     LINE(20, 24, I, 0)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$64,$04			; LLB	4
	DB	$00			; ZERO
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  139:     CPYBUF
	DB	$54,<C0010,>C0010	; CALL	C0010
	DB	$30			; DROP
;  140:     COLOR(0)
	DB	$00			; ZERO
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  141:     LINE(20, 24, I, 0)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$64,$04			; LLB	4
	DB	$00			; ZERO
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  142:   NEXT
	DB	$50,<C0055,>C0055	; JUMP	C0055
C0054:
	DB	$30			; DROP
;  143:   FOR I = 0 TO 46
	DB	$00			; ZERO
C0057:
	DB	$6C,$04			; DLB	4
	DB	$2A,$2E			; CB	46
	DB	$3A,<C0056,>C0056	; BRGT	C0056
	DB	$0C			; INCR
;  144:     COLOR(C)
	DB	$66,$02			; LLW	2
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  145:     LINE(20, 24, 39, I)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$2A,$27			; CB	39
	DB	$64,$04			; LLB	4
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  146:     CPYBUF
	DB	$54,<C0010,>C0010	; CALL	C0010
	DB	$30			; DROP
;  147:     COLOR(0)
	DB	$00			; ZERO
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  148:     LINE(20, 24, 39, I)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$2A,$27			; CB	39
	DB	$64,$04			; LLB	4
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  149:   NEXT
	DB	$50,<C0057,>C0057	; JUMP	C0057
C0056:
	DB	$30			; DROP
;  150:   FOR I = 39 DOWNTO 1
	DB	$2A,$27			; CB	39
C0059:
	DB	$6C,$04			; DLB	4
	DB	$2A,$01			; CB	1
	DB	$38,<C0058,>C0058	; BRLT	C0058
	DB	$0E			; DECR
;  151:     COLOR(C)
	DB	$66,$02			; LLW	2
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  152:     LINE(20, 24, I, 47)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$64,$04			; LLB	4
	DB	$2A,$2F			; CB	47
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  153:     CPYBUF
	DB	$54,<C0010,>C0010	; CALL	C0010
	DB	$30			; DROP
;  154:     COLOR(0)
	DB	$00			; ZERO
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  155:     LINE(20, 24, I, 47)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$64,$04			; LLB	4
	DB	$2A,$2F			; CB	47
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  156:   NEXT
	DB	$50,<C0059,>C0059	; JUMP	C0059
C0058:
	DB	$30			; DROP
;  157:   FOR I = 47 DOWNTO 1
	DB	$2A,$2F			; CB	47
C0061:
	DB	$6C,$04			; DLB	4
	DB	$2A,$01			; CB	1
	DB	$38,<C0060,>C0060	; BRLT	C0060
	DB	$0E			; DECR
;  158:     COLOR(C)
	DB	$66,$02			; LLW	2
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  159:     LINE(20, 24, 0, I)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$00			; ZERO
	DB	$64,$04			; LLB	4
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  160:     CPYBUF
	DB	$54,<C0010,>C0010	; CALL	C0010
	DB	$30			; DROP
;  161:     COLOR(0)
	DB	$00			; ZERO
	DB	$54,<C0014,>C0014	; CALL	C0014
	DB	$30			; DROP
;  162:     LINE(20, 24, 0, I)
	DB	$2A,$14			; CB	20
	DB	$2A,$18			; CB	24
	DB	$00			; ZERO
	DB	$64,$04			; LLB	4
	DB	$54,<C0022,>C0022	; CALL	C0022
	DB	$30			; DROP
;  163:   NEXT
	DB	$50,<C0061,>C0061	; JUMP	C0061
C0060:
	DB	$30			; DROP
;  164: END
	DB	$00			; ZERO
	DB	$5A			; LEAVE
;  165: 
;  166: GRMODE
START:	JSR	INTERP
	DB	$54,<C0012,>C0012	; CALL	C0012
	DB	$30			; DROP
;  167: REPEAT
C0063:
;  168:   RADAR(15)
	DB	$2A,$0F			; CB	15
	DB	$54,<C0052,>C0052	; CALL	C0052
	DB	$30			; DROP
;  169: UNTIL ^$C000 > 127
	DB	$2C,$00,$C0		; CW	49152
	DB	$60			; LB
	DB	$2A,$7F			; CB	127
	DB	$44			; ISGT
	DB	$4C,<C0063,>C0063	; BRFLS	C0063
C0062:
;  170: ^$C010
	DB	$2C,$10,$C0		; CW	49168
	DB	$60			; LB
	DB	$30			; DROP
;  171: TEXTMODE
	DB	$54,<C0008,>C0008	; CALL	C0008
	DB	$30			; DROP
;  172: DONE
	DB	$00			; ZERO
	DB	$5E			; EXIT
