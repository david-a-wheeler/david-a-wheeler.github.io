This is the directory for "alang", a brief demo of the
ideas for "SIMPL" (a technique for more efficiently implementing
high-level languages on the obsolete 6502 chip).

This is purely an intellectual exercise, because the 6502 chip's
instruction set made it non-trivial to create efficient
high-level languages.

There are two major directories: compile and linkit.
* compile creates a trivial compiler, sufficient to be able to create
  some linking information.
* linkit creates a link map, using the linking information.

The goal is to show that you can arrange instruction addresses so
that they maximally overlap.  The compiler generates code that copies
information from one place to another when calling an instruction, but
the linker maps things so that most of those copies can be optimized away.


This was created by David A. Wheeler; you should be able to get
this file from:
 http://www.dwheeler.com/6502
More information on the techniques is also available there.


    alang: Demonstrate compilation/linking techniques for 6502.
    Copyright (C) 2002 David A. Wheeler

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

