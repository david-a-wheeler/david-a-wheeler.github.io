<?xml version="1.0" encoding="UTF-8"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Address Sanitizer on an entire Linux distribution!</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <link>http://www.dwheeler.com/blog/2016/02/01#address-sanitizer-gentoo</link>
    <pubDate>Mon, 01 Feb 2016 14:27 GMT</pubDate>
    <!-- date: 2016-02-01 -->
    <description>
&lt;p&gt;
Big news in computer security: Hanno Boeck has recently managed to get
&lt;a href=&quot;https://blog.hboeck.de/archives/879-Safer-use-of-C-code-running-Gentoo-with-Address-Sanitizer.html&quot;&gt;Address Sanitizer running on an
entire Linux distribution (Gentoo)&lt;/a&gt; as an experimental edition.
For those who don&amp;#8217;t know,
&lt;a href=&quot;https://en.wikipedia.org/wiki/AddressSanitizer&quot;&gt;Address Sanitizer&lt;/a&gt;
is an amazing compile-time option that detects a huge range of memory errors
in memory-unsafe languages (in particular C and C++).
These kinds of errors often lead to disastrous security vulnerabilities,
such as
&lt;a href=&quot;http://www.dwheeler.com/essays/heartbleed&quot;&gt;Heartbleed&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
This kind of distribution option is absolutely not for everyone.
Address Sanitizer on average increases processing time by about 73%,
and memory usage by 340%.
What&amp;#8217;s more, this work is currently very experimental,
and you have to disable some other security mechanisms to make it work.
That said, this effort has already borne a lot of valuable fruit.
Turning on these mechanisms across
an entire Linux distribution has revealed a large number of memory errors
that are getting fixed.
I can easily imagine this being directly useful in the future, too.
Computers are very fast and have lots of memory, even when compared
to computers of just a few years earlier.
There are definitely situations where it&amp;#8217;s okay to effectively
halve performance and reduce &lt;i&gt;useful&lt;/i&gt; memory, and in exchange,
significantly increase the system&amp;#8217;s resistance to novel attack.
My congrats!!
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>