<?xml version="1.0" encoding="UTF-8"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Lessons learned from Apple goto fail</title>
    <link>http://www.dwheeler.com/blog/2014/11/23#apple-goto-fail</link>
    <pubDate>Sun, 23 Nov 2014 19:25 GMT</pubDate>
    <!-- date: 2014-11-23 -->
    <description>
&lt;p&gt;
The year 2014 has not been a good year for the SSL/TLS protocol.
SSL/TLS is the fundamental algorithm for securing web applications.
Yet every major implementation has had at least one
disastrous vulnerability, including
Apple (&lt;a href=&quot;http://www.dwheeler.com/essays/apple-goto-fail.html&quot;&gt;goto fail&lt;/a&gt;),
GnuTLS,
OpenSSL (&lt;a href=&quot;http://www.dwheeler.com/essays/heartbleed.html&quot;&gt;Heartbleed&lt;/a&gt;),
and Microsoft.
Separately a nasty attack has been found in the underlying
SSLv3 protocol
(&lt;a href=&quot;http://www.dwheeler.com/essays/poodle-sslv3.html&quot;&gt;POODLE&lt;/a&gt;).
But instead of just noting those depressing statistics, we
need to figure out &lt;i&gt;why&lt;/i&gt; those vulnerabilities happened,
and &lt;i&gt;change&lt;/i&gt; how we develop software to prevent them
from happening again.
&lt;/p&gt;
&lt;p&gt;
To help, I just released
&lt;a href=&quot;http://www.dwheeler.com/essays/apple-goto-fail.html&quot;&gt;The Apple goto fail vulnerability: lessons learned&lt;/a&gt;, a paper that is similar to my
previous papers that focuses on
&lt;i&gt;how to counter these kinds of vulnerabilities
in the future&lt;/i&gt;.
In many ways Apple goto fail vulnerability was much more embarassing
compared to Heartbleed; the goto fail vulnerability was
&lt;i&gt;easy&lt;/i&gt; to detect, in a portion that was a &lt;i&gt;key&lt;/i&gt; part of its
functionality.
This vulnerability was reported back in February 2014, but there
does not seem to be a single place where you can find a more complete
list of approaches to counter it.
I also note some information that doesn&amp;#8217;t seem to
be available elsewhere.
&lt;/p&gt;
&lt;p&gt;
So if you develop software - or manage people who do - take
a look at
&lt;a href=&quot;http://www.dwheeler.com/essays/apple-goto-fail.html&quot;&gt;The Apple goto fail vulnerability: lessons learned&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>