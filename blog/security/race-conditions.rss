<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>New Security Article on Race Conditions</title>
    <link>http://www.dwheeler.com/blog/2004/10/08#race-conditions</link>
    <pubDate>Fri, 08 Oct 2004 01:07 GMT</pubDate>
    <!-- date: 2004-10-08 -->
    <description>
Well, I&amp;#8217;m happy to announce that another one
of my developerworks article on secure development is
now out for the public.
Go take a look at
&lt;a href=&quot;http://www-128.ibm.com/developerworks/library-combined/l-sprace.html&quot;&gt;
Secure programmer: Preventing Race Conditions&lt;/a&gt;.
&lt;p&gt;
This was a trickier article to write, because race conditions are
harder to describe in a simple way.
No matter what, they always involve subtle timing interactions, and
that makes them hard to describe.
Even the conventional definitions are too complicated and don&amp;#8217;t really
help explain the issue.
So, I ended up writing my own definition:
A &amp;#8220;race condition&amp;#8221; occurs when a program doesn&amp;#8217;t work as it&amp;#8217;s supposed to
because of an unexpected ordering of events that produces contention over the
same resource. Notice that a race condition doesn&amp;#8217;t need to involve contention
between two parts of the same program; many security problems occur if an
outside attacker can interfere with a program in unexpected ways. 
&lt;p&gt;
And from there, it shows some of those big surprises.
A whole bunch of race conditions have been found over the last few
months, so this is certainly still a serious problem.
</description>
   </item>
  </channel>
</rss>