<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Updated my essay on Software Configuration Management Security</title>
    <link>http://www.dwheeler.com/blog/2004/04/16#scm-security1</link>
    <pubDate>Fri, 16 Apr 2004 23:34 GMT</pubDate>
    <!-- date: 2004-04-16 -->
    <description>
I&amp;#8217;ve updated my essay on
&lt;a href=&quot;http://www.dwheeler.com/essays/scm-security.html&quot;&gt;Software Configuration Management (SCM) Security&lt;/a&gt;.
That essay is relatively new, and I&amp;#8217;ve added more now.
Today we use SCM tools to manage our complicated software,
yet we&amp;#8217;re not paying enough attention to those tools&amp;#8217; security
requirements.
&lt;p&gt;
For example, few SCM tools think about the problem of handling
malicious developers (who are &lt;i&gt;trying&lt;/i&gt; to insert Trojan horses) or
about countering people who gain root access on a centralized system
being used as the SCM data repository&amp;#8230; even though that&amp;#8217;s already
happening.
There &lt;i&gt;are&lt;/i&gt; ways to deal with those kinds of attacks&amp;#8230; but you
have to think about them to counter them.
&lt;p&gt;
One of the recent additions to the essay
is based on an interesting email I received from
Dr. Carsten Bormann of the University of Bremen.
He mentioned a specialized attack that he terms the
&amp;#8220;encumbrance pollution attack&amp;#8221;.
In an encumberance pollution attack, the attacker inserts material
that cannot be legally included.
&lt;p&gt;
To understand it, first
imagine an SCM with perfectly indestructible history.
The attacker steals developer credentials, or is himself a malicious
developer, and checks in a change that contains some encumbered material.
&amp;#8220;Encumbered&amp;#8221; material is simply material which cannot be legally included.
Examples include child pornography, slanderous/libelous statements, or
code which has copyright or patent encumberances.
This could be very advantageous, for example, a company
might hire a malicious developer to insert that company&amp;#8217;s code into a
competing product, and then sue the competitor for copyright infringement,
knowing that their SCM system &amp;#8220;can&amp;#8217;t&amp;#8221; undo the problem.
Or a lazy programmer might copy code that they have no right to copy
(this is rare in open source software projects, because every line of code
and who provided it is a matter of public record, but it proprietary
projects do have this risk).
&lt;p&gt;
Any SCM can record a change that essentially undoes a previous change,
but if the history is indestructable and viewable by all, then
you can&amp;#8217;t get rid of the history.
This makes your SCM archive irrevocably encumbered.
This can especially be a problem if the SCM is indestructably recording
proposals by outsiders!
&lt;p&gt;
Anyway, take a look at
&lt;a href=&quot;http://www.dwheeler.com/essays/scm-security.html&quot;&gt;Software Configuration Management (SCM) Security&lt;/a&gt;.
</description>
   </item>
  </channel>
</rss>