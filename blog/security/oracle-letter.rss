<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Oracle letter to Universities: Educate software developers on security/assurance!</title>
    <link>http://www.dwheeler.com/blog/2008/05/15#oracle-letter</link>
    <pubDate>Thu, 15 May 2008 12:08 GMT</pubDate>
    <!-- date: 2008-05-15 -->
    <description>
&lt;p&gt;
I am &lt;i&gt;delighted&lt;/i&gt; to point out a
&lt;a href=&quot;http://www.oracle.com/security/docs/mary-ann-letter.pdf&quot;&gt;
really interesting letter to Universities by
Mary Ann Davidson, the Chief Security Officer of Oracle Corporation&lt;/a&gt;.
It basically tells colleges and universities to stop ignoring security, and
to instead include software security principles
in their computer science curricula.
I&amp;#8217;m so delighted to see this letter, which has just been released to
the public (it had been privately sent to many colleges and universities).
Let me point out and comment on some great points in this letter, because
I think this letter is really important.
&lt;/p&gt;
&lt;p&gt;
In this letter, she notes that
&amp;#8220;many security vulnerabilities can be traced to a relatively few types
of common coding errors&amp;#8221;.
&lt;a href=&quot;http://www.dwheeler.com/secure-programs&quot;&gt;
I&amp;#8217;ve noted that myself, by the way&lt;/a&gt;; simply educating developers on
what the common (past) mistakes are goes a &lt;i&gt;long&lt;/i&gt; way towards
eliminating vulnerabilities.
She then notes,
&amp;#8220;most developers we hire have not been
adequately trained in basic secure coding principles
in their undergraduate or graduate computer science programs.&amp;#8221;
I agree and think it&amp;#8217;s horrific; more on that in a moment.
She clarifies that this is a really important problem:
&amp;#8220;Security flaws are widely recognized as a threat to national security
and to the privacy and financial well being of individual citizens,
in addition to the costs they impose on us and our customers.&amp;#8221;
They haven&amp;#8217;t just let this be; as they note,
&amp;#8220;We have therefore had to develop and roll out our own in-house security
training program at significant time and expense.&amp;#8221;
Kudos to Oracle for doing such training, by the way; far too many
organizations don&amp;#8217;t do that, which explains why software continues
to have the same old vulnerabilities as it did 30 years ago.
But clearly Oracle cannot train the world, nor it is reasonable to expect
that they do so.
&lt;/p&gt;
&lt;p&gt;
She also states that
&amp;#8220;We believe that the ability to recognize and avoid common errors that can
result in catastrophic security failures should be a core part of computer
science curricula and that the above measures will foster such change.
We strongly recommend that universities adopt secure coding practices as
part of their computer science curricula, to improve the security of all
commercial software, and ensure that their graduates remain competitive
in the job market.&amp;#8221;
To that I say, Amen.
&lt;/p&gt;
&lt;p&gt;
By itself, that&amp;#8217;s &lt;i&gt;great&lt;/i&gt;, but here&amp;#8217;s the kicker:
&amp;#8220;In the future, Oracle plans to give &lt;i&gt;&lt;b&gt;hiring preference&lt;/b&gt;&lt;/i&gt;
to students who have received such training and can demonstrate competence
in software security principles.&amp;#8221;
Do you see this?
Students at colleges and universities that fail
to properly prepare them will be at a competitive disadvantage!
&lt;/p&gt;
&lt;p&gt;
Today, almost all computer science and software engineering
graduates will develop software that
connects to a network, or must take data from a network&amp;#8230;
yet almost all are absolutely clueless about how to do so.
Not because they don&amp;#8217;t know what a &amp;#8220;socket&amp;#8221; is, but because they don&amp;#8217;t
know how to counter attacks.
And if you&amp;#8217;re hooked to a network, or take data from one, you
&lt;i&gt;will&lt;/i&gt; get attacked.
&lt;/p&gt;
&lt;p&gt;
Yet the education community (with a few wonderful exceptions) still
completely ignores the need to educate software developers on how to develop
secure software.
&amp;#8220;It&amp;#8217;s not my job&amp;#8221; is not just wrong; it&amp;#8217;s almost criminal.
Society is &lt;i&gt;depending&lt;/i&gt; on the educational community to educate students
in the fundamentals of what they need to know.
Society depends on software, and
essentially &lt;i&gt;every&lt;/i&gt; student in a software-related field
will, after they graduate, write software that will be attacked.
Attacks are no longer a surprise - they are a guarantee.
Yet the educational system that&amp;#8217;s supposed to prepare our developers
fundamentally fails to do so.
Since attacks are guaranteed, and the
students are guaranteed to &lt;i&gt;not&lt;/i&gt;
know how to counter them, what other results would you expect?
The basics of developing secure software should be a &lt;b&gt;mandatory&lt;/b&gt;
part of computer science and software engineering undergraduate curricula.
The vulnerabilities that the students &lt;i&gt;will&lt;/i&gt; embed in software,
if they do not get this education, will
lead to great loss of life and the loss of billions of dollars.
Sure, schools already have a lot of material to cover,
but practically nothing in a computer science curricula is
as important as how to develop secure software;
I can think of no other omissions in the CS curricula that
cause so much damage.
Don&amp;#8217;t tell me that you only teach the &amp;#8220;fundamentals&amp;#8221;; programming languages
change, but the need for security will &lt;i&gt;never&lt;/i&gt; go away; it
&lt;i&gt;is&lt;/i&gt; fundamental.
I think
computer science and software engineering departments that do not explain
the basics of developing secure software
to all of their undergraduate and graduate students should be
shut down, as a menace to society, until they change their ways.
&lt;/p&gt;
&lt;p&gt;
Oh, if you want to see more about this letter,
&lt;a href=&quot;http://blogs.oracle.com/maryanndavidson/2008/04/08#a286&quot;&gt;
see Mary Ann Davidson&amp;#8217;s blog article about it,
&amp;#8220;The Supply Chain Problem&amp;#8221;&lt;/a&gt;, where
she talks about what led up to the letter, and the
follow-on from it:
&amp;#8220;Last year, I got fed up enough with Oracle having to train otherwise bright
and capable CS grads in secure coding 101 that I sent letters to the top 10 or
so universities we recruit from (my boss came up with the idea and someone on
my team executed on it - teamwork is a wonderful thing)&amp;#8230;
I am sorry to state that only one of those universities we wrote to responded
to my letter&amp;#8230;
We need a revolution - an upending of the way we think about security -and
that means upsetting the supply chain of software developers&amp;#8230;
To universities, I cannot but contrast the education of engineers with that of
computer science majors. Engineers know that their work product must above all
be safe, secure and reliable. They are trained to think this way (not pawn off
&amp;#8216;safety&amp;#8217; on &amp;#8216;testers&amp;#8217;) and their curricula builds and reinforces the
techniques and mindset of safe, secure and reliable product. (A civil engineer
who ignores the principles of basic structures - a core course - in an upper
level class is not going to graduate, and can&amp;#8217;t dismiss structures as a
&amp;#8216;legacy problem.&amp;#8217;)&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
I would &lt;i&gt;love&lt;/i&gt; to see many organizations banding together to sign
a letter like this one.
If enough organizations band together, I think many universities and
colleges will finally get the message.
I would expand it beyond computer science, to any curricula with a significant
amount of software development (such as software engineering, MIS, and so on),
but that&amp;#8217;s a quibble.
My goal is not to shut down any departments (I hope that&amp;#8217;s clear);
it&amp;#8217;s to repair a serious omission in our educational system.
Kudos to Mary Ann Davidson, for writing the letter and sending it to
a number of Universities.
When I learned of it, I begged her to please post it publicly.
To her &lt;i&gt;great&lt;/i&gt; credit, she&amp;#8217;s now done so.
Thanks, from the bottom of my heart!
Now colleges and universities have even fewer reasons to claim the nonsense,
&amp;#8220;well, no one wants information on developing secure software.&amp;#8221;
The companies that will hire your students know otherwise.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>