<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>HTML version of &amp;#8220;Fully Countering Trusting Trust through Diverse Double-Compiling&amp;#8221;</title>
    <link>http://www.dwheeler.com/blog/2010/11/15#trusting-trust-html</link>
    <pubDate>Mon, 15 Nov 2010 18:24 GMT</pubDate>
    <!-- date: 2010-11-15 -->
    <description>
&lt;p&gt;
I&amp;#8217;ve now posted an
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/dissertation/html/wheeler-trusting-trust-ddc.html&quot;&gt;HTML version of my PhD dissertation,
&amp;#8220;Fully Countering Trusting Trust through Diverse Double-Compiling&amp;#8221;&lt;/a&gt;.
This has been available as a &lt;a href=&quot;http://www.dwheeler.com/trusting-trust/dissertation/wheeler-trusting-trust-ddc.pdf&quot;&gt;PDF&lt;/a&gt; for some time, but
in some cases an HTML version is more convenient
(e.g., for small devices like cell phones or
browsers that don&amp;#8217;t have PDF readers).
This dissertation describes an effective
countermeasure for the nasty &lt;i&gt;trusting trust&lt;/i&gt; attack; see my
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/&quot;&gt;page about countering
trusting trust&lt;/a&gt; or the dissertation itself for more information.
&lt;/p&gt;
&lt;p&gt;
The HTML is very simple HTML that should be acceptable nearly universally.
If you&amp;#8217;re curious,
I generated the HTML from OpenOffice.org, ran HTML tidy, and
cleaned up the results a little further (via
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/dissertation/html/simplify&quot;&gt;a
simple script I created for the purpose&lt;/a&gt; and by hand).
I eliminated all forced font names, for example.
The goal was to create simple HTML that pretty much any web browser
can display reasonably well, both today and into the future.
For example, even browsers that can&amp;#8217;t handle CSS or &amp;lt;div&amp;gt;
should produce reasonable results.
People should even be able to read the HTML directly, if they want to,
without too much trouble.
This is all part of my effort to make sure that anyone who wants this
information can get it, either now or in the future.
&lt;/p&gt;
&lt;p&gt;
The HTML almost passes the
&lt;a href=&quot;http://validator.w3.org/&quot;&gt;W3C HTML Validator&lt;/a&gt;,
but I drew the line at the &amp;#8220;absmiddle&amp;#8221; value for the &amp;#8220;align&amp;#8221; attribute.
The official HTML4 specification does not not include align=absmiddle,
but this is widely implemented by all major browsers, so I
view its omission as an error in the HTML spec.
I do use in-line &amp;lt;center&amp;gt;, &amp;lt;b&amp;gt;, and &amp;lt;i&amp;gt;;
some people may whine about that, but it&amp;#8217;s completely standard
and universally supported, while
alternatives are &lt;i&gt;not&lt;/i&gt; universally supported.
&lt;/p&gt;
&lt;p&gt;
I tested on a variety of browsers, and it seems to come out well.
The Wii web browser (based on Opera 9) doesn&amp;#8217;t seem to handle certain
entities that are part of the Unicode and ISO 10646 specification,
and shows rectangles instead.
But since these are standard characters, I view this as a problem
with the browser:
&lt;ul&gt;
&lt;li&gt;Entity &amp;amp;8203; (&amp;amp;x200B;) is the zero-width space (ZWSP), U+200B.
  This is supported by many browsers (such as Firefox), but not
  all (I know that Internet Explorer 6 and below,
  and the Wii browser based on Opera 9, show these as unknown).
  Still, browsers &lt;i&gt;should&lt;/i&gt; support it, as it&amp;#8217;s part of Unicode,
  and it doesn&amp;#8217;t badly break the page for the ones that don&amp;#8217;t.
  &lt;a href=&quot;http://gojomo.blogspot.com/2005/03/cross-browser-invisible-word-break-in.html&quot;&gt;An alternative is &amp;lt;wbr&amp;gt;,
  but that&amp;#8217;s nonstandard and STILL doesn&amp;#8217;t work in
  many places.
  One page notes,
  &lt;a href=&quot;http://reference.sitepoint.com/html/wbr&quot;&gt;
  &amp;#8220;Given that this (wbr) is a non-standard element with imperfect support,
  use the wbr with caution&amp;#8221;&lt;/a&gt;.  So, for word breaks, I&amp;#8217;m just
  using the standard HTML entity for it.
&lt;/li&gt;
&lt;li&gt;Entity &amp;amp;8288; (&amp;amp;x2060;) is the word joiner (WJ), U+2060.
  This specially indicates where words should NOT be split.
  Again, supported by Firefox, but not by all (e.g., Wii based on Opera).
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
&lt;p&gt;
For many of the equations I use embedded graphic images, primarily
because many systems do not have the fonts necesssary to display them.
I do include alt=&amp;#8230; values so that blind users will be able to
understand them &amp;mdash; this is intended to be accessible.
&lt;/p&gt;
&lt;p&gt;
Ideally, I&amp;#8217;d be able to write stuff that&amp;#8217;s both HTML and XHTML.
I can almost pull that off, but not with &amp;lt;br&amp;gt;.
It&amp;#8217;d be nice to use &amp;lt;br&amp;nbsp;/&amp;gt; because
in theory that would work in both
HTML and XHTML.  But many tools complain.  So I just use &amp;lt;br&amp;gt;, which
is standard and completely understood by all HTML parsers.
&lt;/p&gt;
&lt;p&gt;
I now have a few errata, which are posted on the main
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/&quot;&gt;page about countering
the trusting trust attack&lt;/a&gt;.
They are all trivial typos, and do not affect the fundamentals
discussed in the paper.
&lt;/p&gt;
&lt;p&gt;
So, feel free to take a peek at my
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/dissertation/html/wheeler-trusting-trust-ddc.html&quot;&gt;HTML version of my PhD dissertation&lt;/a&gt;
or my general
&lt;a href=&quot;http://www.dwheeler.com/trusting-trust/&quot;&gt;page about countering
the trusting trust attack&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Poor quality patents</title>
    <link>http://www.dwheeler.com/blog/2010/10/05#poor-quality-patents</link>
    <pubDate>Tue, 05 Oct 2010 18:50 GMT</pubDate>
    <!-- date: 2010-10-05 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://www.groklaw.net/article.php?story=20101001012258574&quot;&gt;
Groklaw has some interesting amicus briefs about the horrifically
poor quality of many of today&amp;#8217;s patents&lt;/a&gt;; in particular,
they explain why patents that never should have existed are routinely enforced.
These briefs make it clear that the current U.S. patent process
has become a massive boat anchor on the economy.
These briefs show that
the current patent process grants boatloads of nonsense patents, and then
stacks the deck further by making it nearly impossible to overturn
patents that should never have been granted.
This is &lt;i&gt;completely&lt;/i&gt; unfair;
the patent process is supposed to promote the
&amp;#8220;Progress of Science and useful Arts&amp;#8221;, but instead it impedes progress.
Even pro-patent companies like Google declare that
&amp;#8220;Abusive patent suits based on invalid patents
have powerful coercive effects and are a scourge of modern business.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
The first brief covered by Groklaw is from
by Google, Verizon, Dell, HP, HTC, and Wal-Mart.
They had lots of interesting things to say, and I&amp;#8217;ll quote
it liberally (below).
They point out that currently
overturning a patent in the U.S. requires
&amp;#8220;clear and convincing evidence&amp;#8221;, a very high legal standard &amp;mdash;
bizarrely high, in fact.
Rulings are normally overcome by a &amp;#8220;preponderance of the evidence&amp;#8221;
instead (this is a lower bar).
&lt;/p&gt;
&lt;p&gt;
That higher standard
might make sense if the U.S. patent office did a completely
fair and exhaustive review of a patent application before granting it.
But that&amp;#8217;s not what happens.
Indeed, the
&lt;a href=&quot;http://www.ftc.gov/os/2003/10/ innovationrpt.pdf&quot;&gt;
U.S. Federal Trade Commission (&amp;#8220;FTC&amp;#8221;) has determined that
&amp;#8220;current law and [United States Patent and Trademark Office (PTO)]
procedure stack the deck heavily in favor
of issuing patents&amp;#8221;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
For example, in most cases, an applicant must prove that he is entitled
to a government benefit or privilege, but under the current patent regime,
the applicant is granted the monopoly rights of a patent unless the
government can present a case against it.
All by itself that is just wrong; if you want a special monopoly,
you should at least be required to prove your case;
why should the government presume that you should be granted a monopoly?
As Google et al say, &amp;#8220;In other words, the PTO presumes
that it should award an exclusive property right
to anyone who asks for it.&amp;#8221;
Giving exclusive rights to the undeserving
is an &lt;i&gt;unfair invisible tax&lt;/i&gt;.
&lt;/p&gt;
&lt;p&gt;
What&amp;#8217;s worse, patent examiners don&amp;#8217;t even normally
consider &amp;#8220;all aspects of patentability&amp;#8221;,
and &amp;#8220;rarely inquire into important non-documentary sources of information,
such as the knowledge of skilled artisans, market demands&amp;#8230;
and public uses or commercial offers for sale&amp;#8230;
The PTO can require an applicant to disclose such information [but]
has not widely required applicants to disclose such information.&amp;#8221;
In short, the PTO will often not look for the information that any
ordinarily-skilled person in that field would know &amp;mdash; shameful.
This is compounded by the PTO&amp;#8217;s well-known lack of resources;
&amp;#8220;it lacks the resources to review each patent application thoroughly.
This Court identified that problem over four decades ago&amp;#8230;
and the PTO&amp;#8217;s resources have been stretched
even further since then.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
In short,
&amp;#8220;The bottom line is that patent applicants receive the benefit of
favorable procedures and a resource-constrained review by the PTO and
then assert presumptively valid patents that, according to the Federal
Circuit, can be defeated only by clear and convincing evidence. That
serves only to insulate patents of dubious quality from adequate scrutiny
at any stage.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
A different brief shown in Groklaw was filed by the 
Electronic Frontier Foundation (EFF),
Public Knowledge, Computer &amp;amp; Communications Industry Association (CCIA),
and Apache.
They point out some other unfair aspects of the patent process.
In particular, they note that &amp;#8220;patent owners assert that accused
infringers must use the prior art&amp;#8217;s source code to prove invalidity, but
that source code is often unavailable years after the fact&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
All of this is made worse because of software patents.
Historically software could not be patented, and software patents are
still not permitted in Europe and many other places.
Software patents have deluged the PTO with applications,
so the PTO has very little time it can devote to reviewing any one patent.
What&amp;#8217;s worse, the PTO simply does not have a useful database
to compare to&amp;#8230; so many software patents are patents of prior art.
Software patents need to be abolished, but in the meantime,
we need to at least tweak the system so that it is fairer.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Software patents and patent trolls are hurting the country</title>
    <link>http://www.dwheeler.com/blog/2010/09/24#patent-quality-allison</link>
    <pubDate>Fri, 24 Sep 2010 18:32 GMT</pubDate>
    <!-- date: 2010-09-24 -->
    <description>
&lt;p&gt;
A new paper has come out, and it debunks some
key assumptions made about patents.
I think this paper is good evidence that
software patents and patent trolls are hurting the United States.
The weak patents that software patents and patent trolls create (and litigate)
are clogging the courts and stifling innovation.
Instead of creating jobs by making and selling great products,
our innovators get stuck in court&amp;#8230; and stuck behind the rest of the world.
If the U.S. legislature wants people to have jobs, we need to make it
legal to create jobs.
&lt;/p&gt;
&lt;p&gt;
The paper is
&lt;a href=&quot;http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1677785&quot;&gt;
&amp;#8220;Patent Quality and Settlement among Repeat Patent Litigants&amp;#8221;
by John R. Allison, Mark A. Lemley, and Joshua Walker (September 16, 2010)
&lt;/a&gt;;
a
&lt;a href=&quot;http://271patent.blogspot.com/2010/09/bombshell-study-heavily-litigated-npe.html&quot;&gt;brief on-line summary is available&lt;/a&gt;.
What&amp;#8217;s remarkable is that they were pro these kinds of things,
at least going in, but their study found results they were not expecting.
&lt;/p&gt;
&lt;p&gt;
Their study examined &amp;#8220;repeat patent plaintiffs&amp;#8221;,
which they defined as those
who sue eight or more times on the same patents.
These suits have
&amp;#8220;a disproportionate effect on the patent system [because they]
are responsible for a sizeable fraction of all patent lawsuits.
Their patents should be among the strongest, according to all economic
measures of patent quality&amp;#8230;
But, to our surprise, we find that when they do go to trial
or judgment, overwhelmingly they lose.
This result seems to be driven by two parallel findings: both
software patents and patents owned by non-practicing entities (so-called
&amp;#8220;patent trolls&amp;#8221;) fare extremely poorly in court.&amp;#8221;
Basically, software patents and patents from patent trolls are remarkably
weak; when people stand up to the extortion, the patent-holders
often lose in court.
This usually only happens after the victims have spent millions
of dollars and years of time defending themselves, draining money and time
away from productive pursuits.
&lt;/p&gt;
&lt;p&gt;
Their paper&amp;#8217;s introduction
shows that the &amp;#8220;differences are dramatic. Once-litigated
patents win in court almost 50% of the time,
while the most-litigated - and putatively most
valuable - patents win in court only 10.7% of the time&amp;#8221;.
The fundamental problems are patent trolls
(aka non-practicing entities or NPEs) and software patents:
&amp;#8220;Software patentees win only 12.9% of their cases,
while NPEs win only 9.2%&amp;#8221;.
In short,
&amp;#8220;It appears that as a society, we are
spending a disproportionate amount of time and money litigating
a class of weak patents.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
Delving into the statistics, it is clear that this is not just a slight
difference.
&amp;#8220;One of the most striking findings is the weakness of software
and NPE-owned patents in the overall dataset&amp;#8230;
it seems likely that software patents are dragging down the averages.
&amp;#8230;
There have been numerous complaints about the quality
of software patents; our data may give some empirical support to those
assertions. If we consider just patent owner wins and defendant wins on
the merits, non-software patent owners win 37.1% of their cases across
both the most-litigated and once-litigated data sets, while software
patentees win only 12.9%. If we include default judgments, non-software
patent owners win 51.1% of their cases, while software patentees win
only 12.9%.
Something similar can be said about suits brought by NPEs. NPE suits, like
software suits, are a large percentage of the most-litigated cases&amp;#8230;
If we consider just patent owner wins and defendant wins on the merits,
product owners win 40% of their cases across both the most-litigated
and once- litigated data sets, while NPEs win only 8%. If we include
default judgments, product-producing companies win 50% of their cases,
while NPEs win only 9.2%.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
What&amp;#8217;s remarkable is that the authors were not against
software patents or NPEs.
Indeed,
&amp;#8220;the authors have elsewhere expressed skepticism over efforts to
eliminate particular
types of patents, and one has argued that we shouldn&amp;#8217;t single
out patent trolls for special treatment.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
Yet with a bias &lt;i&gt;for&lt;/i&gt; software patents and
patent trolls, they admitted that this data is strong evidence
that software patents and patent trolls are a serious problem.
They state that &amp;#8220;it is important to
recognize that software patents and patents asserted by NPEs are both
taking disproportionate resources in patent litigation, and that the
social benefit from those cases appears to be slight&amp;#8230;
Society is spending a large chunk of its patent law resources dealing with
what are - for whatever reason - the weakest cases.
[This gives]
substantial ammunition to those who argue against software patents
and who want to restrain patent trolls. If software and NPE patents
are overwhelmingly bad - either invalid or overclaimed - the social
benefit of allowing them may well be outweighed by the harm they cause.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
One claim some make is that
&amp;#8220;the system is working - that the bad patents are being weeded out of the
system and are not stifling innovation.&amp;#8221;
But as the authors note, this
&amp;#8220;seems altogether too facile. After all, roughly
90% of those cases settled without judgment. While those settlements
are confidential, we expect that the vast majority involved some sort
of payment to the patent plaintiff - a payment that the outcomes data
suggests might represent not the acquisition of real legal rights but a
nuisance settlement over a likely-invalid patent&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
In short, &amp;#8220;If software and NPE patents
are overwhelmingly bad - either invalid or
overclaimed - the social benefit of allowing them may well be outweighed
by the harm they cause&amp;#8230;
The patents and patentees that occupy the most time and attention in
court and in public policy debates - the very patents that economists
consider the most valuable - are astonishingly weak. Non-practicing
entities [NPEs, aka patent trolls]
and software patentees almost never win their cases. That may
be a good thing, if you believe that most software patents are bad or
that NPEs are bad for society. But it certainly means that the patent
system is wasting more of its time than expected
dealing with weak patents.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
If you are interested in more, see
&lt;a href=&quot;http://www.dwheeler.com/essays/software-patents.html&quot;&gt;my
essay explaining why software patents should be eliminated&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Musopen</title>
    <link>http://www.dwheeler.com/blog/2010/09/12#musopen-2010</link>
    <pubDate>Sun, 12 Sep 2010 14:28 GMT</pubDate>
    <!-- date: 2010-09-12 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://www.kickstarter.com/projects/Musopen/record-and-release-free-music-without-copyrights&quot;&gt;Musopen is raising money to record and
release music&lt;/a&gt;.
The result will be a (bigger) library of copyright free music.
They &amp;#8220;want your help to hire an internationally renowned orchestra
to record and release the rights to: the Beethoven, Brahms, Sibelius,
and Tchaikovsky symphonies.
We have price quotes from several orchestras and are
ready to hire one, pending the funds&amp;#8230; [please]
Donate, and vote on what we should buy with the money.
Then we will release that music in lossless quality
with a creative commons license&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
The entire &lt;a href=&quot;http://www.musopen.com/&quot;&gt;Musopen project&lt;/a&gt;
is a very cool idea.
As they say,
&amp;#8220;We aim to record or obtain recordings that have no copyrights so that
our visitors may listen, re-use, or in any way enjoy music. Put simply,
our mission is to set music free&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
This particular fund-raiser is also an interesting use of the
&lt;a href=&quot;http://www.kickstarter.com/&quot;&gt;Kickstarter web site&lt;/a&gt;.
I can see this kind of fund-raising being done to release other
creative works, too.
For example, I can easily see projects
ransoming software so it can be released as open source software
(this happened with Blender).
I think it&amp;#8217;s easily possible that we will see more of this in the future,
where people&amp;#8217;s money is combined together to release artistic and
creative works in ways that eliminate constant tolls and
enable further creativity.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Geek Video Franchises</title>
    <link>http://www.dwheeler.com/blog/2010/08/15#geek-franchises</link>
    <pubDate>Sun, 15 Aug 2010 17:07 GMT</pubDate>
    <!-- date: 2010-08-15 -->
    <description>
&lt;p&gt;
I have a new web page on silly game I title
&lt;a href=&quot;http://www.dwheeler.com/franchises&quot;&gt;Geek Video Franchises&lt;/a&gt;.
The goal of this game is to interconnect as many geek video franchises
as possible via common actors.
In this game, you’re only allowed to use video franchises
that geeks tend to like.
&lt;/p&gt;

&lt;p&gt;
For example:
&lt;i&gt;The Matrix&lt;/i&gt; connects to &lt;i&gt;The Lord of the Rings&lt;/i&gt; via
Hugo Weaving (Agent Smith/Elrond),
which connects to &lt;i&gt;Indiana Jones&lt;/i&gt;
via John Rhys-Davies (Gimli/Sallah),
which connects to &lt;i&gt;Star Wars&lt;/i&gt;
via Harrison Ford (Indiana Jones/Han Solo).
&lt;i&gt;The Lord of the Rings&lt;/i&gt; directly connects to &lt;i&gt;Star Wars&lt;/i&gt; via
Christopher Lee (Saruman/Count Dooku).
Of course, &lt;i&gt;Lord of the Rings&lt;/i&gt; also connects to &lt;i&gt;X-men&lt;/i&gt;
via Ian McKellen (Gandalf/Magneto),
which connects to &lt;i&gt;Star Trek&lt;/i&gt; via
Patrick Stewart (Professor Xavier / Captain Jean-Luc Picard).
&lt;i&gt;Star Trek&lt;/i&gt; connects to &lt;i&gt;Dr. Who&lt;/i&gt; via
Simon Pegg (JJ Abrams&amp;#8217; Montgomery Scott/The Editor), which connects
to &lt;i&gt;Harry Potter&lt;/i&gt; via David Tennant (Dr. Who #10/Barty Crouch Jr.),
which connects to &lt;i&gt;Monty Python&lt;/i&gt; via John Cleese
(Nearly Headless Nick/Lancelot, etc.).
&lt;/p&gt;

&lt;p&gt;
So if you&amp;#8217;re curious, check out
&lt;a href=&quot;http://www.dwheeler.com/franchises&quot;&gt;Geek Video Franchises&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Opening files and URLs from the command line</title>
    <link>http://www.dwheeler.com/blog/2010/07/03#opening-files-urls</link>
    <pubDate>Sat, 03 Jul 2010 12:57 GMT</pubDate>
    <!-- date: 2010-07-03 -->
    <description>
&lt;p&gt;
Nearly all operating systems have a simple
command to open up a file, directory, or URL from the command line.
This is useful when you&amp;#8217;re using the command line, e.g.,
&lt;tt&gt;xdg-open .&lt;/tt&gt; will pop up a window in the current directory
on most Unix/Linux systems.
This capability is also handy when you&amp;#8217;re writing
a program, because these are
easy to invoke from almost any language.
You can then pass it a filename (to open that file using the
default application for that file type), a directory name to start
navigating in that directory (use &amp;#8220;.&amp;#8221; for the current directory),
or a URL like &amp;#8220;http://www.dwheeler.com&amp;#8221; to open
a browser at that URL.
&lt;/p&gt;
&lt;p&gt;
Unfortunately, the command to do this is different on different platforms.
&lt;/p&gt;
&lt;p&gt;
My new essay
&lt;a href=&quot;http://www.dwheeler.com/essays/open-files-urls.html&quot;&gt;
&lt;b&gt;How to easily open files and URLs from the command line&lt;/b&gt;&lt;/a&gt;
shows how to do this.
&lt;/p&gt;
&lt;p&gt;
For example, on Unix/Linux systems, you should use xdg-open
(not gnome-open or kde-open), because that opens the right application
given the user&amp;#8217;s current environment.
On MacOS, the command is &amp;#8220;open&amp;#8221;.
On Windows you should use start
(not explorer, because invoking explorer directly will ignore the user&amp;#8217;s
default browser setting), while on
Cygwin, the command is &amp;#8220;cygstart&amp;#8221;.
More details are in the essay, including some gotchas and warnings.
&lt;/p&gt;
&lt;p&gt;
Anyway, take a look at:
&lt;a href=&quot;http://www.dwheeler.com/essays/open-files-urls.html&quot;&gt;
&lt;b&gt;How to easily open files and URLs from the command line&lt;/b&gt;&lt;/a&gt;
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Stop Worrying and Love the Internet</title>
    <link>http://www.dwheeler.com/blog/2010/05/20#douglas-adams-love-internet</link>
    <pubDate>Thu, 20 May 2010 18:33 GMT</pubDate>
    <!-- date: 2010-05-20 -->
    <description>
&lt;p&gt;
Back in 1999
&lt;a href=&quot;http://www.douglasadams.com/dna/19990901-00-a.html&quot;&gt;
Douglas Adams wrote
&amp;#8220;How to Stop Worrying and Learn to Love the Internet&amp;#8221;&lt;/a&gt;.
It&amp;#8217;s a wonderful essay that is still a good read today.
In particular, I think it&amp;#8217;s an important article to read
if you&amp;#8217;re still struggling with understanding where the Internet is going,
or if you&amp;#8217;re trying to figure out how to address the trustworthiness 
of group-developed information like
&lt;a href=&quot;http://www.dwheeler.com/blog/2010/03/21/#wikipedia-research&quot;&gt;Wikipedia&lt;/a&gt;,
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;open source software&lt;/a&gt;,
or the blogosphere.
Adams said:
&lt;blockquote&gt;
&amp;#8220;Because the Internet is so new we still don&amp;#8217;t really
understand what it is. We mistake it for a type of publishing or
broadcasting, because that&amp;#8217;s what we&amp;#8217;re used to. So people
complain that there&amp;#8217;s a lot of rubbish online, or that it&amp;#8217;s
dominated by Americans, or that you can&amp;#8217;t necessarily trust what you
read on the web. Imagine trying to apply any of those criticisms to what
you hear on the telephone. Of course you can&amp;#8217;t &amp;#8216;trust&amp;#8217;
what people tell you on the web anymore than you can &amp;#8216;trust&amp;#8217;
what people tell you on megaphones, postcards or in restaurants. Working
out the social politics of who you can trust and why is, quite literally,
what a very large part of our brain has evolved to do. For some batty
reason we turn off this natural scepticism when we see things in any
medium which require a lot of work or resources to work in, or in which
we can&amp;#8217;t easily answer back &amp;mdash; like newspapers, television
or granite. Hence &amp;#8216;carved in stone.&amp;#8217; What should concern us
is not that we can&amp;#8217;t take what we read on the internet on trust &amp;mdash;
of course you can&amp;#8217;t, it&amp;#8217;s just people talking &amp;mdash;
but that we ever got into the &lt;i&gt;dangerous habit of believing
what we read in the newspapers or saw on the TV [emphasis mine]&lt;/i&gt;  &amp;mdash; a mistake
that no one who has met an actual journalist would ever make&amp;#8230;
Interactivity. Many-to-many communications. Pervasive networking. These
are cumbersome new terms for elements in our lives so fundamental that,
before we lost them, we didn&amp;#8217;t even know to have names for them.&amp;#8221;
&lt;/blockquote&gt;
&lt;/p&gt;
&lt;p&gt;
My thanks to
&lt;a href=&quot;http://andrewsullivan.theatlantic.com/the_daily_dish/2010/05/what-the-blogosphere-adds-ctd.html&quot;&gt;
Andrew Sullivan&lt;/a&gt; for reminding me of this important piece.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Filenames and Pathnames in Shell - Doing it Correctly</title>
    <link>http://www.dwheeler.com/blog/2010/04/22#filenames-in-shell</link>
    <pubDate>Thu, 22 Apr 2010 00:05 GMT</pubDate>
    <!-- date: 2010-04-22 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://www.dwheeler.com/essays/fixing-unix-linux-filenames.html&quot;&gt;
Traditionally, Unix/Linux/POSIX filenames and pathnames
can be almost any sequence of bytes&lt;/a&gt;.
Unfortunately, most developers and users of
Bourne shells (including bash, dash, ash, and ksh) don&amp;#8217;t handle
filenames and pathnames correctly.
Even good textbooks on shell programming get filename and pathname processing
completely wrong.
Thus, many shell scripts are buggy, leading to surprising failures.
In fact, mis-handling of filenames is a
significant source of security vulnerabilities.
&lt;/p&gt;

&lt;p&gt;
So I&amp;#8217;ve created a short essay on how to &lt;i&gt;correctly&lt;/i&gt; process filenames
in Bourne shells as used in Unix, Linux, and various POSIX systems.
It presumes that you already know how to write Bourne shell scripts.
&lt;/p&gt;

&lt;p&gt;
The essay is:
&lt;a href=&quot;http://www.dwheeler.com/essays/filenames-in-shell.html&quot;&gt;
&lt;b&gt;Filenames and Pathnames in Shell: How to do it correctly&lt;/b&gt;&lt;/a&gt;.
Please, take a look!
&lt;/p&gt;

&lt;p&gt;
Frankly, it would be better if filenames weren&amp;#8217;t so permissive.
In particular, filenames with control characters, leading dash (&amp;#8220;-&amp;#8221;),
and non-UTF-8 encoding cause a lot of grief.
To see more about that,
please see my essay
&lt;a href=&quot;http://www.dwheeler.com/essays/fixing-unix-linux-filenames.html&quot;&gt;
Fixing Unix/Linux/POSIX Filenames&lt;/a&gt;.
If filenames weren&amp;#8217;t so permissive, correct
programs would be much easier to write.
&lt;/p&gt;

&lt;p&gt;
So,
&lt;b&gt;&lt;a href=&quot;http://www.dwheeler.com/essays/filenames-in-shell.html&quot;&gt;
Filenames and Pathnames in Shell: How to do it correctly&lt;/a&gt;&lt;/b&gt;
explains how to handle filenames properly in shell programs, given
the current situation.
Please take a look; I hope you find it useful.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>The new face of journalism: PJ, Groklaw, and SCO</title>
    <link>http://www.dwheeler.com/blog/2010/04/02#groklaw-sco</link>
    <pubDate>Fri, 02 Apr 2010 13:39 GMT</pubDate>
    <!-- date: 2010-04-02 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://www.groklaw.net/article.php?story=20100330152829622&quot;&gt;
The jury in the District Court of Utah trial between SCO Group and Novell
has issued a verdict, and SCO lost big&lt;/a&gt;.
SCO had been threatening and trying to extract money from
many innocent people and organizations, including the developers and users
of Linux, IBM, Red Hat, and Novell.
But the jury found that the copyrights for Unix did not go from Novell to SCO,
so many of SCO&amp;#8217;s claims against these innocent people have collapsed.
It&amp;#8217;ll take many years for the rest of the cases to wind down, but
their other cases were even less probable.
&lt;/p&gt;
&lt;p&gt;
Perhaps the happiest part of this sorry tale is the rise of
&lt;a href=&quot;http://www.groklaw.net/&quot;&gt;Groklaw&lt;/a&gt;, established and run by PJ.
&lt;a href=&quot;http://blog.linuxtoday.com/blog/2010/03/groklaw-how-one.html&quot;&gt;
Carla Schroder&amp;#8217;s &amp;#8220;Groklaw: How One Person Can Do Big Deeds. Thanks PJ.&amp;#8221;&lt;/a&gt;
and
&lt;a href=&quot;http://www.itworld.com/open-source/102946/sco-novell-groking-where-credit-due&quot;&gt;
Brian Proffitt&amp;#8217;s &amp;#8220;SCO, Novell: Grokking Where Credit is Due&amp;#8221;&lt;/a&gt;
wisely point out the important role that Groklaw has played in this saga.
&lt;/p&gt;
&lt;p&gt;
It&amp;#8217;s hard to know if Groklaw changed the outcome of this case, but Groklaw
&lt;i&gt;clearly&lt;/i&gt; changed what people knew about the case.
Traditional journalists completely failed the public in the SCO cases.
Even though this had the potential to seriously harm
the most important development in
information technology (IT) &amp;mdash; the rise of open source software &amp;mdash;
almost no IT journalists looked into it.
The few that did tended to spend little time looking at (or for) evidence.
If journalists are simply reorganizing press releases, there&amp;#8217;s really
no need for journalism, is there?
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;http://www.groklaw.net/&quot;&gt;Groklaw&lt;/a&gt; was vastly different.
Groklaw is more than a website or blog, it is a community of people who
gathered evidence, analyzed it, and helped other people get the true picture.
Traditional journalists may bemoan the loss of local newspapers, but
why should people pay for rehashed press releases when the blogs are a
&lt;i&gt;more accurate&lt;/i&gt; and &lt;i&gt;broader&lt;/i&gt; source of information?
In short, if you wanted full and accurate public
information related to SCO, Groklaw had it; traditional sources didn&amp;#8217;t.
&lt;/p&gt;
&lt;p&gt;
While Groklaw is a community, PJ was and is a key part of it.
She had the idea of setting up Groklaw, and made it work.
In short, she established an environment, and made it possible for the
rest of the world to see what was going on.
&lt;/p&gt;
&lt;p&gt;
So hats off to Groklaw, and to PJ in particular.
Journalism will never be the same again.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Using Wikipedia for research</title>
    <link>http://www.dwheeler.com/blog/2010/03/21#wikipedia-research</link>
    <pubDate>Sun, 21 Mar 2010 21:58 GMT</pubDate>
    <!-- date: 2010-03-21 -->
    <description>
&lt;p&gt;
Some teachers seem to lose their minds when asked about
&lt;a href=&quot;http://en.wikipedia.org&quot;&gt;Wikipedia&lt;/a&gt;,
and make absurd rules like
&lt;a href=&quot;http://modeltrains.about.com/od/railroads/tp/Wikipedia.htm&quot;&gt;
&amp;#8220;I forbid students from using Wikipedia&amp;#8221;&lt;/a&gt;.
&lt;a href=&quot;http://en.kioskea.net/news/10362-once-shunned-by-academics-wikipedia-now-a-teaching-tool&quot;&gt;A 2008 article&lt;/a&gt;
states that Wikipedia is the encyclopedia
&amp;#8220;that most universities forbid students to use&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
But the professors don&amp;#8217;t need to be such Luddites; it turns out
that college students tend to use Wikipedia quite appropriately.
A research paper titled
&lt;a href=&quot;http://www.uic.edu/htbin/cgiwrap/bin/ojs/index.php/fm/article/view/2830/2476&quot;&gt;
&lt;i&gt;How today&amp;#8217;s college students use Wikipedia for
course-related research&lt;/i&gt;&lt;/a&gt;
examines Wikipedia use among college students; it found that
Wikipedia use was widespread, and that
the primary reason they used Wikipedia was to
obtain background information or a summary about a topic.
Most respondents reported using Wikipedia at the beginning
of the research process; very few used Wikipedia near or at the end.
In focus group sessions, students described Wikipedia as
&amp;#8220;the very beginning of the very beginning for me&amp;#8221; or
&amp;#8220;a .5 step in my research process&amp;#8221;, and that it helps primarily in the
beginning because it provided a
&amp;#8220;simple narrative that gives you a grasp&amp;#8221;.
Another focus group participant called Wikipedia &amp;#8220;my presearch tool&amp;#8221;.
Presearch, as the participant defined it, was &amp;#8220;the stage of research
where students initially figure out a topic, find out about it, and
delineate it&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
Now, it&amp;#8217;s perfectly reasonable to say that Wikipedia should not
be cited as an original source;
I have no trouble with professors making &lt;i&gt;that&lt;/i&gt; rule.
Wikipedia itself has a rule that
&lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:No_original_research&quot;&gt;
Wikipedia does not publish original research or original thought&lt;/a&gt;.
Indeed, the same is true for &lt;i&gt;Encyclopedia Britannica&lt;/i&gt;
or any other encyclopedia;
encyclopedias are supposed to be &lt;i&gt;summaries&lt;/i&gt; of knowledge gained
elsewhere.
You would expect that college work would normally &lt;i&gt;not&lt;/i&gt; have
many citations of any encyclopedia, be it Wikipedia or
Encyclopedia Britannica, simply because encyclopedias
are &lt;i&gt;not&lt;/i&gt; original sources.
&lt;/p&gt;
&lt;p&gt;
Rather than running in fear from new materials and techologies,
teachers should be helping students understand how to use them appropriately,
helping them consider the strengths and weaknesses of their
information sources.
Wikipedia should not be the end of any serious research,
but it&amp;#8217;s a reasonable place to start.
You should supplement it with other material, for the simple reason that
you should &lt;i&gt;always&lt;/i&gt; examine multiple sources no matter where you start,
but that doesn&amp;#8217;t make Wikipedia less valuable.
For younger students, there are reasonable concerns about inappropriate
material (e.g., due to Wikipedia vandalism and because Wikipedia covers topics
not appropriate for much younger readers), but the derivative
&lt;a href=&quot;http://schools-wikipedia.org/&quot;&gt;
&amp;#8220;Wikipedia Selection for Schools&amp;#8221;&lt;/a&gt; 
is a good solution for that problem.
I&amp;#8217;m delighted that so much information is available to people everywhere;
we need to help people &lt;i&gt;use&lt;/i&gt;
these resources instead of &lt;i&gt;ignoring&lt;/i&gt; them.
&lt;/p&gt;
&lt;p&gt;
And speaking of which, if you like Wikipedia, please help!
With a little effort, you can make it better for everyone.
In particular, Wikipedia needs more video;
please help the
&lt;a href=&quot;http://videoonwikipedia.org/index.html&quot;&gt;Video on Wikipedia&lt;/a&gt;
folks get more videos on Wikipedia.
This also helps the cause of open video, ensuring that the
Internet continues to be open to innovation.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Robocopy</title>
    <link>http://www.dwheeler.com/blog/2010/03/06#robocopy</link>
    <pubDate>Sat, 06 Mar 2010 09:53 GMT</pubDate>
    <!-- date: 2010-03-06 -->
    <description>
&lt;p&gt;
If you use Microsoft Windows (XP or some later version),
and don&amp;#8217;t have an allergic
reaction to the command line, you should know about
&lt;a href=&quot;http://en.wikipedia.org/wiki/Robocopy&quot;&gt;Robocopy&lt;/a&gt;.
Robocopy (&amp;#8220;robust file copy&amp;#8221;) is a command-line program from
Microsoft that copies collections of files from one place to
another in an efficient way. Robocopy is included in Windows
Vista, Windows 7, and Windows Server 2008. Windows XP and Windows
Server 2003 users can download Robocopy for free from Microsoft
as part of the
&lt;a href=&quot;http://www.microsoft.com/downloads/en/confirmation.aspx?familyId=9d467a69-57ff-4ae7-96ee-b18c4790cffd&amp;displayLang=en&quot;&gt;
Windows Server 2003 &amp;#8220;Resource Kit Tools&amp;#8221;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
Robocopy copies files, like the COPY command,
but Robocopy will only copy a file if the source and destination
have different time stamps or different file sizes.
Robocopy is nowhere near as capable as the Unix/Linux &amp;#8220;rsync&amp;#8221; command,
but for some tasks it suffices.  Robocopy will not copy files that
are currently open (by default it will repeatedly retry copying them),
it can only do one-way mirroring (not bi-directional synchronization),
it can only copy mounted filesystems, and it&amp;#8217;s foolish about how it copies
across a network (it copies the whole file, not just the changed parts).
Anyway, you invoke it at the command line like this:
&lt;pre&gt;
ROBOCOPY Source Destination OPTIONS
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
So, here&amp;#8217;s an example of copying everything from &amp;#8220;c:\data&amp;#8221; to &amp;#8220;q:\data&amp;#8221;:
&lt;pre&gt;
 robocopy c:\data u:\data /MIR /NDL /R:20
&lt;/pre&gt;
&lt;/p&gt;
&lt;p&gt;
To do this on an automated schedule in Windows XP,
put your commands into a text file with a name ending in &amp;#8220;.bat&amp;#8221; and
select Control Panel-&amp;gt; Scheduled Tasks-&amp;gt; Add Scheduled Task.
Select your text file to run, have it run &amp;#8220;daily&amp;#8221;.
You would think that you can&amp;#8217;t run it more than once a day this way,
but that&amp;#8217;s actually not true.
Click on &amp;#8220;Open advanced properties for this task when I click Finish&amp;#8221;
and then press Finish. Now select the &amp;#8220;Schedule&amp;#8221; tab.
Set it to start at some time when you&amp;#8217;re probably using the computer,
click on &amp;#8220;Advanced&amp;#8221;, and set &amp;#8220;repeat task&amp;#8221; so it will run (say, every hour
with a duration of 2 hours).
Then click on &amp;#8220;Show multiple schedules&amp;#8221;, click &amp;#8220;new&amp;#8221;,
and then select &amp;#8220;At system startup&amp;#8221;.
Now it will make copies on startup AND every hour.
You may want to go to the &amp;#8220;Settings&amp;#8221; tab and tweak it further.
You can use Control Panel-&amp;gt; Scheduled tasks
to change the schedule or other settings.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;http://technet.microsoft.com/en-us/magazine/2006.11.utilityspotlight.aspx&quot;&gt; A GUI for Robocopy is available&lt;/a&gt;.
An alternative to Robocopy is
&lt;a href=&quot;http://en.wikipedia.org/wiki/SyncToy&quot;&gt;SyncToy&lt;/a&gt;; SyncToy
has a GUI, but Microsoft won&amp;#8217;t support it,
I&amp;#8217;ve had reliability and speed problems with it, and
SyncToy has a nasty bug in its &amp;#8220;Echo&amp;#8221; mode&amp;#8230; so I don&amp;#8217;t use it.
I suspect the Windows Vista and Windows 7 synchronization tools might
make Robocopy a less useful, but I find that
the Windows XP synchronization tools are terrible&amp;#8230; making
using Robocopy a better approach.
There are a boatload of applications out there that do one-way or two-way
mirroring, including ports of rsync, but getting them installed in some
security-conscious organizations can be difficult.
&lt;/p&gt;
&lt;p&gt;
Of course, if you&amp;#8217;re using Unix/Linux, then use rsync and be happy.
Rsync usually comes with Unix/Linux, and
rsync is leaps-and-bounds better than robocopy.
But not everyone has that option.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Open government: Default release as OSS and Open Access</title>
    <link>http://www.dwheeler.com/blog/2010/02/28#open-government-ideas</link>
    <pubDate>Sun, 28 Feb 2010 22:49 GMT</pubDate>
    <!-- date: 2010-02-28 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://opengovtracker.com/&quot;&gt;U.S. government agencies are
soliciting ideas&lt;/a&gt; on how to make them more transparent,
participatory, collaborative and innovative.
&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Please support proposals to release government-funded works
by default as open access (for research papers) or as open source software
(for software).&lt;/b&gt;
An example is the proposal to the National Science
Foundation (NSF) called
&lt;a href=&quot;http://opennsf.ideascale.com/a/dtd/26920-7046&quot;&gt;Public funding = Public viewing&lt;/a&gt;.
This proposal
recommends that publicly funded projects must be published as open access
and all data and code shared as open source software.
Please vote for this, make helpful comments, and so on.
Similarly, please vote for and/or add similar proposals
for other agencies where they apply.
&lt;/p&gt;
&lt;p&gt;
If &amp;#8220;we the people&amp;#8221; pay for research and development,
then &amp;#8220;we the people&amp;#8221; should normally get the results.
I can see the need for exceptions &amp;mdash; particularly for
classified works &amp;mdash;
but those should be &lt;i&gt;exceptions&lt;/i&gt;.
In short, I think this kind of proposal makes sense.
&lt;/p&gt;
&lt;p&gt;
As I&amp;#8217;ve commented before,
&lt;a href=&quot;http://www.dwheeler.com/blog/2009/05/22#default-release-oss&quot;&gt;
Government-developed Unclassified Software should by default be released
as Open Source Software&lt;/a&gt;, and
&lt;a href=&quot;http://www.dwheeler.com/blog/2009/12/13#open-access-2009&quot;&gt;
research papers produced from U.S. government funding should be open access&lt;/a&gt;.
So please make sure that U.S. agencies know this.
Thanks.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Free/Libre/Open Source Software&amp;#8217;s big win: Jacobsen/JMRI v. Katzer</title>
    <link>http://www.dwheeler.com/blog/2010/02/22#jacobsen-jrmi-katzer</link>
    <pubDate>Mon, 22 Feb 2010 15:56 GMT</pubDate>
    <!-- date: 2010-02-22 -->
    <description>
&lt;p&gt;
There&amp;#8217;s been a major legal victory for
Free/Libre/Open Source Software (FLOSS): Jacobsen v. Katzer.
Articles like
&lt;a href=&quot;http://itmanagement.earthweb.com/features/article.php/3866316/Bruce-Perens-Inside-Open-Sources-Historic-Victory.htm&quot;&gt;
Bruce Perens&amp;#8217;
&amp;#8220;Inside Open Source&amp;#8217;s Historic Victory&amp;#8221;&lt;/a&gt;
and
&lt;a href=&quot;http://www.consortiuminfo.org/standardsblog/article.php?story=201002190850472&quot;&gt;
A Big Victory for F/OSS: Jacobsen v. Katzer is Settled&lt;/a&gt;
give many of the specifics; here is a quick summary.
&lt;/p&gt;
&lt;p&gt;
Bob Jacobsen is a high-energy physicist
who developed (as a hobby) the
&lt;a href=&quot;http://jmri.sourceforge.net/&quot;&gt;Java Model Railroad Interface
(JMRI) Project&lt;/a&gt;.
JMRI is a set of FLOSS Java tools
for configuring and controlling model railroad trains.
Matthew Katzer used loopholes in the law to patent ideas
that Jacobsen and others had
created and publicly discussed first, domain-squatted,
tried to embarass Jacobsen to Jacbonsen&amp;#8217;s employer,
and used part of Jacobsen&amp;#8217;s JMRI software in Katzer&amp;#8217;s own product
without complying with the JMRI license (by not providing the required credit).
The
&lt;a href=&quot;http://jmri.sourceforge.net/k/summary.shtml&quot;&gt;
JMRI has a short summary of this unpleasant fight&lt;/a&gt;, as well as lots
of details and court papers.
&lt;/p&gt;
&lt;p&gt;
What&amp;#8217;s impressive was that Bob Jacobsen stuck through a very hard series
of events.  At first the court didn&amp;#8217;t seem to understand
FLOSS at all, and Jacobsen was handed some very unpleasant defeats.
At one point, Jacobsen had to pay over $30,000 of his own money.
&lt;/p&gt;
&lt;p&gt;
But Jacobsen persevered, and won critical rulings and a final
settlement that is really a complete victory for him.
In 2008 the
&lt;a href=&quot;http://www.cafc.uscourts.gov/opinions/08-1001.pdf&quot;&gt;
United States Court of Appeals for the Federal Circuit vacated the district
court&amp;#8217;s ruling and held that the terms of the Artistic License
(a FLOSS license) are enforceable&lt;/a&gt;.
The court said, &amp;#8220;Open source licensing has become a widely used
method of creative collaboration that serves to advance the arts and sciences
in a manner and at a pace that few could have imagined
just a few decades ago&amp;#8221;.
On February 18, 2010, the parties finally settled.
Among other terms,
Jacobsen has won $100,000, Katzer is forbidden to use Jacobsen&amp;#8217;s
software, and the two patents at issue have been disclaimed.
What&amp;#8217;s more, the rulings stemming from this case
have created a precedent that FLOSS licenses are legally enforceable,
eliminating a lot of uncertainty, and because there is a final settlement
it is not possible to appeal the case.
Strictly speaking, the precedents do not automatically apply everywhere
in the U.S., but even where they do not strictly apply, they will still have
a strong weight.
&lt;/p&gt;
&lt;p&gt;
This result is critically important to FLOSS.
If FLOSS developers could not enforce their licenses, the probable result
would be that a lot of such software would never be written.
The
&lt;a href=&quot;http://jmri.sourceforge.net/k/docket/cafc-pi-1/ccc_brf.pdf&quot;&gt;
Amici Curiae brief by Creative Commons Corporation et al.&lt;/a&gt;
and the
&lt;a
href=&quot;http://www.softwarefreedom.org/news/2009/jun/15/jacobsen-amicus-brief/&quot;&gt;
Software Freedom Law Center Amicus Brief in Jacobsen v. Katzer&lt;/a&gt;
both do a nice job explaining why getting this ruling right was so important.
&lt;/p&gt;
&lt;p&gt;
So, my hat&amp;#8217;s off to Bob Jacobsen.
Through his persistence,
he&amp;#8217;s made the world better for all of us.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>California: Open Source Software is Okay!</title>
    <link>http://www.dwheeler.com/blog/2010/01/09#california-oss-ok</link>
    <pubDate>Sat, 09 Jan 2010 13:07 GMT</pubDate>
    <!-- date: 2010-01-09 -->
    <description>&lt;p&gt;
The California state government has officially declared that
it&amp;#8217;s okay to use open source software inside the
California state government.
On January 7, 2010, the
&lt;a href=&quot;http://www.cio.ca.gov/Government/IT_Policy/ITPL.html&quot;&gt;
California Office of the State Chief Information Officer (OCIO)
released
Information Technology Policy Letter (ITPL) 10-01, titled
&amp;#8220;Open Source Software Policy&amp;#8221; &lt;/a&gt;.
A key purpose of ITPL 10-01 is to
&amp;#8220;formally establish the use of Open Source Software (OSS)
in California state government as an acceptable practice&amp;#8221;,
and the first sentence of its policy statement is that
&amp;#8220;The OCIO permits the use of OSS&amp;#8221;.
It even includes the
&lt;a href=&quot;http://www.opensource.org/docs/osd&quot;&gt;
ten-point open source definition (OSD)
as promulgated by the Open Source Intiative&lt;/a&gt;, to make sure that
there&amp;#8217;s no misunderstanding.
&lt;/p&gt;
&lt;p&gt;
I think this is a big deal.
Officially saying &amp;#8220;it&amp;#8217;s okay to use free/libre/open source software
(FLOSS)&amp;#8221; is really important
before FLOSS can get widespread use in governments.
Most technologists already understand the potential advantages of FLOSS,
but they encounter a lot of resistance when they try to use or develop
FLOSS in large organizations like governments.
Far too many middle managers are instinctively afraid of change
from &amp;#8220;the way we&amp;#8217;ve always done it&amp;#8221;.
For example, they may be afraid of unseen problems, or
afraid their bosses will rake them over the coals later.
Far too often the middle managers have misunderstandings about FLOSS, too.
For example, many managers still believe the myth that
&amp;#8220;you can&amp;#8217;t get support&amp;#8221; and are unaware
of the many companies that &lt;i&gt;do&lt;/i&gt; provide such support.
Companies that make competing proprietary products are
delighted (of course) when governments don&amp;#8217;t consider their
competition&amp;#8230; but
in an era of tight budgets, it doesn&amp;#8217;t make sense for governments
to ignore competing (and often less expensive) products.
When top officials give official &amp;#8220;top cover&amp;#8221; permission to consider
FLOSS, then the technologists and middle managers are far more
likely to fairly and honestly consider them.
&lt;/p&gt;
&lt;p&gt;
Also, the fact that it&amp;#8217;s California matters.
The &lt;a href=&quot;http://en.wikipedia.org/wiki/Economy_of_California&quot;&gt;
economy of the California&lt;/a&gt;
is larger than most countries (if it were a country, it would be
third through tenth in the world depending on how you measure it).
Anything the state of California does can influence other states
and countries; acts like this further legitimize the user of
Free/Libre/Open Source Software (FLOSS).
&lt;/p&gt;
&lt;p&gt;
Of course, the state of California isn&amp;#8217;t the
only government organization to release a memo officially declaring
that it&amp;#8217;s okay to use free/libre/open source software (FLOSS).
Just looking inside the U.S., the
&lt;a href=&quot;http://cio-nii.defense.gov/docs/OpenSourceInDoD.pdf&quot;&gt;
U.S. DoD did this in 2003&lt;/a&gt;, the
&lt;a href=&quot;http://www.whitehouse.gov/omb/memoranda/fy04/m04-16.html&quot;&gt;
Office of Management and Budget (OMB) released a somewhat similar
memo in 2004 that applied to the entire U.S. federal government&lt;/a&gt;, the
&lt;a href=&quot;http://www.doncio.navy.mil/PolicyView.aspx?ID=312&quot;&gt;U.S. Navy
did this in 2007&lt;/a&gt;, and the
the &lt;a href=&quot;http://cio-nii.defense.gov/sites/oss/&quot;&gt;U.S. DoD released
clarifying guidance in 2009 re-emphasizing this point&lt;/a&gt;.
And that&amp;#8217;s only a few examples from U.S. government organizations;
the examples from around the world are legion.
It&amp;#8217;s really difficult to get people to change what they do&amp;#8230;
as you can tell from the number of times that various U.S. federal government
organizations have had to state and re-state it.
Still, they really do have an effect.
Official policy statements that FLOSS is used, such as the one
California just released, are a necessary first step to changing things
from &amp;#8220;the way we&amp;#8217;ve always done things&amp;#8221;.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>