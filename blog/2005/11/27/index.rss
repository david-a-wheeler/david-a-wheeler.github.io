<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>FLOSS Java Roadmap published</title>
    <link>http://www.dwheeler.com/blog/2005/11/27#java-roadmap</link>
    <pubDate>Sun, 27 Nov 2005 21:53 GMT</pubDate>
    <!-- date: 2005-11-27 -->
    <description>
&lt;p&gt;
Ever since Richard Stallman wrote his article
&lt;a href=&quot;http://www.gnu.org/philosophy/java-trap.html&quot;&gt;Free But Shackled -
The Java Trap&lt;/a&gt;,
many developers have avoided using Java.
Why? At the time, there was no practical way to delivery fully
free-libre / open source software (FLOSS) using Java while still
being fully functional.
Not because it was illegal to have a FLOSS Java implementation,
but simply because the FLOSS tools and libraries weren&amp;#8217;t available.
&lt;/p&gt;
&lt;p&gt;
But things have been moving quickly; many developers have been working
hard to develop an implementation of Java that doesn&amp;#8217;t depend on
proprietary software.
The problem is that there hasn&amp;#8217;t been a simple way to understand
what&amp;#8217;s going on &amp;#8212; unless you&amp;#8217;re an &amp;#8220;insider&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
Thankfully, that&amp;#8217;s changed.
&lt;a href=&quot;http://developer.classpath.org/support/&quot;&gt;
Escaping the Java Trap: A practical road map to the Free Software and Open
Source alternatives&lt;/a&gt;
is a simple 3-page summary that surveys the many different FLOSS projects
that are building, testing, and distributing a complete FLOSS Java
implementation (including mountains of libraries).
As the roadmap notes,
&amp;#8220;Important
large applications like JOnAS, OpenOffice.org 2, Eclipse 3 and Tomcat 5 are
known to work. This document provides a road map of the various projects; how
they work together, where they are, where they&amp;#8217;re going, and how we make sure
that they work well and are compatible.&amp;#8221;
&lt;/p&gt;
&lt;p&gt;
This is the roadmap I noted earlier
&lt;a href=&quot;http://www.dwheeler.com/essays/fisl2005.html#javaimp&quot;&gt;
as part of my FISL 2005 travelogue&lt;/a&gt;.
Although I helped the other authors write it, I really operated as
a ghost writer rather than speaking with my own voice.
Basically, I really wanted to know what the state of FLOSS Java
implementations was, and I was fortunate to be able to talk with the
top experts at FISL.
I promised them if they told me about the various parts, I would in turn
help them describe it in a simple way.
So the material is really all theirs &amp;#8212; I was just lucky enough to
be the first recipient of it.
&lt;/p&gt;
&lt;p&gt;
Other articles also help give more perspectives on the topic, too.
&lt;a href=&quot;http://www.redhat.com/magazine/012oct05/features/java/&quot;&gt;
The state of Java on Linux&lt;/a&gt; by Tom Tromey
has some interesting material, for example.
But I know of no other document that gives such a wide overview of
how a full FLOSS implementation of Java (TM) is getting built,
tested, and distributed.
&lt;/p&gt;
&lt;p&gt;
Again, take a peek:
&lt;a href=&quot;http://developer.classpath.org/support/&quot;&gt;
Escaping the Java Trap: A practical road map to the Free Software and Open
Source alternatives&lt;/a&gt;
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>