<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Parchment: Running the Z-machine</title>
    <link>http://www.dwheeler.com/blog/2009/05/28#parchment</link>
    <pubDate>Thu, 28 May 2009 20:03 GMT</pubDate>
    <!-- date: 2009-05-28 -->
    <description>
&lt;p&gt;
I just learned of fun web application called
&lt;a href=&quot;http://code.google.com/p/parchment/&quot;&gt;Parchment&lt;/a&gt;.
Parchment lets you play interactive fiction (I.F., aka &amp;#8220;text adventure games&amp;#8221;)
using just your web browser.
It only works with I.F. in &amp;#8220;Z-machine&amp;#8221; format, but that&amp;#8217;s
a very common format.
&lt;/p&gt;
&lt;p&gt;
So
&lt;a href=&quot;http://parchment.toolness.com/&quot;&gt;
go to the parchment site and try out something from their
long list of interactive fiction&lt;/a&gt;&amp;#8230; now you don&amp;#8217;t need to install
anything!
That includes
&lt;a href=&quot;http://parchment.googlecode.com/svn/trunk/parchment.html?story=http://parchment.toolness.com/if-archive/games/zcode/Accuse.zblorb.js&quot;&gt;
my small replayable puzzle &amp;#8220;Accuse&amp;#8221;&lt;/a&gt;
(my &lt;a href=&quot;http://www.dwheeler.com/accuse/&quot;&gt;Accuse source code
is already available&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;
If you want more information about it,
&lt;a href=&quot;http://www.toolness.com/wp/?p=49&quot;&gt;
here&amp;#8217;s a brief post about Parchment by its author, Atul Varma&lt;/a&gt;.
Atul built this based on an existing program,
Thomas Thurman&amp;#8217;s Gnusto.
Both are open source software (using the GPLv2 license).
Once again, this demonstrates the neat thing about community-developed
software; one person developed a program for one circumstance,
and another extended it for a different circumstance.
&lt;/p&gt;
&lt;p&gt;
There are several tools available for &lt;i&gt;creating&lt;/i&gt; interactive fiction.
I&amp;#8217;ve been watching
&lt;a href=&quot;http://inform7.com/&quot;&gt;Inform 7&lt;/a&gt; for a while, with interest,
because it takes a radically different approach to writing code.
Inform 7 is a natural-language programming language that tries to
actively exploit features of natural language to make developing these
kinds of things easier.
&lt;a href=&quot;http://www.brasslantern.org/writers/howto/i7tutorial.html&quot;&gt;
You can see a brief Inform 7 tutorial if you&amp;#8217;re curious&lt;/a&gt;, as well as
the full &lt;a href=&quot;http://www.inform7.com/learn/man/index.html&quot;&gt;
Writing with Inform&lt;/a&gt; documentation.
Inform 7 isn&amp;#8217;t itself OSS, though significant portions are;
&lt;a href=&quot;http://inform7.com/sources/i6n/&quot;&gt;inform 6 (a key substrate)&lt;/a&gt;
and
&lt;a href=&quot;http://inform7.com/sources/webs/&quot;&gt;
many other portions including the Inform 7 standard rules&lt;/a&gt;
are released under the Artistic License 2.0.
The
&lt;a href=&quot;http://inform7.com/write/extensions/&quot;&gt;extensions&lt;/a&gt;
are released under the &amp;#8220;Attribution Creative Commons licence&amp;#8221;;
that&amp;#8217;s not normally a license used for software, but I think it&amp;#8217;d meet
the criteria for OSS, and
&lt;a href=&quot;https://fedoraproject.org/wiki/Licensing&quot;&gt;Fedora approves of
this license for content&lt;/a&gt;.
I hope that someday the rest will be released as OSS as well.
The logic behind Inform 7 is described in
&lt;a href=&quot;http://www.inform7.com/learn/documents/WhitePaper.pdf&quot;&gt;
&amp;#8220;Natural Language, Semantic Analysis and Interactive Fiction&amp;#8221;
by Graham Nelson&lt;/a&gt;.
If you&amp;#8217;re interested in some of the technical stuff behind it,
the text of the
&lt;a href=&quot;http://www.inform7.com/sources/src/stdrules/Woven/index.html&quot;&gt;
Standard Rules&lt;/a&gt;,
the text of the
&lt;a href=&quot;http://inform7.com/write/extensions/&quot;&gt;extensions&lt;/a&gt;,
&lt;a href=&quot;http://www.ifwiki.org/index.php/Inform_7_for_Programmers&quot;&gt;
Inform 7 for programmers&lt;/a&gt;, and the
&lt;a href=&quot;http://inform7.com/learn/documents/Rules%20Chart.pdf&quot;&gt;Chart of Rules&lt;/a&gt;
can tell you more.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Wikipedia changes its license</title>
    <link>http://www.dwheeler.com/blog/2009/05/23#wikipedia-license-change</link>
    <pubDate>Sat, 23 May 2009 12:36 GMT</pubDate>
    <!-- date: 2009-05-23 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://meta.wikimedia.org/wiki/Licensing_update/Result&quot;&gt;
The Wikimedia Foundation (WMF) will change the licensing terms on all
its materials &amp;mdash; including Wikipedia&lt;/a&gt;.
Now, all of its existing material will be released under the
Creative Commons Attribution-ShareAlike (CC-BY-SA) license
in addition to the current GNU Free Documentation License (GFDL).
The 
WMF says &amp;#8220;This change is meant to advance the WMF&amp;#8217;s mission by
increasing the compatibility and availability of free content.&amp;#8221;
This means that
Wikipedia material can now be combined with the vast amount
of CC-BY-SA licensed material, and Wikipedia can now include the volumes
of CC-BY-SA material (that material will just be CC-BY-SA).
It also makes it easier to use Wikipedia material (and other material
from the Wikimedia Foundation).
&lt;/p&gt;
&lt;p&gt;
I think this is a good thing overall.
Incompatible licenses are a real scourge on community-developed works.
Past experience shows that
license incompatibility can be a real problem for
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;free-libre/
open source software (FLOSS or OSS)&lt;/a&gt;, in particular.
&lt;a href=&quot;http://oreilly.com/catalog/opensources/book/perens.html&quot;&gt;
Bruce Perens warned about FLOSS license incompatibility back in 1999!&lt;/a&gt;
As I argue in
&lt;i&gt;&lt;a href=&quot;http://www.dwheeler.com/essays/gpl-compatible.html&quot;&gt;
Make Your Open Source Software GPL-Compatible. Or Else&lt;/a&gt;&lt;/i&gt;,
you should release free-libre/ open source software (FLOSS) using a
GPL-compatible license.
You don&amp;#8217;t need to &lt;i&gt;use&lt;/i&gt; the GPL, but using
a GPL-compatible license (like the MIT, BSD-new, LGPL, or GPL)
so means that people can combine your software with other software
to create larger works.
I show how this works in
&lt;i&gt;&lt;a href=&quot;http://www.dwheeler.com/essays/floss-license-slide.html&quot;&gt;
The Free-Libre / Open Source Software (FLOSS) License Slide&lt;/a&gt;&lt;/i&gt;,
which has a simple graph showing how common FLOSS licenses can work together.
Wikipedia articles aren&amp;#8217;t software, but the principles still apply -
licenses need to &lt;i&gt;enable&lt;/i&gt; community-developed works, not disable them.
&lt;/p&gt;
&lt;p&gt;
Now, nothing is perfect.
One nice benefit of the
&lt;a href=&quot;http://www.gnu.org/copyleft/fdl.html&quot;&gt;
GNU Free Documentation License (GFDL)&lt;/a&gt;
is that it requires that readers be able to get editable versions
whose format specification is available to the public
(for details, see its text on &amp;#8220;transparent&amp;#8221; copies).
This is a really nice feature of the GFDL; it counters some of the problems
of proprietary formats.
&lt;/p&gt;
&lt;p&gt;
The GFDL has many problems, though, when used for short works like
Wikipedia articles or images.
Most obviously, it requires that you include the entire text of the
license with each work (see GFDL 1.3 section 2).
That&amp;#8217;s no problem for large manuals,
which is what the GFDL was designed for,
but it&amp;#8217;s a big problem for short works.
Nobody likes having a license longer than the article it&amp;#8217;s attached to!
This is one reason why CC-BY-SA is so widely used for short works -
and since Wikipedia is primarily a large set of short works, it makes sense.
Which is why I (and many others) voted to approve this change.
&lt;/p&gt;
&lt;p&gt;
Now it&amp;#8217;s certainly true that people also complain that the GFDL
allows the addition of unmodifiable sections.
But many GFDL items don&amp;#8217;t have them, and
&lt;a href=&quot;http://www.debian.org/vote/2006/vote_001&quot;&gt;
Debian determined through a formal vote that &amp;#8220;GFDL-licensed works
without unmodifiable sections are free [as in freedom]&amp;#8221;&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
I should also give credit to the
Wikimedia Foundation (WMF), Richard Stallman of the FSF, and
Lawrence Lessig, who worked together to make this possible.
&lt;/p&gt;
&lt;p&gt;
For more on the Wikimedia license modification, you can see
&lt;a href=&quot;http://meta.wikimedia.org/wiki/Licensing_update/Questions_and_Answers&quot;&gt;Wikimedia license FAQ&lt;/a&gt;,
&lt;a href=&quot;http://lessig.org/blog/2008/11/enormously_important_news_from.html&quot;&gt;Lawrence Lessig&amp;#8217;s post on GFDL 1.3&lt;/a&gt;,
&lt;a href=&quot;http://lwn.net/Articles/305892/&quot;&gt;GFDL 1.3: Wikipedia&amp;#8217;s exit
permit&lt;/a&gt;,
&lt;a href=&quot;http://www.gnu.org/licenses/fdl-1.3-faq.html&quot;&gt;FDL 1.3 FAQ&lt;/a&gt;,
and
&lt;a href=&quot;http://www.fsf.org/blogs/licensing/2008-12-fdl-open-letter&quot;&gt;
An open response to Chris Frey regarding GFDL 1.3&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Government-developed Unclassified Software: Default release as Open Source Software</title>
    <link>http://www.dwheeler.com/blog/2009/05/22#default-release-oss</link>
    <pubDate>Fri, 22 May 2009 20:44 GMT</pubDate>
    <!-- date: 2009-05-22 -->
    <description>
&lt;p&gt;
I&amp;#8217;d like to see this idea seriously considered and discussed:
By default, unclassified software which the government paid to develop
should be released to the public as
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;open source software&lt;/a&gt;
(unless there&amp;#8217;s a good reason not to).
&lt;/p&gt;
&lt;p&gt;
Why? Well,
If &amp;#8220;we the people&amp;#8221; paid to develop it, then
&amp;#8220;we the people&amp;#8221; should get it!
I think this idea fits into the good government ideal of data transparency;
after all, software is data.
Currently, we have a lot of waste and unnecessary
costs due to loss, re-development, and/or government-created monopolies.
The government is not a venture capitalist (VC); people who need a VC
should go to a VC.
&lt;/p&gt;
&lt;p&gt;
Let me focus specifically on the United States.
I think this idea easily fits into the broader ideas of
&lt;a href=&quot;http://www.whitehouse.gov/blog/09/05/21/Opening/&quot;&gt;transparency and open
government&lt;/a&gt;, including the
&lt;a href=&quot;http://www.whitehouse.gov/the_press_office/Transparency_and_Open_Government/&quot;&gt;Memorandum on Transparency and Open Government&lt;/a&gt;.
Look at all the excitement over &lt;a href=&quot;http://www.data.gov/&quot;&gt;data.gov&lt;/a&gt;,
indeed,
&lt;a href=&quot;http://sunlightlabs.com/contests/appsforamerica2/&quot;&gt;Apps for America&lt;/a&gt; having a contest to develop software to use data from data.gov.
&lt;/p&gt;
&lt;p&gt;
Indeed, there&amp;#8217;s a long history of U.S. laws specifically set up to
make data available.
Most obviously,
Freedom on information act (FOIA) requests make it possible to extract
information from the U.S. government.
&lt;a href=&quot;http://www.law.cornell.edu/uscode/17/105.html&quot;&gt;17 USC 105&lt;/a&gt;
and
&lt;a href=&quot;http://www.law.cornell.edu/uscode/17/usc_sec_17_00000101----000-.html&quot;&gt;17 USC 101&lt;/a&gt;
prevents the U.S. government from claiming U.S. copyright on a work
&amp;#8220;prepared by an officer or employee of the United States Government
as part of that person’s official duties&amp;#8221;.
So this idea would be an extension of what&amp;#8217;s already gone on.
&lt;/p&gt;
&lt;p&gt;
Let me focus on research, and how this idea could help advance technology.
Think of all the advantages if software developed by U.S.-funded research
could be reused by other research projects and commercial firms.
For example, imagine if other researchers could simply
extend previous work by modifying previously-developed software,
instead of re-building yet another version from scratch.
Anyone could take commercialize the research making it more likely
that it would be commercialized instead of being lost in the archives shown
at the end of &lt;i&gt;Raiders of the Lost Ark&lt;/i&gt;.
Some argue that giving sole rights is the only way to commercialization,
but that&amp;#8217;s just not true;
&lt;a href=&quot;http://www.dwheeler.com/essays/commercial-floss.html&quot;&gt;
open source software &lt;b&gt;is&lt;/b&gt; commercial software&lt;/a&gt;, so this is
simply a different and fairer path to commercialization.
In contrast, the current system inhibits all kinds of technical progress;
&lt;a href=&quot;http://fmv.jku.at/papers/Biere-ETH-TR-444-2004.pdf&quot;&gt;
Biere&amp;#8217;s &amp;#8220;The Evolution from LIMMAT to NANOSAT&amp;#8221; (Apr 2004)&lt;/a&gt;
found that
&amp;#8220;important details are often omitted in [research]
publications and can only be extracted from source code&amp;#8230;
[Making source code available]
is as important to the advancement of the field as publications&amp;#8221;.
Originally I thought of this idea for research software, and it&amp;#8217;s
not hard to see why.
But when I starting thinking about the reasons for doing this &amp;mdash;
especially &amp;#8220;if &amp;#8216;we the people&amp;#8217; paid to develop it, then
&amp;#8216;we the people&amp;#8217; should get it&amp;#8221; &amp;mdash; then
I realized that this principle applies much more broadly.
&lt;/p&gt;
&lt;p&gt;
An
&lt;a href=&quot;http://transition2008.wordpress.com/2009/05/21/open-government-directive-not-yet/&quot;&gt;open government directive&lt;/a&gt; isn&amp;#8217;t out yet, but they&amp;#8217;re
clearly working on it.
Please submit this - and other ideas like it - to them.
I think there&amp;#8217;s a lot of promise, but they can only enact and refine
ideas that they&amp;#8217;ve heard of.
If you like this idea, &lt;a href=&quot;http://opengov.ideascale.com/akira/dtd/2778-4049&quot;&gt;please vote for it&lt;/a&gt;.
&lt;/p&gt;
&lt;p&gt;
If this happened, I envision a two-stage process:
(1) release of the software as an archive (so it can be downloaded), and
(2) some of it will get picked up and used to start an active OSS project.
The second stage might not happen for many years after the first, and
that&amp;#8217;s okay.
Some will ask &amp;#8220;how will people find it&amp;#8221;, but I think that&amp;#8217;s the wrong
question.
There are many commercial search engines that can find code, but they
can only find stuff that&amp;#8217;s web-accessible; let&amp;#8217;s give them
something to find.
&lt;/p&gt;
&lt;p&gt;
Perhaps this should be done in stages.
For example, perhaps it&amp;#8217;d be best to start with software developed by
research.
Researchers are supposed to share their results anyway (under most cases),
and the lack of software release often inhibits research
(e.g., it&amp;#8217;s harder to check or repeat results).
You could then broaden this to other types of software.
&lt;/p&gt;
&lt;p&gt;
I&amp;#8217;m sure there will need to be exceptions.
There would need to be some sort of guidelines to figure out
when to grant those exceptions, and those guidelines should be
developed though lively discussion.
Most obviously,
if it&amp;#8217;s a special ingredient necessary for national security, then
it should be classified and not revealed in &lt;i&gt;any&lt;/i&gt; form.
I would not expect weapon systems or intelligence software
to be released (though sometimes
generic functions developed in them could be released).
Export controls would still apply.
But the exceptions should be that: Exceptions.
&lt;!-- My thanks to Reg Meeson who looked this crazy idea over, and
agreed it wasn't crazy. --&gt;
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Wikipedia for childrens&amp;#8217; schools</title>
    <link>http://www.dwheeler.com/blog/2009/05/11#wikipedia-for-schools</link>
    <pubDate>Mon, 11 May 2009 12:49 GMT</pubDate>
    <!-- date: 2009-05-11 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://en.wikipedia.org/&quot;&gt;Wikipedia&lt;/a&gt; is a cool project.
But if you want to hand an encyclopedia to younger children or to schools,
Wikipedia is not a great choice.
Wikipedia is not &amp;#8220;child-safe&amp;#8221;, nor is intended to be; it includes
a lot of &amp;#8220;adult&amp;#8221; content.
Also, Wikipedia constantly suffers vandalism;
the vandalism is often repaired quickly,
but that&amp;#8217;s little comfort to parents and teachers.
There&amp;#8217;s also the problem of Internet access; schools typically employ
blocking software, and blocking software is fundamentally not smart.
Since Wikipedia mixes material that&amp;#8217;s okay for children with stuff that
is not, Wikipedia often gets blocked by schools for children.
Some schools for children just don&amp;#8217;t have Internet access at all,
for a variety of reasons.
All of this makes it hard for such schools to directly use Wikipedia.
&lt;/p&gt;
&lt;p&gt;
&lt;a href=&quot;http://schools-wikipedia.org/&quot;&gt;Wikipedia for schools&lt;/a&gt;
is a cool project that compensates for this.
It&amp;#8217;s a free, hand-checked, non-commercial selection from Wikipedia,
targeted around the UK National Curriculum and useful for much of the
English speaking world. The current version has about 5500 articles
(as much as can be fit on a DVD with good size images)
and is &amp;#8220;about the size of a twenty
volume encyclopaedia (34,000 images and 20 million words)&amp;#8221;.
It was developed by carefuly selecting for content, then checking for
vandalism and suitability by &amp;#8220;SOS Children volunteers&amp;#8221;.
You can download it for free from the website, or as a free 3.5GB DVD.
&lt;p&gt;
I also see this as a future model for Wikipedia &amp;mdash; allow people
to edit, but have a separate vetting process that identifies
particular versions of an article as vetted.
Then, people can choose if they want to
see the latest version or the most recent vetted version.
To some, this is very controversial, but I don&amp;#8217;t see it that way.
A vetting process doesn&amp;#8217;t prevent future edits,
and it creates a way for people to get what they want&amp;#8230;
material that they can have increased confidence in.
The trick is to develop a good-enough vetting process (or perhaps
multiple vetting/rating processes for different purposes).
This didn&amp;#8217;t make sense back when Wikipedia was first starting
(the problem was to get articles written at all!), but
now that Wikipedia is more mature, it shouldn&amp;#8217;t be surprising
that there&amp;#8217;s a new need to identify vetted articles.
Yes, you have to worry about countries to whom &amp;#8220;democracy&amp;#8221; is
a dirty word, but I think such problems can be resolved.
This is hardly a new idea; see
&lt;a href=&quot;http://meta.wikimedia.org/wiki/Article_validation&quot;&gt;Wikimedia&amp;#8217;s
article on article validation&lt;/a&gt;,
&lt;a href=&quot;http://en.wikipedia.org/wiki/Wikipedia:Pushing_to_1.0&quot;&gt;Wikipedia&amp;#8217;s
pushing to 1.0&lt;/a&gt;,
&lt;a href=&quot;http://meta.wikimedia.org/wiki/User:Eloquence/WikiQA&quot;&gt;WikiQA by
Eloquence&lt;/a&gt;, and
&lt;a href=&quot;http://www.mediawiki.org/wiki/Extension:FlaggedRevs&quot;&gt;FlaggedRevs&lt;/a&gt;.
I am sure that a vetting/validation process will take time to develop, and
it &lt;i&gt;will&lt;/i&gt; be imperfect&amp;#8230; but that doesn&amp;#8217;t make it a bad idea.
&lt;/p&gt;
&lt;p&gt;
So anyway, if you know or have younger kids, check out
&lt;a href=&quot;http://schools-wikipedia.org/&quot;&gt;Wikipedia for schools&lt;/a&gt;.
This is a project that more people should know about.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>FLOSS doubles every 14 months!</title>
    <link>http://www.dwheeler.com/blog/2009/05/07#floss-doubles-14-months</link>
    <pubDate>Thu, 07 May 2009 18:11 GMT</pubDate>
    <!-- date: 2009-05-07 -->
    <description>
&lt;p&gt;
I just took a look at
&lt;a href=&quot;http://www.redhat.com/f/pdf/written-statement-in-case-g.pdf&quot;&gt;
Red Hat&amp;#8217;s 2009 brief to the European Patent Office on why software patents
should not be allowed&lt;/a&gt;.
It&amp;#8217;s a nice brief, noting that software patents hinder software innovation,
and that there is a sound legal basis not to expand availability
of such patents in Europe.
(Here&amp;#8217;s &lt;a href=&quot;http://press.redhat.com/2009/04/30/old-world-and-new-world-software-patent-problems/&quot;&gt;Red Hat&amp;#8217;s press release&lt;/a&gt;, and
&lt;a href=&quot;http://www.computerworlduk.com/community/blogs/index.cfm?entryid=2162&amp;amp;blogid=14&quot;&gt;
Glyn Moody&amp;#8217;s comments (ComputerWorld UK) on it&lt;/a&gt;).
&lt;/p&gt;

&lt;p&gt;
Their brief points to another paper with very interesting results:
&lt;a href=&quot;http://dirkriehle.com/publications/2008/the-total-growth-of-open-source/&quot;&gt;
&amp;#8220;The Total Growth of Open Source&amp;#8221;
by Amit Deshpande and Dirk Riehle
(Proceedings of the Fourth Conference on Open Source Systems (OSS 2008).
Springer Verlag, 2008. Page 197-209)&lt;/a&gt;.
In this paper, they analyze the growth of more than 5000 open source software
projects, and show that
&amp;#8220;the total amount of source code as well as the total number
of open source projects is growing at an exponential rate.&amp;#8221;
In their conclusion they state that the
&amp;#8220;total amount of source code and the total number of projects
double about every 14 months.&amp;#8221;
&lt;/p&gt;

&lt;p&gt;
That is an &lt;i&gt;extraordinary&lt;/i&gt; rate of growth.
Exponential growth can start small, but when it continues it will
completely flatten anything not growing exponentially (or growing as fast).
This result is consistent with my earlier work,
&lt;a href=&quot;http://www.dwheeler.com/sloc/&quot;&gt;&lt;i&gt;More than a Gigabuck: Estimating GNU/Linux&amp;#8217;s Size&lt;/i&gt;&lt;/a&gt;, which also found very rapid growth in
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;free/libre/open source software (FLOSS)&lt;/a&gt;.
&lt;/p&gt;

&lt;p&gt;
So if you&amp;#8217;re interested in software trends, take a look at
&lt;a href=&quot;http://dirkriehle.com/publications/2008/the-total-growth-of-open-source/&quot;&gt;&amp;#8220;The Total Growth of Open Source&amp;#8221;&lt;/a&gt; and
&lt;a href=&quot;http://www.redhat.com/f/pdf/written-statement-in-case-g.pdf&quot;&gt;
Red Hat&amp;#8217;s brief to the EPO on software patents&lt;/a&gt;.
I think they&amp;#8217;re both worth reading.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Own your own site!</title>
    <link>http://www.dwheeler.com/blog/2009/05/02#own-your-own-site</link>
    <pubDate>Sat, 02 May 2009 13:40 GMT</pubDate>
    <!-- date: 2009-05-02 -->
    <description>
&lt;p&gt;
&lt;a href=&quot;http://en.wikipedia.org/wiki/GeoCities&quot;&gt;Geocities&lt;/a&gt;,
a web hosting site sponsored by Yahoo, is shutting down.
Which means that, barring lots of work by others, all of its information
will be disappearing forever.
&lt;a href=&quot;http://ascii.textfiles.com/archives/1961&quot;&gt;
Jason Scott is trying to coordinate efforts to
archive GeoCities&amp;#8217; information&lt;/a&gt;,
but it&amp;#8217;s not easy.
He estimates they&amp;#8217;re archiving about 2 Gigabytes/hour,
pulling in about 5 Geocities sites per second&amp;#8230; and they
don&amp;#8217;t know if it&amp;#8217;ll be enough.
What&amp;#8217;s more, the group has yet to figure out how to serve it:
&amp;#8220;It is more important to me to grab the data than to figure out how to
serve it later&amp;#8230;.
I don&amp;#8217;t see how the final collection won’t end up online, but how
is elusive&amp;#8230;&amp;#8221;
&lt;/p&gt;

&lt;p&gt;
This sort of thing happens all the time, sadly.
Some company provides a free service for your site / blog / whatever&amp;#8230;
and so you take advantage of it.
That&amp;#8217;s fine, but if you care about your site,
make sure you own your data sufficiently so that you can
&lt;i&gt;move somewhere else&lt;/i&gt;&amp;#8230; because you may have to.
Yahoo is a big, well-known company, who paid $3.5 billion for
Geocities&amp;#8230; and now it&amp;#8217;s going away.
&lt;/p&gt;

&lt;p&gt;
Please
&lt;i&gt;own your own site&lt;/i&gt; &amp;mdash; both its domain name and its content &amp;mdash;
if it&amp;#8217;s important to you.
I&amp;#8217;ve seen way too many people have trouble with their sites because they
didn&amp;#8217;t really own them.
Too many scams are based on folks who &amp;#8220;register&amp;#8221; your domain for you,
but actually register it in their own names&amp;#8230; and then hold your
site as a hostage.
Similarly, many organizations provide wonderful software that is unique
to their site for managing your data&amp;#8230; but then you either can&amp;#8217;t get your
own data, or you can&amp;#8217;t &lt;i&gt;use&lt;/i&gt; your data because you can&amp;#8217;t separately
get and re-install the software to use it.
Using open standards and/or open source software
can help reduce vendor lock-in &amp;mdash;
that way, if the software vendor/website
disappears or stops supporting the product/service, you can still
use the software or a replacement for it.
And of course, continuously
back up your data offsite, so if the hosting service
disappears without notice, you still have your data and you can get back on.
&lt;/p&gt;

&lt;p&gt;
I practice what I preach.
My personal site, &lt;a href=&quot;http://www.dwheeler.com&quot;&gt;www.dwheeler.com&lt;/a&gt;,
has moved several times, without problems.
I needed to switch my web hosting service (again) earlier in 2009,
and it was essentially no problem.
I just used &amp;#8220;rsync&amp;#8221; to copy the files to my new
hosting service, change the domain information so people would use the
new hosting service instead, and I was up and running.
I&amp;#8217;ve switched web servers several times, but since I emphasize using
ordinary standards like HTTP, HTML, and so on, I haven&amp;#8217;t had any trouble.
The key is to (1) own the domain name, and (2)
make sure that you have your data (via backups) in
a format that lets you switch to another provider or vendor.
Do that, and you&amp;#8217;ll save yourself a lot of agony later.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>