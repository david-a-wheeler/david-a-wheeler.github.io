<?xml version="1.0" encoding="UTF-8"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Peter Miller and improving make</title>
    <link>http://www.dwheeler.com/blog/2014/10/22#make</link>
    <pubDate>Wed, 22 Oct 2014 18:24 GMT</pubDate>
    <!-- date: 2014-10-22 -->
    <description>
&lt;p&gt;
First, a sad note.
&lt;a href=&quot;http://article.gmane.org/gmane.linux.debian.user.news/547&quot;&gt;Peter Miller died on 2014-07-27 from leukemia&lt;/a&gt;.
He did a lot of important things, including writing the influential paper
&lt;a href=&quot;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.20.2572&quot;&gt;&amp;#8220;Recursive Make Considered Harmful&amp;#8221;&lt;/a&gt;.
Rest in peace.
&lt;/p&gt;
&lt;p&gt;
I should point out an
&lt;a href=&quot;http://www.dwheeler.com/essays/make.html&quot;&gt;essay I&amp;#8217;ve written
about improving make&lt;/a&gt;.
Make is widely used, but the POSIX standard for it lacks
key functions, including vital ones that Peter Miller pointed out years ago.
Thankfully, progress has been made.
My hope is that progress will continue to happen;
&lt;a href=&quot;http://www.dwheeler.com/essays/make.html&quot;&gt;I welcome help
for improving the standard and implementations of make&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Open Source Software in U.S. Government</title>
    <link>http://www.dwheeler.com/blog/2014/10/20#oss-in-government</link>
    <pubDate>Mon, 20 Oct 2014 12:06 GMT</pubDate>
    <!-- date: 2014-10-20 -->
    <description>
&lt;p&gt;
The report
&lt;a href=&quot;https://host-project.org/content/oss-software-government-challenges-and-opportunities&quot;&gt;&amp;#8220;Open Source Software in Government: Challenges and Opportunities&amp;#8221;&lt;/a&gt; is available to the public (you can &lt;a href=&quot;https://host-project.org/sites/default/files/Open%20Source%20Software%20in%20Government%20-%20Challenges%20and%20Opportunities.pdf&quot;&gt;jump to the &amp;#8220;Download full report&amp;#8221; link at the bottom&lt;/a&gt;).
This paper, which I co-authored,
discusses key challenges and opportunities in the
U.S. government application of open source software (OSS).
It became publicly available only recently,
even though it was finished a while back;
I hope it&amp;#8217;s been worth the wait.
If you&amp;#8217;re interested in the issues of OSS and government,
I think you&amp;#8217;ll find this report very illuminating.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>POODLE attack against SSLv3</title>
    <link>http://www.dwheeler.com/blog/2014/10/14#poodle-sslv3</link>
    <pubDate>Tue, 14 Oct 2014 21:15 GMT</pubDate>
    <!-- date: 2014-10-14 -->
    <description>
&lt;p&gt;
There is a new
&lt;a href=&quot;http://www.dwheeler.com/essays/poodle-sslv3.html&quot;&gt;POODLE attack
against SSLv3&lt;/a&gt;.
See my page for more info.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Twitter</title>
    <link>http://www.dwheeler.com/blog/2014/10/13#twitter-username</link>
    <pubDate>Mon, 13 Oct 2014 15:41 GMT</pubDate>
    <!-- date: 2014-10-13 -->
    <description>
&lt;p&gt;
My username on Twitter is
&lt;a href=&quot;https://twitter.com/drdavidawheeler&quot;&gt;drdavidawheeler&lt;/a&gt;,
for those on Twitter who want occasional comments
on computer security, open source software, software development,
and so on.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>A tester walks into a bar</title>
    <link>http://www.dwheeler.com/blog/2014/10/09#tester-walks-bar</link>
    <pubDate>Thu, 09 Oct 2014 18:15 GMT</pubDate>
    <!-- date: 2014-10-09 -->
    <description>
&lt;p&gt;
&lt;blockquote&gt;
&lt;i&gt;A tester walks into a bar and orders a beer.
Then he orders 999,999 beers.
Orders 0 beers.  Orders -1 beers.
Orders a coyote.  Orders a qpoijzcpx.
Then he insults the bartender.&lt;/i&gt;
&lt;/blockquote&gt;
&lt;!-- That last bit is an addition from a co-worker. I reordered
them to put the numbers first, I think that's easier to follow. --&gt;
&lt;/p&gt;
&lt;p&gt;
This joke (with variations)
is making the rounds, but it also has a serious point.
It&amp;#8217;s a nice example of how testing should work,
including software testing.
&lt;/p&gt;
&lt;p&gt;
Too many of today&amp;#8217;s so-called software &amp;#8220;tests&amp;#8221;
only check for correct data.
This has led to numerous vulnerabilities including
&lt;a href=&quot;http://www.dwheeler.com/essays/heartbleed.html&quot;&gt;Heartbleed&lt;/a&gt;
and
&lt;a href=&quot;http://www.zdnet.com/apples-goto-fail-tells-us-nothing-good-about-cupertinos-software-delivery-process-7000027449/&quot;&gt;Apple&amp;#8217;s &amp;#8220;goto fail; goto fail;&amp;#8221; vulnerability&lt;/a&gt;.
The paper
&lt;a href=&quot;https://crypto.stanford.edu/~dabo/pubs/abstracts/ssl-client-bugs.html&quot;&gt;&amp;#8220;The Most Dangerous Code in the World:
Validating SSL Certificates in Non-Browser Software&amp;#8221;&lt;/a&gt;
found that a disturbingly large number of programss&amp;#8217;
security depends on SSL certificate validation, and they
are insecure because no one actually
tested them with invalid certificates.
They note that
&amp;#8220;most of the vulnerabilities we found should
have been discovered during development with proper unit testing&amp;#8221;.
&lt;/p&gt;
&lt;p&gt;
Good software testing must include
&lt;a href=&quot;http://www.dwheeler.com/essays/heartbleed.html#negative-testing&quot;&gt;negative testing&lt;/a&gt;
(tests with data that should be rejected)
to ensure that the software protects itself against bad data.
This must be part of an automated regression test suite
(re-run constantly) to prevent problems from creeping in later.
For example,
if your programs accept numbers, don&amp;#8217;t just test for
&amp;#8220;correct&amp;#8221; input; test for wrong cases like
too big, zero, negative or too small, and non-numbers.
Testing &amp;#8220;just around&amp;#8221; too big and too small numbers
is often helpful, too, as is testing that tries to bypass the interface.
Your users won&amp;#8217;t know how you did it, but they&amp;#8217;ll know your
program &amp;#8220;just works&amp;#8221; reliably.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Shellshock</title>
    <link>http://www.dwheeler.com/blog/2014/10/05#shellshock</link>
    <pubDate>Sun, 05 Oct 2014 18:30 GMT</pubDate>
    <!-- date: 2014-10-05 -->
    <description>
&lt;p&gt;
I have posted a new
&lt;a href=&quot;http://www.dwheeler.com/essays/shellshock.html&quot;&gt;paper about
Shellshock&lt;/a&gt;.
In particular, it includes a
&lt;a href=&quot;http://www.dwheeler.com/essays/shellshock.html#timeline&quot;&gt;detailed
timeline about shellshock&lt;/a&gt;, which counters a number of myths
and misunderstandings.
It also shows a
&lt;a href=&quot;http://www.dwheeler.com/essays/shellshock.html#detecting&quot;&gt;correct
way to detect if your system is vulnerable to shellshock&lt;/a&gt;
(many postings get it wrong and only detect part of the problem).
&lt;/p&gt;
&lt;p&gt;
I also briefly discuss
&lt;a href=&quot;http://www.dwheeler.com/essays/shellshock.html#detect-or-prevent&quot;&gt;how to detect or prevent future shellshock-like attacks&lt;/a&gt;.
At the moment this list is short, because these kinds of vulnerabilities
are known to be difficult to detect ahead of time.
Still, I think it is worth trying to do this.
My goal is to eventually end up with something similar to the
&lt;a href=&quot;http://www.dwheeler.com/essays/heartbleed.html&quot;&gt;list of countermeasures for Heartbleed-like attacks&lt;/a&gt; that I developed earlier.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>