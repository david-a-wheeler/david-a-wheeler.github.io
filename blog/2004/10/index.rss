<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Speaking October 27 at &amp;#8220;Open Source Enterprise Solutions Conference&amp;#8221; of the Tech Council of Maryland</title>
    <link>http://www.dwheeler.com/blog/2004/10/24#md-hi-tech</link>
    <pubDate>Sun, 24 Oct 2004 13:01 GMT</pubDate>
    <!-- date: 2004-10-24 -->
    <description>
On October 27 I&amp;#8217;ll be speaking at the
&lt;a href=&quot;http://www.mdhitech.org/Calendar/html/412.html&quot;&gt;
Open Source Enterprise Solutions Conference&lt;/a&gt;
in Rockville, Maryland.
This event is put on by the
&lt;a href=&quot;http://www.mdhitech.org/&quot;&gt;Tech Council of Maryland&lt;/a&gt;.
My topic is security and open source software; those who&amp;#8217;ve
&lt;a href=&quot;http://www.dwheeler.com/secure-programs&quot;&gt;read my books and
articles&lt;/a&gt; won&amp;#8217;t be terribly surprised by the content.
I debunk extreme views like &amp;#8220;open source is always more secure&amp;#8221; and
&amp;#8220;open source is never more secure,&amp;#8221; for example.
&lt;p&gt;
One surprising thing is how many open source software / Free Software
(OSS/FS) security-related companies and projects
are based in Maryland.
There are quite a number!
They include:
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sourcefire.com/&quot;&gt;Sourcefire&lt;/a&gt;,
lead developer of the
&lt;a href=&quot;http://www.sourcefire.com/snort/snortorg.html&quot;&gt;
most popular network intrusion detection system (IDS)&lt;/a&gt;,
&lt;a href=&quot;http://www.snort.org/&quot;&gt;Snort&lt;/a&gt;.
Snort&amp;#8217;s so popular that many other IDS systems accept its data format.
&lt;li&gt;
&lt;a href=&quot;http://www.bastille-linux.org/&quot;&gt;Bastille Linux&lt;/a&gt;,
an excellent Linux operating system hardening project.
&lt;li&gt;
&lt;a href=&quot;http://www.owasp.org/&quot;&gt;Open Web Application
Security Project (OWASP)&lt;/a&gt;,
&lt;a href=&quot;http://www.owasp.org/about/contact.html&quot;&gt;headquartered in
Columbia, Maryland&lt;/a&gt; and sponsored by folks such as
&lt;a href=&quot;http://www.aspectsecurity.com/&quot;&gt;Aspect Security&lt;/a&gt;.
OWASP publishes a very popular top ten, but they also have tools and
other projects.
&lt;li&gt;
The
&lt;a href=&quot;http://ferret.crhc.uiuc.edu/&quot;&gt;Ferret Security Auditing Toolset&lt;/a&gt;
is a project from the University of Maryland.
&lt;li&gt;
&lt;a href=&quot;http://www.nsa.gov/selinux/&quot;&gt;
Security-Enhanced Linux (SELinux)&lt;/a&gt;, a research project that
added significant new access control capabilities to GNU/Linux
operating systems.
SELinux is now included in several Linux distributions.
&lt;li&gt;
There are many other consulting companies.
I did a quick search of the
&lt;a href=&quot;http://openbsdpl.sourceforge.net/www/support.html&quot;&gt;
companies providing OpenBSD support&lt;/a&gt;, and they included
&lt;a href=&quot;http://www.CodefusionIS.com&quot;&gt;
Codefusion Internet Services&lt;/a&gt; of
Cumberland, Maryland,
who provide Unix-based consulting services to
small businesses and organizations, particularly
with *BSD Unix (OpenBSD, FreeBSD) and Linux systems.
&lt;/ul&gt;
My point is that there&amp;#8217;s a &lt;i&gt;lot&lt;/i&gt; going on in Maryland
that combines security with open source software, which is very interesting.
</description>
   </item>
  <item>
    <title>Supreme Court Could Make Washington, DC Part of Maryland for Congressional Elections</title>
    <link>http://www.dwheeler.com/blog/2004/10/22#dc-in-md-court</link>
    <pubDate>Fri, 22 Oct 2004 23:35 GMT</pubDate>
    <!-- date: 2004-10-22 -->
    <description>
As I&amp;#8217;ve noted before,
due to strange quirks of history, residents of the U.S. capital &amp;#8212;
Washington, DC &amp;#8212; cannot vote in U.S. Congressional elections.
I&amp;#8217;m a big believer in democracy, and this is a quirk that needs fixing.
I earlier wrote
&lt;a href=&quot;http://www.dwheeler.com/essays/dc-in-maryland.html&quot;&gt;Treat Washington, DC as Part of Maryland for Congressional Elections&lt;/a&gt;.
to describe what I think is a solution that deserves more consideration.
I&amp;#8217;ve now added to that essay an important way that result could
be obtained: the courts.
This situation wasn&amp;#8217;t established by the U.S. Constitution
(as commonly thought), but by a later 1801 law;
before that time, residents of the current DC land voted as Marylandians.
So, DC residents could bring a suit to the courts, claiming that
the disenfranchisement is unconstitutional.
If the U.S. Supreme Court agrees, then voila &amp;#8212; DC residents can
suddenly vote in Congressional elections, as they did before 1801.
&lt;p&gt;
&lt;a href=&quot;http://www.dwheeler.com/essays/dc-in-maryland.html&quot;&gt;
See my essay for more details&lt;/a&gt;.
</description>
   </item>
  <item>
    <title>New essay: &amp;#8220;Linux Kernel 2.6: It&amp;#8217;s Worth More!&amp;#8221;</title>
    <link>http://www.dwheeler.com/blog/2004/10/12#kernel-cost</link>
    <pubDate>Tue, 12 Oct 2004 22:55 GMT</pubDate>
    <!-- date: 2004-10-12 -->
    <description>
&lt;p&gt;
In response to a posting by Jeff V. Merkey,
Ingo Molnar used my tool
&lt;a href=&quot;http://www.dwheeler.com/sloccount&quot;&gt;SLOCCount&lt;/a&gt; to
estimate the effort it would take to redevelop Linux kernel version 2.6.
Molnar&amp;#8217;s rough estimate found it would cost $176M (US) to
redevelop the Linux kernel using traditional proprietary approaches.
I thought it was an interesting way to respond, but I knew that the
defaults in SLOCCount are probably not the best for the Linux kernel itself.
After all, an operating system kernel is much more complicated and difficult
to implement than most programs, and although there are ways to account for
that, SLOCCount by default doesn&amp;#8217;t do so.
By using a more detailed cost model and much more information about the
Linux kernel, I created another effort estimate that refines Molnar&amp;#8217;s work.
Bottom line: I believe the current Linux kernel 2.6 would take
closer to $612M (US) to redevelop.
&lt;/p&gt;
&lt;p&gt;
For more information, including some comments on what it all means, see
my essay
&lt;a href=&quot;http://www.dwheeler.com/essays/linux-kernel-cost.html&quot;&gt;&lt;i&gt;Linux Kernel 2.6: It&amp;#8217;s Worth More!&lt;/i&gt;&lt;/a&gt;
Feel free to also look at my related paper
&lt;a href=&quot;http://www.dwheeler.com/sloccount&quot;&gt;&lt;i&gt;More than a Gigabuck:
Estimating GNU/Linux&amp;#8217;s Size&lt;/i&gt;&lt;/a&gt;.
</description>
   </item>
  <item>
    <title>New Security Article on Race Conditions</title>
    <link>http://www.dwheeler.com/blog/2004/10/08#race-conditions</link>
    <pubDate>Fri, 08 Oct 2004 01:07 GMT</pubDate>
    <!-- date: 2004-10-08 -->
    <description>
Well, I&amp;#8217;m happy to announce that another one
of my developerworks article on secure development is
now out for the public.
Go take a look at
&lt;a href=&quot;http://www-128.ibm.com/developerworks/library-combined/l-sprace.html&quot;&gt;
Secure programmer: Preventing Race Conditions&lt;/a&gt;.
&lt;p&gt;
This was a trickier article to write, because race conditions are
harder to describe in a simple way.
No matter what, they always involve subtle timing interactions, and
that makes them hard to describe.
Even the conventional definitions are too complicated and don&amp;#8217;t really
help explain the issue.
So, I ended up writing my own definition:
A &amp;#8220;race condition&amp;#8221; occurs when a program doesn&amp;#8217;t work as it&amp;#8217;s supposed to
because of an unexpected ordering of events that produces contention over the
same resource. Notice that a race condition doesn&amp;#8217;t need to involve contention
between two parts of the same program; many security problems occur if an
outside attacker can interfere with a program in unexpected ways. 
&lt;p&gt;
And from there, it shows some of those big surprises.
A whole bunch of race conditions have been found over the last few
months, so this is certainly still a serious problem.
</description>
   </item>
  <item>
    <title>End of September 2004 release of &amp;#8220;Why OSS/FS? Look at the Numbers!&amp;#8221;</title>
    <link>http://www.dwheeler.com/blog/2004/10/08#oss-why-20040930</link>
    <pubDate>Fri, 08 Oct 2004 01:05 GMT</pubDate>
    <!-- date: 2004-10-08 -->
    <description>
I&amp;#8217;ve made another release of my paper
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;&amp;#8220;Why Open Source Software /
Free Software (OSS/FS)? Look at the Numbers!&amp;#8221;&lt;/a&gt;
Here are some highlights:
&lt;ol&gt;
&lt;li&gt;
Possibly most important long-term, I added a lot of
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html#definitions&quot;&gt;material
to appendix A to help people identify what is really OSS/FS&lt;/a&gt;.
In particular, I added information about Debian&amp;#8217;s tests, which are
thought experiments they use to examine licenses.
These are the &amp;#8220;desert island&amp;#8221;, &amp;#8220;dissident&amp;#8221;, and &amp;#8220;tentacles of evil&amp;#8221; tests.
I added this information after reading
&lt;a href=&quot;http://www.imc.org/ietf-mxcomp/mail-archive/msg03514.html&quot;&gt;
Mark Shewmaker&amp;#8217;s August 2004 examination of the
Microsoft Royalty Free Sender ID Patent License&lt;/a&gt;.
That analysis proved to me that a non-lawyer can carefully
analyze and rationally argue about licensing and legal issues,
especially when they&amp;#8217;re given tools like these thought experiments
to help them.
&lt;li&gt;
I added a reference to the article
&amp;#8220;Open Source Software Development Should Strive for Even Greater
Code Maintainability&amp;#8221; by
Ioannis Samoladas, Ioannis Stamelos, Lefteris Angelis,
and Apostolos Oikonomou.
It&amp;#8217;s published by the
highly-respected &amp;#8220;Communications of the ACM&amp;#8221; (CACM) in
October 2004 (pp. 83-87).
They studied almost 6 million lines of code, tracking several programs
over time, using the maintainability index
(chosen by the Software Engineering Institute as the most suitable tool
for measuring the maintainability of systems).
Using their measurements,
they concluded that
OSS/FS &amp;#8220;code quality appears to be at least equal and sometimes better
than the quality of [closed source software] code implementing
the same functionality.&amp;#8221;
They conjectured that this
&amp;#8220;may be due to the motivation of skilled OSS programmers&amp;#8230;&amp;#8221;

&lt;li&gt;
Added more information about security evaluations performed
or being performed for OSS/FS, esp. Common Criteria and FIPS 140,
in the security section.  Novell SuSE, Red Hat, MandrakeSoft,
Trusted Computer Solutions&amp;#8217; Secure Linux, and OpenSSL
(2 different projects!).
These are really important to some organizations.
Although there&amp;#8217;s a lot of information about this,
there doesn&amp;#8217;t seem to be any one place with it pulled together.
Well, now there is.
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html#security-evaluations&quot;&gt;See
my paper for more about formal security evaluations of OSS/FS products.&lt;/a&gt;

&lt;li&gt;
Added a reference to CSC&amp;#8217;s new report
&lt;a href=&quot;http://www.csc.com/features/2004/uploads/LEF_OPENSOURCE.pdf&quot;&gt;
&amp;#8220;Open Source: Open for Business&amp;#8221;&lt;/a&gt;.
In particular, they discuss some TCO issues which I added to
the TCO section.

&lt;/ol&gt;
</description>
   </item>
  </channel>
</rss>