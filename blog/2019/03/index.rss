<?xml version="1.0" encoding="UTF-8"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <link>https://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Assurance cases</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <link>https://www.dwheeler.com/blog/2019/03/26#assurance-case</link>
    <pubDate>Tue, 26 Mar 2019 11:24 GMT</pubDate>
    <!-- date: 2019-03-26 -->
    <description>
&lt;p&gt;
No one thing creates secure software, so you
need to do a set of things to make adequately secure software.
But no one has infinite resources; how can you have confidence
that you are doing the right set?
Many experts (including me) have recommended creating an
&lt;i&gt;assurance case&lt;/i&gt; to connect the various approaches together
to an efficient, cohesive whole.
It can be hard to start an assurance case, though, because
there are few public examples.
&lt;/p&gt;

&lt;p&gt;
So I am pleased to report that you can now freely get my paper
&lt;a href=&quot;https://www.ida.org/idamedia/Corporate/Files/Publications/IDA_Documents/ITSD/2019/P-9278.pdf&quot;&gt;&lt;i&gt;A Sample Security Assurance Case Pattern&lt;/i&gt; by David A. Wheeler, December 2018&lt;/a&gt;.
This paper discusses how to create secure software by applying an
assurance case, and uses the
&lt;a href=&quot;https://github.com/coreinfrastructure/best-practices-badge/blob/master/doc/security.md&quot;&gt;Badge Application&amp;#8217;s assurance case&lt;/a&gt; as
an example.
If you are trying to create a secure application, I hope you
will find it useful.
&lt;/p&gt;
</description>
   </item>
  <item>
    <title>Don’t Use ISO/IEC 14977 Extended Backus-Naur Form (EBNF)</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
    <link>https://www.dwheeler.com/blog/2019/03/02#dont-use-iso-14977-ebnf</link>
    <pubDate>Sat, 02 Mar 2019 15:48 GMT</pubDate>
    <!-- date: 2019-03-02 -->
    <description>
&lt;p&gt;
Sometimes people want to do something, find a standard, and do
not realize the downsides of using that standard.
I have an essay in that genre titled
&lt;a href=&quot;/essays/dont-use-iso-14977-ebnf.html&quot;
&gt;Don’t Use ISO/IEC 14977 Extended Backus-Naur Form (EBNF)&lt;/a&gt;.
The problem is that although there is a ISO/IEC 14977:1996 specification,
in most cases you should not use it.
If you have to write a specification for a programming language
or complex data structure, please take a look at why I think that!
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>