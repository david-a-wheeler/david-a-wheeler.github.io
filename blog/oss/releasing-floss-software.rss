<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Releasing FLOSS Software</title>
    <link>http://www.dwheeler.com/blog/2009/04/13#releasing-floss-software</link>
    <pubDate>Mon, 13 Apr 2009 17:44 GMT</pubDate>
    <!-- date: 2009-04-13 -->
    <description>
&lt;p&gt;
If you&amp;#8217;ve written (or started to write) some
Free/Libre/Open Source Software (FLOSS), &lt;i&gt;please&lt;/i&gt; follow
the time-tested community standards for releasing FLOSS software
when you want people to be able to install it from source code.
Unfortunately,
a lot of people don&amp;#8217;t seem to be aware of what these conventions are.
This really hit me in my recent
&lt;a href=&quot;http://www.openproofs.org&quot;&gt;OpenProofs&lt;/a&gt; work;
we&amp;#8217;re trying to make it
easy to install programs by pre-packaging them, and we&amp;#8217;ve found that some
programs are a &lt;i&gt;nightmare&lt;/i&gt; to package or install
because their developers did not follow the standard conventions.
&lt;/p&gt;

&lt;p&gt;
So I&amp;#8217;ve released a brief article:
&lt;a href=&quot;http://www.dwheeler.com/essays/releasing-floss-software.html&quot;&gt;
&lt;b&gt;&lt;i&gt;Releasing Free/Libre/Open Source Software (FLOSS) for Source Installation&lt;/i&gt;&lt;/b&gt;&lt;/a&gt;, to help people learn about them.
For the details, I point to the
&lt;a href=&quot;http://www.gnu.org/prep/standards/&quot;&gt;&lt;i&gt;GNU Coding Standards&lt;/i&gt;&lt;/a&gt;
(especially the
&lt;a href=&quot;http://www.gnu.org/prep/standards/html_node/Managing-Releases.html&quot;&gt;
release process&lt;/a&gt; chapter) and the
&lt;a href=&quot;http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/&quot;&gt;&lt;i&gt;Software Release Practice HOWTO&lt;/i&gt;&lt;/a&gt;.
I also point out some of the most important conventions that will
make building and installing your software &lt;i&gt;much&lt;/i&gt; easier for
your users:
&lt;ol&gt;
&lt;li&gt;Pick a good, simple, Google-able name.&lt;/li&gt;
&lt;li&gt;Identify the version (using simple version numbers or ISO dates),
and include that in the release filename as NAME-VERSION.FORMAT.&lt;/li&gt;
&lt;li&gt;Use a standard, widely-used, GPL-compatible FLOSS license &amp;mdash; and say so.&lt;/li&gt;
&lt;li&gt;Follow good distribution-making practice, in particular,
make sure tarballs always unpack into a single new directory named NAME-VERSION.&lt;/li&gt;
&lt;li&gt;Use the standard invocation to configure, build, and install it:
&lt;tt&gt;./configure; make; make install&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;Support the standard &lt;tt&gt;./configure&lt;/tt&gt; options like &amp;#8212;prefix,
&amp;#8212;exec-prefix, &amp;#8212;bindir, &amp;#8212;libdir, and so on.&lt;/li&gt;
&lt;li&gt;Create a makefile that can rebuild everything and
uses makefile variables (including applicable
standard makefile variable names and targets).&lt;/li&gt;
&lt;li&gt;Have &amp;#8220;make install&amp;#8221; support DESTDIR.&lt;/li&gt;
&lt;li&gt;Document the external tools/libraries needed for building and running,
and make it easy to separate/reuse them.&lt;/li&gt;
&lt;li&gt;If you patch an external library/tool, get the patch upstream.&lt;/li&gt;
&lt;li&gt;Use standard user interfaces.
For command line tools, use &amp;#8220;-&amp;#8221; single-letter options, &amp;#8220;&amp;#8212;&amp;#8221; long-name
options, and &amp;#8220;&amp;#8212;&amp;#8221; by itself to signal &amp;#8220;no more options&amp;#8221;.
For GUI tools, provide a .desktop file.&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;

&lt;p&gt;
To learn more, see the whole article:
&lt;a href=&quot;http://www.dwheeler.com/essays/releasing-floss-software.html&quot;&gt;&lt;b&gt;&lt;i&gt;Releasing Free/Libre/Open Source Software (FLOSS) for Source Installation&lt;/i&gt;&lt;/b&gt;&lt;/a&gt;.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>