<?xml version="1.0"?>
<!-- name="generator" content="blosxom/2.0" -->

<rss version="2.0">
  <channel>
    <title>David A. Wheeler's Blog   </title>
    <link>http://www.dwheeler.com/blog</link>
    <description>David A. Wheeler's weblog.</description>
    <language>en</language>

  <item>
    <title>Learning from the Masters</title>
    <link>http://www.dwheeler.com/blog/2006/06/17#learning-masters</link>
    <pubDate>Sat, 17 Jun 2006 08:53 GMT</pubDate>
    <!-- date: 2006-06-17 -->
    <description>
&lt;p&gt;
If you want to learn something, study what the masters do.
To me that seems obvious, and yet many don&amp;#8217;t do it.
Perhaps we simply forget.
So let me inspire you with a few examples&amp;#8230;
&lt;/p&gt;
&lt;p&gt;
I just got an advance copy of David Shenk&amp;#8217;s
&amp;#8220;The Immortal Game: A history of chess&amp;#8221; - and I&amp;#8217;m referenced in it!
Which is an odd thing; I don&amp;#8217;t normally think of myself
as a chess commentator.
But I do like the game of chess, and one of my key approaches to
getting better is simple: Study the games of good players.
I&amp;#8217;ve even posted a few of the games with my comments on my web site,
including The Game of the Century
(&lt;a href=&quot;http://www.dwheeler.com/misc/game_of_the_century.pgn&quot;&gt;PGN&lt;/a&gt;/&lt;a href=&quot;http://www.dwheeler.com/misc/game_of_the_century.txt&quot;&gt;Text&lt;/a&gt;),
The Immortal Game (&lt;a href=&quot;http://www.dwheeler.com/misc/immortal.pgn&quot;&gt;PGN&lt;/a&gt;/&lt;a href=&quot;http://www.dwheeler.com/misc/immortal.txt&quot;&gt;Text&lt;/a&gt;),
The Evergreen Game (&lt;a href=&quot;http://www.dwheeler.com/misc/evergreen.pgn&quot;&gt;PGN&lt;/a&gt;/&lt;a href=&quot;http://www.dwheeler.com/misc/evergreen.txt&quot;&gt;Text&lt;/a&gt;),
and
Deep Blue - Kasparov, 1996, Game 1 (&lt;a href=&quot;http://www.dwheeler.com/misc/deepblue-kasparov.pgn&quot;&gt;PGN&lt;/a&gt;/&lt;a href=&quot;http://www.dwheeler.com/misc/deepblue-kasparov.txt&quot;&gt;Text&lt;/a&gt;).
It&amp;#8217;s my Byrne/Fischer writeup that was referenced in Shenk&amp;#8217;s book.
But I didn&amp;#8217;t create that stuff for a book, originally.
I can&amp;#8217;t play like these great players can,
but I get better by studying what they do.
In short, I&amp;#8217;ve found that I must study the work of the masters.
&lt;/p&gt;
&lt;p&gt;
There are many children&amp;#8217;s educational philosophies that have, at least in part,
the notion of studying good examples as part of education.
Ruth Beechick&amp;#8217;s &amp;#8220;natural method&amp;#8221; for teaching writing emphasizes starting
by copying and studying examples of great writing. She even notes
Jack London and Benjamin Franklin started by studying works they admired.
Learning begins by studying the work of the masters.
&lt;/p&gt;
&lt;p&gt;
I often write about
&lt;a href=&quot;http://www.dwheeler.com/oss_fs_why.html&quot;&gt;
free-libre/open source software (FLOSS)&lt;/a&gt;.
In part, I do because it&amp;#8217;s one amazingly interesting development.
But there are other reasons, too.
Some developers of FLOSS programs are the best in the business -
you can learn a lot by seeing what they do.
In short, one important advantage of FLOSS is that it is now possible for
software developers to study the work of the masters.
&lt;/p&gt;
&lt;p&gt;
I recently wrote the article
&lt;a href=&quot;http://www.dwheeler.com/essays/high-assurance-floss.html&quot;&gt;
High Assurance (for Security or Safety) and Free-Libre / Open Source Software (FLOSS)&amp;#8230; with Lots on Formal Methods (aka high confidence or high integrity)&lt;/a&gt;
(I gave it the long title to help people find it).
Here, I note the many tools to &lt;i&gt;create&lt;/i&gt; high assurance software -
but there are precious few FLOSS examples of high assurance software.
True, there are very few examples of high assurance software, period,
but where are the high assurance software components that people can study
and modify without legal encumberances?
(If you know of more,
&lt;a href=&quot;http://www.dwheeler.com/contactme.html&quot;&gt;contact me&lt;/a&gt;.)
That worries me; how are we supposed to educate people how to create
high assurance software, if students never see it?
People do not wake up one morning and discover that they are an expert.
They must learn, and books about a topic are not enough.
They must study the work of the masters.
&lt;/p&gt;
</description>
   </item>
  </channel>
</rss>