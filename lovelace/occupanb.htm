<HTML>
<HEAD>
<TITLE>Package body Occupants</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com"></HEAD>
<BODY>
<B>Package body Occupants</B><P><HR><P>
<PRE>
<I>--</I>
<I>-- Copyright (C) 1996 Ada Resource Association (ARA), Columbus, Ohio.</I>
<I>-- Author: David A. Wheeler</I>
<I>--</I>

<B>with</B> Text_IO, Ada.Strings.Unbounded, <A HREF="ustrings.htm#9:9">Ustrings</A>, <A HREF="roomss.htm#9:9">Rooms</A>;
<B>use</B>  Text_IO, Ada.Strings.Unbounded, <A HREF="ustrings.htm#9:9">Ustrings</A>, <A HREF="roomss.htm#9:9">Rooms</A>;

<B>package</B> <B>body</B> <A NAME="9:14"></A>Occupants <B>is</B>


 <B>procedure</B> <A NAME="name-12"></A><A NAME="12:12"></A>Put_View(T : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>; Agent : <B>access</B> <A HREF="thingss.htm#15:7">Thing</A>'Class) <B>is</B>
 <B>begin</B>
  Put("You are inside ");
  Put_Line(Short_Description(T));
  Put_Line(".");
  Put_Contents(T, Agent, "You see:");
 <B>end</B> Put_View;

 <B>procedure</B> <A NAME="name-11"></A><A NAME="20:12"></A>Look(T : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>) <B>is</B>
 <I>-- T is running a "look" command; tell T what he views.</I>
 <B>begin</B>
  <B>if</B> Container(T) = <B>null</B> <B>then</B>
    Put("You are inside nothing at all.");
  <B>else</B>
    <A HREF="thingss.htm#22:12">Put_View</A>(Container(T), T);
  <B>end</B> <B>if</B>;
 <B>end</B> Look;


 <B>procedure</B> <A NAME="name-8"></A><A NAME="31:12"></A>Get(Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>; Direct_Object : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>'Class)
 <B>is</B>
 <B>begin</B>
   <B>if</B> <A HREF="occupans.htm#38:11">May_I_Get</A>(Direct_Object, Agent) <B>then</B>
     Place(T =&gt; Direct_Object, Into =&gt; <A HREF="thingss.htm#16:7">Thing_Access</A>(Agent));
   <B>end</B> <B>if</B>;
 <B>end</B> Get;
 
 <B>function</B> <A NAME="name-6"></A><A NAME="39:11"></A>May_I_Get(Direct_Object : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>;
                    Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>'Class)
          <B>return</B> Boolean <B>is</B>
 <B>begin</B>
   Sorry("get", Name(Direct_Object));  <I>-- Tell the getter sorry, can't get it</I>
   <B>return</B> False;
 <B>end</B> May_I_Get;
 
 <B>procedure</B> <A NAME="name-7"></A><A NAME="47:12"></A>Drop(Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>;
                Direct_Object : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>'Class) <B>is</B>
 <B>begin</B>
   <B>if</B> <A HREF="occupans.htm#45:12">May_I_Drop</A>(Direct_Object, Agent) <B>then</B>
     Place(T =&gt; Direct_Object, Into =&gt; Container(Agent));
   <B>end</B> <B>if</B>;
 <B>end</B> Drop;

 <B>function</B>  <A NAME="name-5"></A><A NAME="55:12"></A>May_I_Drop(Direct_Object : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>;
                      Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>'Class)
           <B>return</B> Boolean <B>is</B>
 <B>begin</B>
   <B>return</B> True;
 <B>end</B> May_I_Drop;
 

 <B>procedure</B> <A NAME="name-10"></A><A NAME="63:12"></A>Inventory(Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>) <B>is</B>
 <B>begin</B>
  Put_Contents(Agent, Agent,
               "You're carrying:",
               "You aren't carrying anything.");
 <B>end</B> Inventory;

 <B>procedure</B> <A NAME="name-9"></A><A NAME="70:12"></A>Go(Agent : <B>access</B> <A HREF="occupans.htm#13:7">Occupant</A>; Dir : <B>in</B> <A HREF="directis.htm#11:7">Direction</A>) <B>is</B>
 <B>begin</B>
  <B>if</B> Container(Agent) = <B>null</B> <B>then</B>
    Put_Line("Sorry, you're not in a room!");
  <B>else</B>
    <B>declare</B>
      <A NAME="76:7"></A>Destination : <A HREF="thingss.htm#16:7">Thing_Access</A> := <A HREF="thingss.htm#25:11">What_Is</A>(Container(Agent), Dir);
    <B>begin</B>
     <B>if</B> Destination = <B>null</B> <B>then</B>
       Put_Line("Sorry, you can't go that way.");
     <B>else</B>
       Place(Agent, Destination);
     <B>end</B> <B>if</B>;
    <B>end</B>;
  <B>end</B> <B>if</B>;
 <B>end</B> Go;
 
<B>end</B> Occupants;

<I>--</I>
<I>-- Permission to use, copy, modify, and distribute this software and its</I>
<I>-- documentation for any purpose and without fee is hereby granted,</I>
<I>-- provided that the above copyright and authorship notice appear in all</I>
<I>-- copies and that both that copyright notice and this permission notice</I>
<I>-- appear in supporting documentation.</I>
<I>-- </I>
<I>-- The ARA makes no representations about the suitability of this software</I>
<I>-- for any purpose.  It is provided "as is" without express</I>
<I>-- or implied warranty.</I>
<I>-- </I>

</PRE>

<P><HR><P>
You may also see <A HREF="occupans.htm">the corresponding specification</A>.
<P>
You may also see the <A HREF="pkglist.htm">list of program units</A>.
<P>
The following compilation units are referred to ("with"'ed) by Package body Occupants:
<UL>
<LI><A HREF="ustrings.htm">Package spec Ustrings</A>
<LI><A HREF="roomss.htm">Package spec Rooms</A>
</UL>
You may return to the <A HREF="small.htm">Program Small Home Page</A>.
<P>
<!-- Do NOT delete my name or the tool name from below; -->
<!-- giving me credit is a condition for use of ada2html -->
<I>This hypertext format was generated by <A HREF="http://www.adahome.com/Ada/Tutorials/Lovelace/dwheeler.htm">David A. Wheeler</A>'s <A HREF="http://www.adahome.com/Ada/Resources/Tools/ada2html/ada2html.htm">ada2html</A></I>
</BODY>
</HTML>

