<HTML><HEAD>
<TITLE>Ada95 Lovelace Tutorial Section 17.6 - Other Ada Capabilities</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1><FONT COLOR="#996600">Section 17.6 - Other Ada Capabilities</FONT></H1>
Here are some other Ada capabilities that we haven't covered so far
but which you may be interested in:
<P>
<OL>
<LI>Ada 95 also provides a
<A HREF="http://www.adahome.com/rm95/rm9x-03-05-04.html">"modular"
type</A>, which is an integer that varies
from zero up to some integer <EM>modulus-1</EM>.
Unlike a normal integer, if you add or subtract a value and the result
doesn't fit, the result <EM>wraps around</EM>.
For example, a modulus 4 value can have the values 0, 1, 2, and 3.
If you added one to 3, you'd get 0 (due to wrapping around).
Modular types don't need to be powers of two, but if they are the
Ada compiler will select especially efficient operations to implement them.
Bit manipulation operations, such as <EM>and</EM> and <EM>or</EM> can
be used on modular types.
<LI>Ada provides a
<A HREF="http://www.adahome.com/rm95/rm9x-03-05-09.html">"fixed
point" type</A>; these are basically integers that
the Ada compiler will automatically scale so that they can be used
as though they were floating point numbers.
This combines the exactness and speed of integers
(which on many machines are faster than Floats)
with the convenience of floating point numbers.
<LI>Ada 95 has a number of predefined mathematical operations, including
<A HREF="http://www.adahome.com/rm95/rm9x-A-05-02.html">a
random number generator</A>,
<A HREF="http://www.adahome.com/rm95/rm9x-A-05-01.html">trigonometric
and logarithmic operations</A>, and
<A HREF="http://www.adahome.com/rm95/rm9x-G-01.html">complex
numbers</A>.
<LI>Ada 95 has a number of predefined
<A HREF="http://www.adahome.com/rm95/rm9x-A-03-02.html">Character
handling</A> subprograms (to upper case, to lower case, etc) and
<A HREF="http://www.adahome.com/rm95/rm9x-A-04-02.html">string
mapping</A> subprograms (to create sets of characters for translation
and word edge detection).
<LI>Normally Ada only permits access values to reference information allocated
by the <EM>new</EM> operator.
As discussed in lesson 12, you can create a <EM>general access</EM> types
that can access any value of the given type.
Such a type can access anything of that value, as long as it is marked
as <EM>aliased</EM>.
You can even alias local variables, which in many cases is dangerous.
Ada includes a set of <EM>accessibility rules</EM> that protect against
dangerous uses, which can be overridden if necessary.
This is explained with some examples in the
<A HREF="http://www.adahome.com/LRM/95/Rationale/rat95html/rat95-p1-2.html#6">Ada
Rationale, part I, section II.6</A>.
<LI>Ada 95 compilers that support the information systems annex (annex F)
also support
<A HREF="http://www.adahome.com/rm95/rm9x-F-01.html">packed
decimal types</A>, a type needed for many business
programming problems.
</OL>

<!-- No quiz question -->
<P>
<HR>
<P>
There is no quiz question for this section.
<P>
<IMG SRC="pright.gif" ALT="" HEIGHT="14" WIDTH="33">
<A HREF="s18s1.htm">
<FONT SIZE="+1"><STRONG>You may go to the next section.</STRONG></FONT></A>
<P>
<HR>
You may also:
<P>

<TABLE BORDER="0"><TR>
<TH><A HREF="s17s5.htm">
<IMG SRC="barrowl.gif" ALT="PREVIOUS " HEIGHT="31" WIDTH="31">
Go back to the previous section</A>
<P></TH>

<TH><A HREF="lesson17.htm">
<IMG SRC="barrowr.gif" ALT="OUTLINE  " HEIGHT="31" WIDTH="31">
Go up to the outline of lesson 17</A>
<P></TH>
</TR></TABLE>
<P>

<P>
<FONT SIZE="2">
<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
<P>
The master copy of this file is at
"<A HREF="http://www.adahome.com/Tutorials/Lovelace/s17sf.htm">http://www.adahome.com/Tutorials/Lovelace/s17sf.htm</A>".
</FONT>
<!-- This text is part of the Ada95 Lovelace tutorial program. -->
<!-- For the contents of lesson 18, the following applies: -->
<!--  Copyright (C) 1996 Ada Resource Association -->
<!--  Copyright granted to the ARA under the condition that this text -->
<!--  will be redistributed to the public domain, without restriction; -->
<!--  you may use this information in any way you with, commercially or not, -->
<!--  without restriction. -->
<!-- = -->
<!-- For all other files in Ada95 Lovelace tutorial, the following applies: -->
<!--  Copyright (C) 2002 David A. Wheeler -->
<!--  This program is free software; you can redistribute it and/or modify -->
<!--  it under the terms of the GNU General Public License as published by -->
<!--  the Free Software Foundation; either version 2 of the License, or -->
<!--  (at your option) any later version. -->
<!--  This freedom only applies to the electronic version; the author -->
<!--  and/or publisher retain all rights to non-electronic versions. -->
<!-- = -->
<!-- This program is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the -->
<!-- GNU General Public License for more details. -->
<!-- = -->
<!-- You should have received a copy of the GNU General Public License -->
<!-- along with this program; if not, write to the Free Software -->
<!-- Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. -->
</BODY>
</HTML>
