<HTML>
<HEAD>
<TITLE>Package body Ustrings</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com"></HEAD>
<BODY>
<B>Package body Ustrings</B><P><HR><P>
<PRE>
<I>--</I>
<I>-- Copyright (C) 1996 Ada Resource Association (ARA), Columbus, Ohio.</I>
<I>-- Author: David A. Wheeler</I>
<I>--</I>

<B>package</B> <B>body</B> <A NAME="6:14"></A>Ustrings <B>is</B>

  <A NAME="8:3"></A>Input_Line_Buffer_Length : <B>constant</B> := 1024;
    <I>-- If an input line is longer, Get_Line will recurse to read in the line.</I>


  <B>procedure</B> <A NAME="name-46"></A><A NAME="12:13"></A>Swap(Left, Right : <B>in</B> <B>out</B> Unbounded_String) <B>is</B>
    <I>-- Implement Swap.  This is the portable but slow approach.</I>
    <A NAME="14:5"></A>Temporary : Unbounded_String;
  <B>begin</B>
    Temporary := Left;
    Left := Right;
    Right := Temporary;
  <B>end</B> Swap;

  <B>function</B> <A NAME="name-38"></A><A NAME="21:12"></A>Empty(S : Unbounded_String) <B>return</B> Boolean <B>is</B>
   <I>-- returns True if Length(S)=0.</I>
  <B>begin</B>
   <B>return</B> (Length(S) = 0);
  <B>end</B> Empty;
 

  <I>-- Implement Unbounded_String I/O by calling Text_IO String routines.</I>


  <I>-- Get_Line gets a line of text, limited only by the maximum number of</I>
  <I>-- characters in an Unbounded_String.  It reads characters into a buffer</I>
  <I>-- and if that isn't enough, recurses to read the rest.</I>

  <B>procedure</B> <A NAME="name-40"></A><A NAME="35:13"></A>Get_Line (File : <B>in</B> File_Type; Item : <B>out</B> Unbounded_String) <B>is</B>

    <B>function</B> <A NAME="name-39"></A><A NAME="37:14"></A>More_Input <B>return</B> Unbounded_String <B>is</B>
       <A NAME="38:8"></A>Input : String (1 .. <A HREF="ustringb.htm#8:3">Input_Line_Buffer_Length</A>);
       <A NAME="39:8"></A>Last  : Natural;
    <B>begin</B>
       Get_Line (File, Input, Last);
       <B>if</B> Last &lt; Input'Last <B>then</B>
          <B>return</B>   To_Unbounded_String (Input(1..Last));
       <B>else</B>
          <B>return</B>   To_Unbounded_String (Input(1..Last)) &amp; More_Input;
       <B>end</B> <B>if</B>;
    <B>end</B> More_Input;

  <B>begin</B>
      Item := More_Input;
  <B>end</B> Get_Line;


  <B>procedure</B> <A NAME="name-41"></A><A NAME="54:13"></A>Get_Line(Item : <B>out</B> Unbounded_String) <B>is</B>
  <B>begin</B>
    Get_Line(Current_Input, Item);
  <B>end</B> Get_Line;

  <B>procedure</B> <A NAME="name-42"></A><A NAME="59:13"></A>Put(File : <B>in</B> File_Type; Item : <B>in</B> Unbounded_String) <B>is</B>
  <B>begin</B>
    Put(File, To_String(Item));
  <B>end</B> Put;

  <B>procedure</B> <A NAME="name-43"></A><A NAME="64:13"></A>Put(Item : <B>in</B> Unbounded_String) <B>is</B>
  <B>begin</B>
    Put(Current_Output, To_String(Item));
  <B>end</B> Put;

  <B>procedure</B> <A NAME="name-44"></A><A NAME="69:13"></A>Put_Line(File : <B>in</B> File_Type; Item : <B>in</B> Unbounded_String) <B>is</B>
  <B>begin</B>
    Put(File, Item);
    New_Line(File);
  <B>end</B> Put_Line;

  <B>procedure</B> <A NAME="name-45"></A><A NAME="75:13"></A>Put_Line(Item : <B>in</B> Unbounded_String) <B>is</B>
  <B>begin</B>
    Put(Current_Output, Item);
    New_Line;
  <B>end</B> Put_Line;

<B>end</B> Ustrings;

<I>--</I>
<I>-- Permission to use, copy, modify, and distribute this software and its</I>
<I>-- documentation for any purpose and without fee is hereby granted,</I>
<I>-- provided that the above copyright and authorship notice appear in all</I>
<I>-- copies and that both that copyright notice and this permission notice</I>
<I>-- appear in supporting documentation.</I>
<I>-- </I>
<I>-- The ARA makes no representations about the suitability of this software</I>
<I>-- for any purpose.  It is provided "as is" without express</I>
<I>-- or implied warranty.</I>
<I>-- </I>

</PRE>

<P><HR><P>
You may also see <A HREF="ustrings.htm">the corresponding specification</A>.
<P>
You may also see the <A HREF="pkglist.htm">list of program units</A>.
<P>
You may return to the <A HREF="small.htm">Program Small Home Page</A>.
<P>
<!-- Do NOT delete my name or the tool name from below; -->
<!-- giving me credit is a condition for use of ada2html -->
<I>This hypertext format was generated by <A HREF="http://www.adahome.com/Ada/Tutorials/Lovelace/dwheeler.htm">David A. Wheeler</A>'s <A HREF="http://www.adahome.com/Ada/Resources/Tools/ada2html/ada2html.htm">ada2html</A></I>
</BODY>
</HTML>

