
<HTML>
<HEAD>
<TITLE>Bibliography</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>

<BODY BGCOLOR="#FFFFFF">
<H1>Bibliography</H1>
<!-- $Id$ -->

<P>
Here are various Ada-related documents sorted by general topic, with
some additional commentary by me.
These documents, or at least the topics, are
referenced in the Lovelace tutorial.
<P>
<H2><A NAME="key_ada_documents">Key Ada Documents</A></H2>
<P>
The following are key Ada documents, and are simply referred to by
title in Lovelace.
<A HREF="http://www.adahome.com/Resources/References.html">All
of these reference documents are available electronically</A>.
<OL>
<LI>
Ada 95 <EM>Reference Manual (RM)</EM>.
<EM>The Ada RM is like a legal contract between a user of the Ada language
and an Ada compiler developer; it defines the rights and responsibilities
of each party.</EM>
<LI>
The <EM>Ada Rationale</EM> is a document that
explains why Ada is designed the way it is.
<LI>
<EM>Ada Quality and Style: Guidelines for Professional Programmers</EM>
(AQ&amp;S), developed by the Software Productivity Consortium (SPC).
<EM>This document
provides a set of specific guidelines to help developers produce better
Ada programs.
Basically it's the distilled experience of other Ada users;
most Ada developers use it.</EM>
(you can also access
<A HREF="http://sw-eng.falls-church.va.us/AdaIC/docs/style-guide/95style/html/cover.html">the AQ&amp;S through the AdaIC</A>).
<LI>
The <EM>Annotated Ada Reference Manual (AARM)</EM>
is an extended version of the RM.
The AARM is simply the RM with a large number of additional notes
in each section on the ramifications and implications of every part.
The AARM is used mostly by compiler vendors.
</OL>

<P>
<H2><A NAME="various_ada_documents">Various Ada Books and Papers</A></H2>
<P>
<OL>
<LI>
<A NAME="booch1987">[Booch 1987]</A>
Booch, Grady. 1987.
<EM>Software Components with Ada: Structures, Tools, and Subsystems.</EM>
Menlo Park, California: Benjamin/Cummings Publishing Company, Inc.
QA76.73.A35B65 1987.
ISBN 0-8053-0610-2.
<EM>A set of reusable software components in Ada 83 as well as discussions
on how to create reusable components.
Includes Stacks, Lists, Strings, Queues, Deques, Rings, Maps, Sets, Bags,
Trees, Graphs, utilities, sorts, and searches.</EM>

<LI>
<A NAME="booch1991">[Booch 1991]</A>
Booch, Grady. 1991.
<EM>Object Oriented Design With Applications.</EM>
Redwood City, California: Benjamin/Cummings Publishing Company, Inc.
ISBN 0-8053-0091-0.
<EM>A discussion of how to design programs using an
object-oriented approach</EM>.
<!-- There is a later edition but it only discusses C++, and thus -->
<!-- may not be as interesting to the non-C++ user -->

<LI>
<A NAME="elam1992">[Elam 1992]</A>
Elam and Lawlis.  March 1992.
``Ada Whips Assembly''.
<EM>Crosstalk</EM>.
<A HREF="http://www.stsc.hill.af.mil/">Software Technology Support Center</A>.
Hill Air Force Base, Utah: Defense Printing Service.
Originally printed in <EM>Tri-Ada '92</EM> as <EM>C Outperforms Assembler</EM>.
<EM>A documented case where an Ada compiler and a novice Ada programmer
did better than experienced assembly language programmers.</EM>
<A HREF="http://www.seas.gwu.edu/seas/eecs/Research/ada/lawlis.html">This
paper is available on-line</A>.

<LI>
<A NAME="hook1995">[Hook 1995]</A>
Hook, Audrey A. Bill Brykczynski, Catherine W. McDonald,
Sarah H. Nash, and Christine Youngblut.
January 1995.
<EM>A Survey of Computer Programming Languages Currently
Used in the Department of Defense</EM>.
Alexandria, VA: Institute for Defense Analyses.
IDA Paper P-3054.
<EM>This survey found that
in weapons systems modernization, Ada is the most commonly used language
in the U.S. Department of Defense.</EM>
This paper is available electronically through the
<A HREF="ftp://sw-eng.falls-church.va.us/public/AdaIC/docs/lang_survey/">Ada
Information Clearinghouse</A>.

<LI>
<A NAME="syiek1995">[Syiek 1995]</A>
Syiek, David. 1995.
"C vs. Ada: Arguing Performance Religion",
ACM <EM>Ada Letters</EM>, Nov/Dec 1995, pp. 67-69.
<EM>This paper demonstrates that Ada and C programs run at about
the same speed using compilers of approximately equal maturity,
with Ada having a slight performance edge because the
Ada compiler has more information to work with.</EM>

<LI>
<A NAME="taft1996">[Taft 1996]</A>
Taft, Tucker. 1996.
"Programming the Internet in Ada 95".
<I>Reliable Software Technologies - Ada-Europe '96</I>.
Lecture Notes in Computer Science Volume 1088.
Alfred Strohmeier, Volume Editor.
Proceedings of the 1996 Ada-Europe International Conference on
Reliable Software Technologies, Montreux, Switzerland, June 10-14, 1996.
Berlin, Germany: Springer-Verlag.
ISBN 3-540-61317-X.
pp. 1-16.
<A HREF="http://www.inmet.com/~stt/adajava_paper/">This
paper is available electronically</A>.
You might also see related information available at
<A HREF="http://www.inmet.com/java.html">Intermetric's section on
Ada and Java</A>.

<LI>
<A NAME="wheeler1992">[Wheeler 1992]</A>
Wheeler, David A. August 1992.
<EM>Analysis and Guidelines for Reusable Ada Software</EM>.
Alexandria, VA: Institute for Defense Analyses.
IDA Paper P-2765.
</OL>

<H2><A NAME="performance_improvement">Performance Improvement</A></H2>
<P>
The following are classics on developing efficient programs by
Jon Bentley:
<OL>
<LI>
<A NAME="bentley1982">[Bentley 1982]</A>
Bentley, Jon Louis.
1982.
<EM>Writing Efficient Programs.</EM>
Englewood Cliffs, New Jersey: Prentice-Hall, Inc.
ISBN 0-13-970251-2 or 0-13-970244-X.
<EM>This book presents Bentley's methodology and a set of rules for improving
program efficiency, and includes a large number of examples.</EM>

<LI>
<A NAME="bentley1986">[Bentley 1986]</A>
Bentley, Jon.
1986.
<EM>Programming Pearls.</EM>
Reading, Massachusetts: Addison-Wesley Publishing Company.
ISBN 0-201-10331-1.
<EM>These are selected essays from Bentley's column in the
Communications of the ACM. He discusses a wide variety of issues in
program improvement, include a large number on efficiency.</EM>
</OL>

<H2><A NAME="safety_overview">Software Safety Overview</A></H2>
<P>
The following are survey papers that give an overview of the
field of software safety. All are easy to read and discuss a wide
range of issues.
<P>
<OL>
<LI>
<A NAME="leveson1995">[Leveson 1995]</A>
Leveson, Nancy. 1995. <EM>Safeware.</EM>
Addison-Wesley Publishing Company.
ISBN 0-201-11972-2.
<EM>This is a book on software safety.
<A HREF="http://heg-school.aw.com/cseng/authors/leveson/safe/safe.html">An
outline of this book is available from Addison-Wesley.</A></EM>

<LI>
<A NAME="leveson1986">[Leveson 1986]</A>
Leveson, Nancy G. June 1986. "Software Safety: Why, What,
and How." <EM>Computing Surveys</EM>. Vol. 18, No. 2, pp. 125-163.
<EM>This is a survey paper by Nancy Leveson, and
has the more technical depth of than the two papers below.</EM>

<LI>
<A NAME="leveson1991a">[Leveson 1991a]</A>
Leveson, Nancy G. "Software Safety in Embedded Computer Systems."
<EM>Communications of the ACM.</EM> Vol. 34, No. 2, February 1991.
pp. 34-46.
<EM>This is a brief discussion of software safety
by one of the primary experts in the field, Nancy Leveson.</EM>

<LI>
<A NAME="place1993">[Place 1993]</A>
Place, P. and K. Kang. <EM>Safety-Critical Software: Status
Report and Annotated Bibliography.</EM> CMU/SEI-93-TR-5. Pittsburgh, PA:
Software Engineering Institute (SEI).
<A HREF="ftp://ftp.sei.cmu.edu/pub/documents/93.reports/ps/tr05.93.ps">[Place
1993] is freely available through the Internet.</A>
<EM>This SEI document 
briefly describes hazard identification, hazard analysis,
and development techniques, discusses a number of safety-related
standards, and has an annotated bibliography that is useful for
learning more about specific issues.</EM>
</OL>
<P>

<H2><A NAME="sfta">Software Fault Tree Analysis (FTA)</A></H2>
<OL>
<LI>
<A NAME="leveson1983">[Leveson 1983]</A>
Leveson, Nancy G. and Peter R. Harvey.
"Analyzing Software Safety."
<EM>IEEE Transactions on Software Engineering</EM>.
Vol SE-9, No. 5, September 1983, pp. 569- 579.
<EM>This paper provides a general discussion on
software FTA, and discusses its application to an existing
scientific-satellite control program.
The technique found a condition
in which the satellite could be accidentally destroyed.</EM>

<LI>
<A NAME="leveson1991b">[Leveson 1991b]</A>
Leveson, Nancy G., Stephen S. Cha, Timothy J. Shimeall.
"Safety Verification of Ada Programs Using Software Fault Trees."
<EM>IEEE Software</EM>. pp 48-59.
<EM>This paper shows specifically how to apply
software FTA to an Ada program, including a discussion of Ada specific
software constructs and a demonstration of its application to a simple
Ada program.</EM>
</OL>

<P>
<H2><A NAME="misc_safety">Miscellaneous Documents on Software Safety</A></H2>
<OL>
<LI>
<A NAME="dod882">[DoD 882]</A>
United States Department of Defense. 1984 (version B). System
Safety Program Requirements. MIL-STD-882.
<EM>Military standard MIL-STD-882 was developed by the US Department of
Defense (DoD) and requires that contractors establish and maintain a
formal system safety program.
This document is often referenced in U.S. DoD projects involving
safety-critical systems.
Version B is obsolete but
provides much more specific (and useful) advice than the later
versions.</EM>

<LI>
<A NAME="gowen1994">[Gowen 1994]</A>
Gowen, Lon D. and James S. Collofello. Assessing
Traditional Verification's Effectiveness on Safety-Critical Systems.
Journal of Systems and Software. Vol.  26, No. 2, August 1994. NY, NY:
Elsevier Science Inc.
<EM>This paper shows, through an experiment, why relying on testing
alone is insufficient for safety-critical systems.</EM>

<LI>
<A NAME="pyle1991">[Pyle 1991]</A>
Pyle, Ian C. 1991.
<EM>Developing Safety Systems: A Guide Using Ada.</EM>
Hemel Hempsted, England: Prentice Hall International (UL) Ltd.
ISBN 0-13-204298-3.
<EM>This book discusses issues related to developing safe systems
using Ada.
It omits keys approaches and is UK-centric, and I find it very wordy.
However, its chapter 8 does discuss a number
of Ada-specific issues that are worth considering.</EM>

<LI>
<A NAME="ul1994">[UL 1994]</A>
Underwriters Laboratory. January 4, 1994. Standard for
Safety-Related Software. UL 1998. ISBN 1-55989-550-0.
<EM>This is a software safety standard from the Underwriters
Laboratory (UL).
This standard is especially interesting because of the different
tack UL has taken.
Most software safety related standards concentrate on the software
development process, but the UL has
developed a software standard that is very product-oriented.
This is probably
worth examining at least to find some potential practical measures for
reducing software risks, even if your product does
not need to conform to this standard.</EM>
</OL>

<H2><A NAME="formal_methods">Formal Methods</A></H2>
<OL>
<LI>
<A NAME="gries1981">[Gries 1981]</A>
Gries, David.
<EM>The Science of Programming</EM>.
1981.
New York: Springer-Verlag, Incorporated.
ISBN 0-387-90641-X, 3-540-90641-X, 0-387-96480-0, 3-540-96480-0.
<EM>This is a basic introduction to specification and proof
of program correctness using basic predicate calculus and the
weakest precondition approach.</EM>

<LI>
<A NAME="diller1990">[Diller 1990]</A>
Diller, Antoni.
<EM>Z: An Introduction to Formal Methods</EM>.
New York: John Wiley and Sons, Incorporated.
ISBN 0-471-92489-X.

<LI>
<A NAME="liu1995">[Liu 1995]</A>
Liu, Shaoying, Victoria Stavridou, and Bruno Dutertre.
January 1995.
"The Practice of Formal Methods in Safety-Critical Systems".
<EM>Journal of Systems and Software</EM>.
New York: Elsevier Science Incorporated.
<EM>This paper describes several industrial-scale applications
of formal methods in safety-critical systems, and discusses
benefits, limitations, and problems in their application</EM>.
</OL>

<H2><A NAME="Inspections">Inspections</A></H2>
<OL>
<LI><A NAME="wheeler1996">[Wheeler 1996]</A>
Wheeler, David, Bill Brykczynski, Reg Meeson.
1996.
<EM>Software Inspection: An Industry Best Practice</EM>.
Los Alamitos, CA: IEEE Computer Society Press.
IEEE Order Number BP07340.
Library of Congress Number 95-41054.
ISBN 0-8186-7340-0.
<EM>This book describes the software inspection process
and includes a number of papers on the topic, including results from
many different users of the process</EM>.
<A HREF="http://www.computer.org/cspress/catalog/bp07340.htm">More
information about this book is available electronically</A>.

<LI><A NAME="fagan1986">[Fagan 1986]</A>
Fagan, Michael E.
July 1986.
"Advances in Software Inspections".
<EM>IEEE Transactions on Software Engineering</EM>, Vol. 12,
Number 7, July 1986, pp. 744-751.
Reprinted in <EM>Tutorial: Software Project Management</EM>,
Richard H. Thayer, 1990, pp. 416-423, IEEE Computer Society Press,
Los Alamitos, California.
</OL>

<H2><A NAME="Miscellaneous">Miscellaneous</A></H2>
<OL>
<LI>
<A NAME="goldberg1991">[Goldberg 1991]</A>
Goldberg, David.
March 1991.
"What Every Computer Scientist Should Know About Floating-Point Arithmetic".
<EM>ACM Computing Surveys</EM>.
Volume 23, Number 1.  pp 5-48.
New York: ACM Press.
<EM>This paper presents a tutorial on the aspects of floating point
arithmetic that have a direct impact on designers of computer systems,
and includes a discussion of the IEEE floating point standards.</EM>
<LI>
<A NAME="kernighan1978">[Kernighan 1978]</A>
Kernighan, Brian W. and P. J. Plauger.
1978.
<EM>The Elements of Programming Style.</EM>
New York: McGraw-Hill Book Company.
ISBN 0-07-034207.
<EM>An ancient book that still contains lots of useful general software
development principles.</EM>
</OL>

<!-- STOP FOR BOOK -->

<P><HR><P>
<H2><A HREF="lovelace.htm">
<IMG ALIGN=bottom SRC="tinyhome.gif" ALT="HOME     ">
You can return to the Lovelace home page.</A></H2>
<P>
<HR>
You can also:
<UL>
<LI>
<A HREF="legal.htm">See legal details about this tutorial.</A>
<LI>
<A HREF="lversion.htm">See Lovelace version information.</A>
<LI>
<A HREF="http://www.adahome.com/">See the Ada WWW Home Page</A>
</UL>

<!-- This homepage (C) David A. Wheeler 1995 -->
<!-- Redistributable under the terms of the FSF General Public License -->

<!-- This homepage and all related tutorial pages are -->
<!-- copyright of various developers; if not noted otherwise they are -->
<!-- copyright (C) David A. Wheeler 1995 -->
<!-- The pages of this tutorial are released for use under the terms of the -->
<!-- FSF General Public License (GPL), also called a "copyleft". -->

<!-- Feel free to include this tutorial as part of both commercial -->
<!-- and non-commercial products, and feel free to edit the text. -->
<!-- Where you HAVE modified the text, make sure -->
<!-- that you note who did so. -->
<!-- However, if you modify this tutorial, you must make the source of the -->
<!-- resulting text freely available for unlimited distribution without -->
<!-- royalties, per the GPL. -->

<!-- If you distribute this tutorial as part of a commercial offering, -->
<!-- you may NOT restrict redistribution of this tutorial (though you -->
<!-- may, of course, restrict redistribution of other items for which -->
<!-- you DO own the rights to). -->

<HR>
This page was last modified on 9-May-1996.
<P>
<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
</BODY>
</HTML>

