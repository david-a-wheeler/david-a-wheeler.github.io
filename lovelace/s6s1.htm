<HTML><HEAD>
<TITLE>Ada95 Lovelace Tutorial Section 6.1 - Type Float</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1><FONT COLOR="#996600">Section 6.1 - Type Float</FONT></H1>
For the next few sections we'll learn a little more about
Ada types. We've already seen Ada's built-in type Integer.
<P>
Like Integer, Ada also has a predefined type called <EM>Float</EM>.
Float can store fractional values and `large' values.
<EM>Float</EM> is used when you don't care about the
minimum or maximum range of numbers, nor about the minimum
accuracy of the value - the Ada compiler
will choose whatever is most `natural' for the machine.
Type `Float' is not appropriate if you
<EM>do</EM> care about the range or accuracy;
Ada has ways to specify these.
<P>
Float has all the arithmetic
(+, -, *, /, **, etc.) and comparison (=, /=, &gt;, &gt;=, &lt;, &lt;=)
operations you'd expect.
The ``**'' operator means ``exponentiate''.
<P>
Ada insists that types be correct in operations, and there
aren't any predefined operations for mixing Integer and Float using
+, -, *, or /. Thus, if you're using an Integer and Float together,
put a function called `Float()' around the Integer variables to
cause them to be converted into floating-point values.
This makes it clear when such conversions are taking place, which is
sometimes important in understanding what a program is doing.
Also, whenever you set a Float to a constant, the constant must
be written with a period in it, or the compiler will complain.
<P>
Here are some examples:
<!-- Form to permit compilation using WebAda removed. -->
<P>
<PRE>
 with Ada.Float_Text_IO;
 use Ada.Float_Text_IO;
 procedure Think is
   A, B : Float := 0.0; -- A and B initially zero; note the period.
   I, J : Integer := 1;
 begin
   A := B + 7.0;
   I := J * 3;
   B := Float(I) + A;
   Put(B);
 end Think;
</PRE>
<P>
<P>
It's important that you understand the general limitations of floating
point numbers on digital computers.
Floating point numbers are usually stored as a
binary approximation using a limited number of bits.
The upshot is that results are usually only
approximately the value you'd expect.
Even numbers that are represented exactly in decimal may only
be approximate when converted to an internal floating point number.
Thus, be wary of using "=" to compare
two floating point numbers.
This isn't specific to Ada - Fortran, C, Pascal, and so on
all do the same thing.
For more information on this subject, see
the survey by
<A HREF="biblio.htm#goldberg1991">David Goldberg [1991]</A>
on floating-point arithmetic.

<HR><P>
<IMG SRC="q.gif" ALT="" HEIGHT="34" WIDTH="23">
<A NAME="quiz"><FONT SIZE="+3" COLOR="#339900">Quiz:</FONT></A>
<P>
In procedure Think defined above, what will be printed out as
the final value of B?
<OL>
<LI><A HREF="s6s1r1.htm">10.0</A>
<LI><A HREF="s6s1r2.htm">0.0</A>
<LI><A HREF="s6s1r3.htm">7.0</A>
</OL>
<HR>
You may also:
<P>
<TABLE BORDER="0"><TR>
<TH><A HREF="s5sf.htm">
<IMG SRC="barrowl.gif" ALT="PREVIOUS " HEIGHT="31" WIDTH="31">
Go back to the previous section</A>
<P></TH>

<TH><A HREF="s6s2.htm">
<IMG SRC="barrowr.gif" ALT="NEXT     " HEIGHT="31" WIDTH="31">
Skip to the next section</A>
<P></TH>

<TH><A HREF="lesson6.htm">
<IMG SRC="barrowu.gif" ALT="OUTLINE  " HEIGHT="31" WIDTH="31">
Go up to lesson 6 outline</A>
<P></TH>
</TR></TABLE>
<P>

<P>
<FONT SIZE="2">
<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
<P>
The master copy of this file is at
"<A HREF="http://www.adahome.com/Tutorials/Lovelace/s6s1.htm">http://www.adahome.com/Tutorials/Lovelace/s6s1.htm</A>".
</FONT>
<!-- This text is part of the Ada95 Lovelace tutorial program. -->
<!-- For the contents of lesson 18, the following applies: -->
<!--  Copyright (C) 1996 Ada Resource Association -->
<!--  Copyright granted to the ARA under the condition that this text -->
<!--  will be redistributed to the public domain, without restriction; -->
<!--  you may use this information in any way you with, commercially or not, -->
<!--  without restriction. -->
<!-- = -->
<!-- For all other files in Ada95 Lovelace tutorial, the following applies: -->
<!--  Copyright (C) 2002 David A. Wheeler -->
<!--  This program is free software; you can redistribute it and/or modify -->
<!--  it under the terms of the GNU General Public License as published by -->
<!--  the Free Software Foundation; either version 2 of the License, or -->
<!--  (at your option) any later version. -->
<!--  This freedom only applies to the electronic version; the author -->
<!--  and/or publisher retain all rights to non-electronic versions. -->
<!-- = -->
<!-- This program is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the -->
<!-- GNU General Public License for more details. -->
<!-- = -->
<!-- You should have received a copy of the GNU General Public License -->
<!-- along with this program; if not, write to the Free Software -->
<!-- Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. -->
</BODY>
</HTML>
