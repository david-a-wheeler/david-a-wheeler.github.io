<HTML><HEAD>
<TITLE>Ada95 Lovelace Tutorial Section 6.5 - Arrays</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1><FONT COLOR="#996600">Section 6.5 - Arrays</FONT></H1>
An array type in Ada can contain many components with the same subtype.
An Ada array is quite similar to arrays in many other languages,
but here are some important things to know about them:
<P>
<OL>
<LI>
Ada array indices are not required to start at zero or one.
Array indices can begin (and end) with any discrete value - whatever
makes the most sense for the data.
This means that you can start arrays at -5 (if that makes sense),
and you can use enumerated values as indices as well.
Ada programs usually use a starting index of 1 if there's
no particularly natural starting point; this reduces the
probability of so-called ``one-off'' errors
(people normally count from one, not zero, and
can sometimes get confused when starting from zero).
<LI>
Like many other things in Ada, array accesses (both read and write)
are normally checked at run-time.
Thus, if the array index is out-of-bounds,
instead of quietly doing the wrong thing,
an <EM>exception</EM> will be raised.
This catches a surprisingly large number of errors.
<LI>
Multi-dimensional arrays are handled in an intuitive way.
<LI>
A directive can be used to <EM>pack</EM> arrays, which requests
the compiler to store the array in a memory-efficient way.
This is particularly handy for arrays of Boolean and Character values.
<LI>
Using a value from an array intentionally looks like a function call.
That way, if you change an array into a function, code that uses
the values often needs relatively few changes.
<LI>
You can define array types without completely fixing their
minimum and maximum size.
These are called `unconstrained' arrays.
While they are very useful, we will discuss them further later.
</OL>
<P>
Here are a few examples:
<P>
<PRE>
 -- Sample array type definitions:
  type Table is array(1 .. 100) of Integer; -- 100 Integers.
  type Schedule is array(Day) of Boolean; -- Seven Booleans, one per Day
  type Grid is array(-100 .. 100, -100 .. 100) of Float; -- 40401 Floats.
 -- Sample variable declarations:
  Products_On_Hand : Table;   -- This variable has 100 Integers.
  Work_Schedule : Schedule;
  Temperature : Grid;
 -- And sample uses:
  Products_On_Hand(1) := 20;  -- We have 20 of Product number 1
  Work_Schedule(Sunday) := False; -- We don't work on Sunday.
  Temperature(0,0) := 100.0;  -- Set temperature to 100.0 at grid point (0,0).
  Put(Products_On_Hand(1)); -- Print out the number 20.
</PRE>


<!-- No quiz question -->
<P>
<HR>
<P>
There is no quiz question for this section.
<P>
<IMG SRC="pright.gif" ALT="" HEIGHT="14" WIDTH="33">
<A HREF="s6s6.htm">
<FONT SIZE="+1"><STRONG>You may go to the next section.</STRONG></FONT></A>
<P>
<HR>
You may also:
<P>

<TABLE BORDER="0"><TR>
<TH><A HREF="s6s4.htm">
<IMG SRC="barrowl.gif" ALT="PREVIOUS " HEIGHT="31" WIDTH="31">
Go back to the previous section</A>
<P></TH>

<TH><A HREF="lesson6.htm">
<IMG SRC="barrowr.gif" ALT="OUTLINE  " HEIGHT="31" WIDTH="31">
Go up to the outline of lesson 6</A>
<P></TH>
</TR></TABLE>
<P>

<P>
<FONT SIZE="2">
<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
<P>
The master copy of this file is at
"<A HREF="http://www.adahome.com/Tutorials/Lovelace/s6s5.htm">http://www.adahome.com/Tutorials/Lovelace/s6s5.htm</A>".
</FONT>
<!-- This text is part of the Ada95 Lovelace tutorial program. -->
<!-- For the contents of lesson 18, the following applies: -->
<!--  Copyright (C) 1996 Ada Resource Association -->
<!--  Copyright granted to the ARA under the condition that this text -->
<!--  will be redistributed to the public domain, without restriction; -->
<!--  you may use this information in any way you with, commercially or not, -->
<!--  without restriction. -->
<!-- = -->
<!-- For all other files in Ada95 Lovelace tutorial, the following applies: -->
<!--  Copyright (C) 2002 David A. Wheeler -->
<!--  This program is free software; you can redistribute it and/or modify -->
<!--  it under the terms of the GNU General Public License as published by -->
<!--  the Free Software Foundation; either version 2 of the License, or -->
<!--  (at your option) any later version. -->
<!--  This freedom only applies to the electronic version; the author -->
<!--  and/or publisher retain all rights to non-electronic versions. -->
<!-- = -->
<!-- This program is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the -->
<!-- GNU General Public License for more details. -->
<!-- = -->
<!-- You should have received a copy of the GNU General Public License -->
<!-- along with this program; if not, write to the Free Software -->
<!-- Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. -->
</BODY>
</HTML>
