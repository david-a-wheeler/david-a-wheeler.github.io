<HTML><HEAD>
<TITLE>Ada95 Lovelace Tutorial Section 1.1 - What is Ada?</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>
<BODY BGCOLOR="#FFFFFF">
<H1><FONT COLOR="#996600">Section 1.1 - What is Ada?</FONT></H1>
Ada is a computer programming language originally designed to support the
construction of long-lived, highly reliable software systems.
Its design emphasizes readability, avoids error-prone notation,
encourages reuse and team coordination, and it is designed to be
efficiently implementable.
<P>
<IMG SRC="nobug.gif" ALT="" HEIGHT=29 WIDTH=37 ALIGN=right>
A significant advantage of Ada is its reduction of debugging time.
Ada tries to catch as many errors as reasonably possible, as early as possible.
Many errors are caught at compile-time by Ada that aren't caught or
are caught much later by other computer languages.
Ada programs also catch many errors at run-time if they can't be caught
at compile-time (this checking can be turned off to improve performance
if desired).
In addition, Ada includes a problem (exception) handling mechanism so that
these problems can be dealt with at run-time.

<H2>Who uses Ada?</H2>

Ada was originally designed for the U.S. Department of Defense (DoD) for
real-time embedded systems.
Ada is the most commonly used language in U.S. weapons systems
modernization
<A HREF="doduse.htm">(more
information about the DoD use of Ada is available).</A>
<P>
<IMG SRC="jet.gif" ALT="" HEIGHT=31 WIDTH=32 ALIGN=right>
However, Ada's user base has expanded far beyond the U.S. DoD
to many other areas such as
large-scale information systems, distributed systems,
and scientific computation.
Major Ada niches include aerospace and safety-critical systems.
An <A HREF="http://www.comlab.ox.ac.uk/archive/safety/lang-survey.html">informal
1994 survey</A>
concluded that Ada was the most popular language for safety-critical systems.
<P>
People use Ada for small projects as well as large ones, since Ada's
error-catching capabilities (both compile-time and run-time)
significantly reduce debugging time.
Also, Ada's parallel constructs can take advantage of today's more advanced
operating systems (such as Microsoft's Windows NT and Linux).
<P>
Many people use Ada when the application must run quickly.
The Ada programming language was designed to be efficiently
implementable, since one of its key application domains is in real-time
embedded systems (where efficiency is critical).
The actual efficiency of an Ada program, of course,
depends on the the algorithms selected and the actual Ada compiler used.
The first Ada compilers, like many other first compilers of a given language,
generated inefficient code; modern Ada compilers
generally generate relatively good code.
Sadly, the performance of the initial Ada compilers created a myth of
slow execution that is only beginning to disappear.
The best test of efficiency, of course,
is to benchmark a specific compiler with the
type of problem you wish to solve.

<H2>Where and how is Ada standardized?</H2>

Ada was originally standardized by ANSI in 1983
(ISO released an equivalent standard in 1987).
Ada was recently revised to add some new capabilities;
this revision is called `Ada 9X' or `Ada 95'.
<!-- Its revision was actually completed in 1994, -->
<!-- but due to paperwork delays at -->
<!-- ISO it's technically considered a 1995 standard. -->
Ada compiler vendors have generally updated their compilers to
add the new Ada 95 features.
This tutorial covers the capabilities of Ada 95, but will note which
features are new to Ada 95.
<P>
<IMG SRC="book05.gif" ALT="" HEIGHT=33 WIDTH=33 ALIGN=right>
Ada is officially defined in its <EM>reference manual</EM> (RM).
<A HREF="http://www.adahome.com/rm95/rm9x-toc.html">The
complete Ada 95 RM is available on-line as a hypertext document</A>.
However, the RM is not intended to be a tutorial and can be
hard to understand if you're not already somewhat familiar with Ada.
We will often refer to the RM, and feel free to look at it if you're
interested in more detail about a particular subject.
<P>
Ada was not designed by a committee.
The original Ada design was the winner of a language design competition;
the winning team was headed by Jean Ichbiah
(Ichbiah's language was called "Green").
The 1995 revision of Ada (Ada 95)
was developed by a small team led by Tucker Taft.
In both cases, the design underwent a public comment period where the
designers responded to public comments.
<P>

<H2>What exactly are Ada's capabilities?</H2>
<OL>
<LI>Packages (modules) of related types, objects,
and operations can be defined.
<LI>Packages and types can be made generic (parameterized through a template)
to help create reusable components.
<LI>Errors can be signalled as exceptions and handled explicitly.
Many serious errors (such as computational overflow and invalid
array indexes) are automatically caught and handled
through this exception mechanism, improving program reliability.
<LI>Tasks (multiple parallel threads of control) can be created and communicate.
This is a major capability not supported in a standard way by many
other languages.
<LI>Data representation can be precisely controlled to support
systems programming.
<LI>A predefined library is included; it provides input/output (I/O),
string manipulation, numeric functions,
a command line interface, and a random number generator
(the last two were available in Ada 83, but are standardized in Ada 95).
<LI>Object-oriented
programming is supported (this is a new feature of Ada 95).
In fact, Ada 95 is the first internationally
standardized object-oriented programming language.
<LI>Interfaces to other languages (such as C, Fortran, and COBOL)
are included in the language (these have been significantly
enhanced in Ada 95).
At least one Ada compiler (from Intermetrics)
can generate Java Virtual Machine (J-code)
from Ada, so people can
<A HREF="java.htm">use Ada
to develop Java applets and applications</A>.
</OL>

<H2>What's available for Ada?</H2>
<P>
There are
<A HREF="http://www.adahome.com/Resources/Compilers/Compilers.html">many
Ada compilers</A>, including
<A HREF="http://www.adahome.com/Resources/Compilers/GNAT.html">a
free Ada 95 compiler called GNAT
based on the Free Software Foundation's gcc</A>.
<A HREF="http://www.adahome.com/Resources/Tools/Tools.html">There
are also many Ada-related tools</A>
and
<A HREF="http://www.adahome.com/Resources/References.html">on-line
reference documents</A>.
<A HREF="s14sf.htm">A later section of this tutorial
provides more information about on-line Ada information sources.</A>

<HR><P>
<IMG SRC="q.gif" ALT="" HEIGHT="34" WIDTH="23">
<A NAME="quiz"><FONT SIZE="+3" COLOR="#339900">Quiz:</FONT></A>
<P>
Which of the following is <EM>not</EM> an Ada capability?
<OL>
<LI><A HREF="s1s1r1.htm">Reduce errors and debugging time through early detection</A>
<LI><A HREF="s1s1r2.htm">Object-oriented programming</A>
<LI><A HREF="s1s1r3.htm">Efficiently implementable</A>
<LI><A HREF="s1s1r4.htm">None of the above - Ada has all three of these capabilities.</A>
</OL>
<HR>
You may also:
<P>
<TABLE BORDER="0"><TR>
<TH><A HREF="lovelace.htm">
<IMG SRC="barrowl.gif" ALT="PREVIOUS " HEIGHT="31" WIDTH="31">
Go back to the tutorial home page</A>
<P></TH>

<TH><A HREF="skip1s1.htm">
<IMG SRC="barrowr.gif" ALT="NEXT     " HEIGHT="31" WIDTH="31">
Skip to the next section</A>
<P></TH>

<TH><A HREF="lesson1.htm">
<IMG SRC="barrowu.gif" ALT="OUTLINE  " HEIGHT="31" WIDTH="31">
Go up to lesson 1 outline</A>
<P></TH>
</TR></TABLE>
<P>


<P>
<FONT SIZE="2">
<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
<P>
The master copy of this file is at
"<A HREF="http://www.adahome.com/Tutorials/Lovelace/s1s1.htm">http://www.adahome.com/Tutorials/Lovelace/s1s1.htm</A>".
</FONT>
<!-- This text is part of the Ada95 Lovelace tutorial program. -->
<!-- For the contents of lesson 18, the following applies: -->
<!--  Copyright (C) 1996 Ada Resource Association -->
<!--  Copyright granted to the ARA under the condition that this text -->
<!--  will be redistributed to the public domain, without restriction; -->
<!--  you may use this information in any way you with, commercially or not, -->
<!--  without restriction. -->
<!-- = -->
<!-- For all other files in Ada95 Lovelace tutorial, the following applies: -->
<!--  Copyright (C) 2002 David A. Wheeler -->
<!--  This program is free software; you can redistribute it and/or modify -->
<!--  it under the terms of the GNU General Public License as published by -->
<!--  the Free Software Foundation; either version 2 of the License, or -->
<!--  (at your option) any later version. -->
<!--  This freedom only applies to the electronic version; the author -->
<!--  and/or publisher retain all rights to non-electronic versions. -->
<!-- = -->
<!-- This program is distributed in the hope that it will be useful, -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the -->
<!-- GNU General Public License for more details. -->
<!-- = -->
<!-- You should have received a copy of the GNU General Public License -->
<!-- along with this program; if not, write to the Free Software -->
<!-- Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. -->
</BODY>
</HTML>
