<HTML><HEAD>
<TITLE>Lovelace Ada Tutor - Organization Notes</TITLE>
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<LINK REV="made" HREF="mailto:dwheeler&#64;dwheeler.com">
</HEAD>

<BODY BGCOLOR="#FFFFFF">
<H1>Lovelace Organization Notes</H1>
<P>
Here are some quick notes on the organization of this tutorial:
<OL>
<LI>
The tutorial is broken into a set of lessons (numbered 1, 2, 3 ...),
which are further broken into sections (numbered 1.1, 1.2, ...).
Each section is short, explaining a few key concepts.
<LI>
Each section usually ends with a single-question quiz.
The purpose of these quizzes is to make sure that you've grasped at least
some of the principles in that section.
You may skip the quizzes, but I recommend that you
take each quiz - the process of taking each quiz will help you
remember the key points.
Most current WWW tutorials don't include quizzes and
are merely static, non-interactive books.
Lovelace, by contrast, is much more interactive and
uses the quizzes to help you remember the material through reinforcement.
There's no penalty for wrong answers.
<LI>
The tutorial is organized so users can quickly learn enough basics to
write simple programs, and then expand that knowledge for more
complex programs.
</OL>
<P>
<IMG SRC="pc04.gif" ALT="" WIDTH=31 HEIGHT=32 ALIGN=right>
This tutorial is different from much of the freely-available courseware,
since it assumes that the user already has had exposure to some other
algorithmic programming language (such as Pascal, C, C++, or Fortran).
Thus, discussions on what are variables, the semantics of assignment and
ordinary expressions, and so on are glossed over.
I intentionally give examples of similar capabilities in Pascal, C, and C++,
because many of the users will already be familiar with those languages.
A different kind of tutorial would be needed for those without such knowledge.
<P>
The goal of this tutorial is for people to become (beginning) Ada programmers,
who can write some Ada code and read a great deal more.
Thus syntax diagrams are shown so that the tutorial user can understand it
formally enough to actually <EM>write</EM> legal Ada constructs.
<P>
Organization is always a tricky issue for a tutorial.
This one starts `top down' for a short time so that users can quickly
get the highlights, but then switches to a `bottom up' approach.
I would have preferred to start `bottom up' later, but it quickly became
difficult to describe things without defining terms.
Hopefully, this tutorial has the advantages of both a `top down' and
`bottom up' approach.
<P>
This tutorial is designed to have ``zero startup cost''.
By intent, users only need a WWW browser (such as Mosaic or Netscape) -
there's no requirement to install a compiler or any other tool.
Thus, people who are just `Internet surfing' could simply start using this
right away.
Naturally, people will learn best if they actually try to build their
own programs, but that's not <EM>required</EM> by this course.
<P>
Lovelace supports:
<UL>
<LI>interactive quizzes (at the end of most sections)
<LI>interactive compilation - in many places
in the tutorial you can "click" on a button to compile the example source code.
<LI>automatic notification of Lovelace updates (if requested)
</UL>
<P>
Web browsers vary in their capabilities.
I've designed Lovelace so that
even those with text-only browsers or slow connections
can use the tutorial, and
those with more capable browsers will see progressively improved results.
Lovelace does use ``more advanced'' capabilities
(HTML tables, interactive forms, backgrounds, transparent and animated GIFs,
and varying font sizes and colors),
but only in ways permit less capable browsers to be used as well. 
<P>
As a related note, this tutor is designed so that it can be easily extended
by others at different locations.
There is a tutorial generator used to reduce tutorial development time
(which also creates a common `look and feel').
Things are designed so that, with a trivial amount of
work on the lesson developer's part,
users can go from lesson to lesson without noticing that they're working
with lessons developed by different people.
At this time this capability has not been used, but perhaps other
tutorial writers will take advantage of it.
<P>
You may now see:
<UL>
<LI><A HREF="about.ps">The paper "Lovelace: An Ada 95 Tutorial", which
describes Lovelace (Postscript format).</A>
<LI><A HREF="philos.htm">More information about
my philosophy of computer languages.</A>
<LI><A HREF="lversion.htm">
More information about the current version and change history
of Lovelace.</A>
<LI><A HREF="dwheeler.htm">More information about me (David A. Wheeler).</A>
</UL>
<P>
<A HREF="lovelace.htm">
<IMG ALIGN=bottom SRC="tinyhome.gif" ALT="HOME     ">
You may return to the Lovelace home page.</A>
<P>


<!-- This homepage (C) David A. Wheeler 1994 -->
<!-- Redistributable under the terms of the FSF General Public License -->

<!-- This homepage and all related tutorial pages are -->
<!-- copyright of various developers; if not noted otherwise they are -->
<!-- copyright (C) David A. Wheeler 1994 -->
<!-- The pages of this tutorial are released for use under the terms of the -->
<!-- FSF General Public License (GPL), also called a "copyleft". -->

<!-- Feel free to include this tutorial as part of both commercial -->
<!-- and non-commercial products, and feel free to edit the text. -->
<!-- Where you HAVE modified the text, make sure -->
<!-- that you note who did so. -->
<!-- However, if you modify this tutorial, you must make the source of the -->
<!-- resulting text freely available for unlimited distribution without -->
<!-- royalties, per the GPL. -->

<!-- If you distribute this tutorial as part of a commercial offering, -->
<!-- you may NOT restrict redistribution of this tutorial (though you -->
<!-- may, of course, restrict redistribution of other items for which -->
<!-- you DO own the rights to). -->

<ADDRESS><A HREF="dwheeler.htm">David A. Wheeler (dwheeler&#64;dwheeler.com)</A></ADDRESS>
</BODY>
</HTML>
