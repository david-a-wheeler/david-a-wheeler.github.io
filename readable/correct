x
(substring "Hello" 3 4)
(define x 5)
(+ 3 4)
(pi)
(pi)
(pi)
(pi)
(z a (b c) (d) e (f g))
(z (quote ()))
(z ())
(f 1 2 3)
(+ 3 4)
(++ 3 4)
(define ++ 5)
(3 + 4)
(quote (+ 3 4))
(quote (+ 3 4))
(quote (3 + 4))
(x (quote #{.}#))
(+ 2 (* 3 (/ 10 (- 3 1))))
(defun factorial (n) (if (<= n 1) 1 (* n (factorial (- n 1)))))
(define (factorial n) (if (<= n 1) 1 (* n (factorial (- n 1)))))
(define (factorial n) (if (<= n 1) 1 (* n (factorial (- n 1)))))
(do ((x 1 (+ x 1)) (y 1 (* y 2))) ((> x 5) y) (print y))
(do ((x 1 (+ x 1)) (y 1 (* y 2))) ((> x 5) y) (print y))
(f)
(f a)
(f a b)
(f a b c)
(f a b c d)
(f (+ 3 4))
(+ 3 4 5)
(define (sum3 a b c) (+ a b c))
(sum3 1 2 3)
(sum3 (+ 1 2) 2 3)
(sum3 (* 2 2) 1 2)
(* 2 3)
(- 2)
(f (+ (+ 2 (* 3 5)) (* 5 7)))
(f (+ 2 5 7))
(define (move-n-turn angle) (tortoise-move 100) (tortoise-turn angle))
(define (polygon n) (do ((i n (- i 1))) ((zero? i)) (move-n-turn (/ 360 n))))
(define && and)
(define ++ *)
(define ++ * +)
(a (b c))
(a (b c))
