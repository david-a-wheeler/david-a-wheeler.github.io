Classtime - starting discussion


1 - Introduction
  "Why is it important that software be secure?  What could happen
   if it's not?"

2 - Input Validation
   - A student GOT A RAISE due to this class, WHILE taking
     class, by securing a key program of his organization.
     The key approach: input validation (this session).
   - What are some potential input sources?  What rules might you use
     to check that the input is valid (or not)?
   

3 - Buffer Overflows
  Review previous week - work out some sample regexes.
  - Version number NUM.NUM.NUM  : ensure that they use "\." not ".".
    How change so last ".NUM" is optional?  : Add "(...)?" around last part.
  - yes or no : "^(yes|no)$" note the parentheses.
  - Basic email address:
    ^[A-Za-z0-9.-]+@[A-Za-z0-9-](\.[A-Za-z0-9-])+$

4 - Design

5 - Call out to other resources

6 - Output, Web Applications, Top weakness lists, taxonomies

7 - Cryptography

8 - Error Handling, Resource Handling, Debug Code, and Vulnerable/Obsolete Libraries

9 - Dynamic (Misc)

10 - Miscellaneous



More info:

Computer and Network Incident Taxonomy
A Common Language for Computer Security Incidents
John D. Howard, Thomas A. Longstaff
Printed October 1998
SAND98-8667
Unlimited Release
http://www.cert.org/research/taxonomy_988667.pdf




http://cwe.mitre.org/documents/sources/ASoftwareFlawTaxonomy-AimingToolsatSecurity%5BWeber,Karger,Paradkar%5D.pdf
A Software Flaw Taxonomy: Aiming Tools At Security
Sam Weber Paul A. Karger Amit Paradkar
(samweber|karger|paradkar)@watson.ibm.com

